apiVersion: batch/v1
kind: Job
metadata:
  name: {{ template "bundle.fullname" . }}-{{ .Values.apiRegistrationJobName }}
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ template "bundle.fullname" . }}
    component: {{ template "bundle.fullname" . }}-{{ .Values.apiRegistrationJobName }}
spec:
  template:
    metadata:
      labels:
        app: {{ template "bundle.fullname" . }}
        component: {{ template "bundle.fullname" . }}-{{ .Values.apiRegistrationJobName }}
      annotations:
        sidecar.istio.io/inject: "false"
    spec:
      restartPolicy: Never
      containers:
      - name: {{ .Values.apiRegistrationJobName }}
        image: "eu.gcr.io/kyma-project/incubator/api-registration-job:master"
        imagePullPolicy: Always
        envFrom:
        - configMapRef:
            name: {{ template "bundle.fullname" . }}-{{ .Values.apiRegistrationJobName }}
        volumeMounts:
        - name: {{ template "bundle.fullname" . }}-volume
          mountPath: /app/files/
      volumes:
      - name: {{ template "bundle.fullname" . }}-volume
        configMap:
          name: {{ template "bundle.fullname" . }}-{{ .Values.apiRegistrationJobName }}-api
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "bundle.fullname" . }}-{{ .Values.mqttEventBridgeName }}
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ template "bundle.fullname" . }}
    component: {{ template "bundle.fullname" . }}-{{ .Values.mqttEventBridgeName }}
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: {{ template "bundle.fullname" . }}
        component: {{ template "bundle.fullname" . }}-{{ .Values.mqttEventBridgeName }}
      annotations:
        sidecar.istio.io/inject: "true"
    spec:
      containers:
      - name: {{ .Values.mqttEventBridgeName }}
        image: "eu.gcr.io/kyma-project/incubator/mqtt-event-bridge:master"
        imagePullPolicy: Always
        ports:
        - name: http
          containerPort: 8080
        envFrom:
        - configMapRef:
            name: {{ template "bundle.fullname" . }}-{{ .Values.mqttEventBridgeName }}
---
kind: Service
apiVersion: v1
metadata:
  name: {{ template "bundle.fullname" . }}-{{ .Values.mqttEventBridgeName }}
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ template "bundle.fullname" . }}
    component: {{ template "bundle.fullname" . }}-{{ .Values.mqttEventBridgeName }}
spec:
  selector:
    component: {{ template "bundle.fullname" . }}-{{ .Values.mqttEventBridgeName }}
  ports:
    - port: 8080
      name: http
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: {{ template "bundle.fullname" . }}-{{ .Values.mqttEventBridgeName }}
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ template "bundle.fullname" . }}
    component: {{ template "bundle.fullname" . }}-{{ .Values.mqttEventBridgeName }}
spec:
  gateways:
  - kyma-gateway.kyma-system.svc.cluster.local
  hosts:
  - {{ template "mqtt_server" . }}
  http:
  - match:
    - uri:
        regex: /.*
    route:
    - destination:
        host: {{ template "bundle.fullname" . }}-{{ .Values.mqttEventBridgeName }}
        port:
          number: 8080
    websocketUpgrade: true
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "bundle.fullname" . }}-{{ .Values.oauthServerName }}
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ template "bundle.fullname" . }}
    component: {{ template "bundle.fullname" . }}-{{ .Values.oauthServerName }}
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: {{ template "bundle.fullname" . }}
        component: {{ template "bundle.fullname" . }}-{{ .Values.oauthServerName }}
    spec:
      containers:
      - name: {{ .Values.oauthServerName }}
        image: "eu.gcr.io/kyma-project/incubator/oauth2server:master"
        imagePullPolicy: Always
        ports:
        - name: http
          containerPort: 8080
        envFrom:
        - configMapRef:
            name: {{ template "bundle.fullname" . }}-{{ .Values.oauthServerName }}
---
kind: Service
apiVersion: v1
metadata:
  name: {{ template "bundle.fullname" . }}-{{ .Values.oauthServerName }}
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ template "bundle.fullname" . }}
    component: {{ template "bundle.fullname" . }}-{{ .Values.oauthServerName }}
spec:
  selector:
    component: {{ template "bundle.fullname" . }}-{{ .Values.oauthServerName }}
  ports:
    - port: 8080
      name: http
  sessionAffinity: None
  type: ClusterIP
---
apiVersion: authentication.istio.io/v1alpha1
kind: Policy
metadata:
  name: marketing-connector-oauth2server-policy
  namespace: kyma-integration
  labels:
    app: {{ template "bundle.fullname" . }}
    component: {{ template "bundle.fullname" . }}-{{ .Values.oauthServerName }}
spec:
  peers:
  - mtls:
      mode: PERMISSIVE
  targets:
  - name: {{ template "bundle.fullname" . }}-{{ .Values.oauthServerName }}
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: {{ template "bundle.fullname" . }}
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ template "bundle.fullname" . }}
    component: {{ template "bundle.fullname" . }}-{{ .Values.oauthServerName }}
  annotations:
    nginx.ingress.kubernetes.io/ingress-class: nginx
spec:
  rules:
  - host: {{ template "oauth_server" . }}
    http:
      paths:
      - path: /
        backend:
          serviceName: {{ template "bundle.fullname" . }}-{{ .Values.oauthServerName }}
          servicePort: 8080
  tls:
  - hosts:
    - {{ template "oauth_server" . }}
    secretName: application-connector-ingress-tls-cert
