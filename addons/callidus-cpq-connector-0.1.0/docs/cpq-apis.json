{
  "swagger": "2.0",
  "info": { "version": "v1", "title": "CPQ Web API help" },
  "host": "devstable.webcomcpq.com",
  "schemes": ["https"],
  "paths": {
    "/api/v1/admin/Admin/GenerateSecretKey": {
      "get": {
        "tags": ["Admin"],
        "summary": "Generates the secret key suitable for SHA-256.",
        "operationId": "Admin_GenerateSecretKey",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "string" } }
        }
      }
    },
    "/api/v1/admin/Admin/GetFileResponseMessage": {
      "get": {
        "tags": ["Admin"],
        "summary": "Gets the file response message.",
        "operationId": "Admin_GetFileResponseMessage",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "fileName",
            "in": "query",
            "description": "Name of the file.",
            "required": true,
            "type": "string"
          },
          {
            "name": "content._buffer",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "content._origin",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._position",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._length",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._capacity",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._expandable",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content._writable",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content._exposable",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content._isOpen",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content.__identity",
            "in": "query",
            "required": false,
            "type": "object"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/api/rd/v1/ApprovalHistory/GetApprovalHistoryModelInit": {
      "get": {
        "tags": ["ApprovalHistory"],
        "summary": "Gets the initial approval history model.",
        "operationId": "ApprovalHistory_GetApprovalHistoryModelInit",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "rc",
            "in": "query",
            "description": "The crypted cart id.",
            "required": true,
            "type": "string"
          },
          {
            "name": "ro",
            "in": "query",
            "description": "The crypted owner id.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.ApprovalHistory.ApprovalHistoryResponse"
            }
          }
        }
      }
    },
    "/api/rd/v1/ApprovalHistory/GetApprovalHistoryModel": {
      "get": {
        "tags": ["ApprovalHistory"],
        "summary": "Gets the approval history model.",
        "operationId": "ApprovalHistory_GetApprovalHistoryModel",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "filter.currentPage",
            "in": "query",
            "description": "Gets or sets the current page.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "filter.itemsPerPage",
            "in": "query",
            "description": "Gets or sets the items per page.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "filter.sortMethod",
            "in": "query",
            "description": "Gets or sets the sort method.",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.orderByColumn",
            "in": "query",
            "description": "Gets or sets the order by column.",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.search",
            "in": "query",
            "description": "Gets or sets the search.",
            "required": false,
            "type": "object"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.ApprovalHistory.ApprovalHistoryResponse"
            }
          }
        }
      }
    },
    "/api/rd/v1/ApprovalHistory/GetFileResponseMessage": {
      "get": {
        "tags": ["ApprovalHistory"],
        "summary": "Gets the file response message.",
        "operationId": "ApprovalHistory_GetFileResponseMessage",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "fileName",
            "in": "query",
            "description": "Name of the file.",
            "required": true,
            "type": "string"
          },
          {
            "name": "content._buffer",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "content._origin",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._position",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._length",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._capacity",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._expandable",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content._writable",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content._exposable",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content._isOpen",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content.__identity",
            "in": "query",
            "required": false,
            "type": "object"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/api/rd/v1/Approvals/GetApprovalModel": {
      "get": {
        "tags": ["Approvals"],
        "summary": "Gets the approval model.",
        "operationId": "Approvals_GetApprovalModel",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Approvals.ApprovalResponse"
            }
          }
        }
      }
    },
    "/api/rd/v1/Approvals/GetOneClickApprovalResponse": {
      "get": {
        "tags": ["Approvals"],
        "summary": "Gets the one click approval response.",
        "operationId": "Approvals_GetOneClickApprovalResponse",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "ownerId",
            "in": "query",
            "description": "The owner identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "cartId",
            "in": "query",
            "description": "The cart identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "actionId",
            "in": "query",
            "description": "The action identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Approvals.ApprovalsLandingResponse"
            }
          }
        }
      }
    },
    "/api/rd/v1/Approvals/ExecuteAction": {
      "post": {
        "tags": ["Approvals"],
        "summary": "Executes the action.",
        "operationId": "Approvals_ExecuteAction",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "description": "The data.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Approvals.ExecuteActionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Approvals.ApprovalResponse"
            }
          }
        }
      }
    },
    "/api/rd/v1/Approvals/RetractApprovalProcess": {
      "post": {
        "tags": ["Approvals"],
        "summary": "Retract approval process action.",
        "operationId": "Approvals_RetractApprovalProcess",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "comment",
            "in": "query",
            "description": "Retract explanation comment.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Approvals.ApprovalResponse"
            }
          }
        }
      }
    },
    "/api/rd/v1/Approvals/RetractExpiredApprovalRules": {
      "post": {
        "tags": ["Approvals"],
        "summary": "Retract expired approval rules - rules which are rejected and not violated anymore.",
        "operationId": "Approvals_RetractExpiredApprovalRules",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Approvals.ApprovalResponse"
            }
          }
        }
      }
    },
    "/api/rd/v1/Approvals/GetFileResponseMessage": {
      "get": {
        "tags": ["Approvals"],
        "summary": "Gets the file response message.",
        "operationId": "Approvals_GetFileResponseMessage",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "fileName",
            "in": "query",
            "description": "Name of the file.",
            "required": true,
            "type": "string"
          },
          {
            "name": "content._buffer",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "content._origin",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._position",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._length",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._capacity",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._expandable",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content._writable",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content._exposable",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content._isOpen",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content.__identity",
            "in": "query",
            "required": false,
            "type": "object"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/api/v1/admin/AssetDefinition/GetInitData": {
      "get": {
        "tags": ["AssetDefinition"],
        "summary": "Gets the initialize data.",
        "operationId": "AssetDefinition_GetInitData",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.Admin.Assets.AssetDefinitionResponse"
            }
          }
        }
      }
    },
    "/api/v1/admin/AssetDefinition/SaveAssetDefinition": {
      "post": {
        "tags": ["AssetDefinition"],
        "summary": "Saves the asset definition.",
        "operationId": "AssetDefinition_SaveAssetDefinition",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "fields",
            "in": "body",
            "description": "The fields.",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Webcom.Configurator.Core.AssetFieldDefinition"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.Admin.Assets.AssetDefinitionResponse"
            }
          }
        }
      }
    },
    "/api/v1/admin/AssetDefinition/GenerateSecretKey": {
      "get": {
        "tags": ["AssetDefinition"],
        "summary": "Generates the secret key suitable for SHA-256.",
        "operationId": "AssetDefinition_GenerateSecretKey",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "string" } }
        }
      }
    },
    "/api/v1/admin/AssetDefinition/GetFileResponseMessage": {
      "get": {
        "tags": ["AssetDefinition"],
        "summary": "Gets the file response message.",
        "operationId": "AssetDefinition_GetFileResponseMessage",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "fileName",
            "in": "query",
            "description": "Name of the file.",
            "required": true,
            "type": "string"
          },
          {
            "name": "content._buffer",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "content._origin",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._position",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._length",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._capacity",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._expandable",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content._writable",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content._exposable",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content._isOpen",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content.__identity",
            "in": "query",
            "required": false,
            "type": "object"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/api/rd/v1/Assets/GetInitData": {
      "get": {
        "tags": ["Assets"],
        "summary": "Gets the initialize data.",
        "operationId": "Assets_GetInitData",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Assets.AssetsResponse"
            }
          }
        }
      }
    },
    "/api/rd/v1/Assets/GetData": {
      "post": {
        "tags": ["Assets"],
        "summary": "Gets the data.",
        "operationId": "Assets_GetData",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Assets.AssetsListRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Assets.AssetsResponse"
            }
          }
        }
      }
    },
    "/api/rd/v1/Assets/SaveFilter": {
      "post": {
        "tags": ["Assets"],
        "summary": "Saves the filter.",
        "operationId": "Assets_SaveFilter",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Assets.AssetsListRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Webcom.API.StatusVm" }
          }
        }
      }
    },
    "/api/rd/v1/Assets/RenewAssets": {
      "post": {
        "tags": ["Assets"],
        "summary": "Renews the assets.",
        "operationId": "Assets_RenewAssets",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "selectedAssets",
            "in": "body",
            "description": "The selected assets.",
            "required": true,
            "schema": {
              "type": "array",
              "items": { "format": "int32", "type": "integer" }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Webcom.API.RedirectResponse" }
          }
        }
      }
    },
    "/api/rd/v1/Assets/GetFileResponseMessage": {
      "get": {
        "tags": ["Assets"],
        "summary": "Gets the file response message.",
        "operationId": "Assets_GetFileResponseMessage",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "fileName",
            "in": "query",
            "description": "Name of the file.",
            "required": true,
            "type": "string"
          },
          {
            "name": "content._buffer",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "content._origin",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._position",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._length",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._capacity",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._expandable",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content._writable",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content._exposable",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content._isOpen",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content.__identity",
            "in": "query",
            "required": false,
            "type": "object"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/setup/api/v1/admin/attributes/{standardAttributeCode}/values/maxRank": {
      "get": {
        "tags": ["Attribute"],
        "summary": "Gets max attribute values rank for attribute with provided code",
        "operationId": "Attribute_GetMaxAttributeValueRank",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "standardAttributeCode",
            "in": "path",
            "description": "Standard attribute code",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "format": "int32", "type": "integer" }
          }
        }
      }
    },
    "/setup/api/v1/admin/attributes/{standardAttributeCode}/containerAttributeValues": {
      "get": {
        "tags": ["Attribute"],
        "summary": "Gets container attribute values for attribute with provided standard attribute code",
        "operationId": "Attribute_GetContainerAttributeValues",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "standardAttributeCode",
            "in": "path",
            "description": "Standard attribute code",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.Common.Models.PagedDataVM[Webcom.API.SetupSPA.Attributes.VM.ContainerAttributeValueRowVM]"
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/attributes/types": {
      "get": {
        "tags": ["Attribute"],
        "summary": "Get attribute lookups for products",
        "operationId": "Attribute_GetAttributeProductLookup",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Webcom.API.SetupSPA.Common.LookupVM[System.String]"
              }
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/attributes/SystemId": {
      "get": {
        "tags": ["Attribute"],
        "summary": "Gets system id",
        "operationId": "Attribute_GetSystemId",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "string" } }
        }
      }
    },
    "/setup/api/v1/admin/attributes": {
      "get": {
        "tags": ["Attribute"],
        "summary": "Gets attributes",
        "operationId": "Attribute_GetAttributes",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.Common.Models.PagedDataVM[Webcom.API.SetupSPA.Attributes.VM.AttributeRowVM]"
            }
          }
        }
      },
      "post": {
        "tags": ["Attribute"],
        "summary": "Saves attribute",
        "operationId": "Attribute_Save",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "attributeVM",
            "in": "body",
            "description": "Attribute VM",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Webcom.API.SetupSPA.Attributes.VM.AttributeVM"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "format": "int32", "type": "integer" }
          }
        }
      }
    },
    "/setup/api/v1/admin/attributes/value/systemId/{name}": {
      "get": {
        "tags": ["Attribute"],
        "operationId": "Attribute_GetValueSystemId",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          { "name": "name", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "string" } }
        }
      }
    },
    "/setup/api/v1/admin/attributes/{id}": {
      "get": {
        "tags": ["Attribute"],
        "summary": "Gets attribute",
        "operationId": "Attribute_GetAttribute",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Attribute id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.SetupSPA.Attributes.VM.AttributeVM"
            }
          }
        }
      },
      "delete": {
        "tags": ["Attribute"],
        "summary": "Deletes Attribute",
        "operationId": "Attribute_DeleteAttribute",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": { "204": { "description": "No Content" } }
      }
    },
    "/setup/api/v1/admin/attributes/measurements": {
      "get": {
        "tags": ["Attribute"],
        "summary": "Get all measurements",
        "operationId": "Attribute_GetAllMeasurements",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Webcom.API.SetupSPA.Common.LookupVM[System.String]"
              }
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/attributes/container/totalTypes": {
      "get": {
        "tags": ["Attribute"],
        "summary": "Gets total types lookup",
        "operationId": "Attribute_GetContainerTotalTypes",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Webcom.API.SetupSPA.Common.LookupVM"
              }
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/attributes/container/dataTypes": {
      "get": {
        "tags": ["Attribute"],
        "summary": "Gets data types lookup",
        "operationId": "Attribute_GetContainerDataTypes",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Webcom.API.SetupSPA.Common.LookupVM"
              }
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/attributes/container/column/displayTypes": {
      "get": {
        "tags": ["Attribute"],
        "summary": "Gets display types lookup for container column",
        "operationId": "Attribute_GetContainerDisplayTypes",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "isProductPartNumber",
            "in": "query",
            "description": "Is container column product part number",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Webcom.API.SetupSPA.Common.LookupVM"
              }
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/attributes/container/columnTypes": {
      "get": {
        "tags": ["Attribute"],
        "summary": "Gets column types for container",
        "operationId": "Attribute_GetContainerColumnTypes",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "isProductContainer",
            "in": "query",
            "description": "Is product container",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Webcom.API.SetupSPA.Common.LookupVM"
              }
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/attributes/autocomplete/customtable/{id}": {
      "get": {
        "tags": ["Attribute"],
        "summary": "Gets the custom table columns.",
        "operationId": "Attribute_GetCustomTableColumns",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Webcom.API.SetupSPA.Attributes.VM.CustomTableColumnVM"
              }
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/attributes/autocomplete/customtable/{id}/name": {
      "get": {
        "tags": ["Attribute"],
        "summary": "Gets the name of the custom table.",
        "operationId": "Attribute_GetCustomTableName",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "string" } }
        }
      }
    },
    "/setup/api/v1/admin/attributes/autocomplete/quotecustomtable/{id}": {
      "get": {
        "tags": ["Attribute"],
        "summary": "Gets the quote table columns",
        "operationId": "Attribute_GetQuoteCustomTableColumns",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Webcom.API.SetupSPA.Attributes.VM.CustomTableColumnVM"
              }
            }
          }
        }
      }
    },
    "/api/v1/admin/files/AttributeImage": {
      "get": {
        "tags": ["AttributeImage"],
        "operationId": "AttributeImage_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "type": "array", "items": { "type": "string" } }
          }
        }
      },
      "put": {
        "tags": ["AttributeImage"],
        "summary": "Updates files",
        "operationId": "AttributeImage_Put",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      },
      "post": {
        "tags": ["AttributeImage"],
        "summary": "Creates new files",
        "operationId": "AttributeImage_Post",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/api/v1/admin/files/AttributeImage/{id}": {
      "get": {
        "tags": ["AttributeImage"],
        "summary": "Gets specified file",
        "operationId": "AttributeImage_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "File name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      },
      "put": {
        "tags": ["AttributeImage"],
        "summary": "Updates specified file",
        "operationId": "AttributeImage_Put",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Name of the file to update",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      },
      "delete": {
        "tags": ["AttributeImage"],
        "summary": "Deletes specified file",
        "operationId": "AttributeImage_Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "File name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/setup/api/v1/admin/files/AttributeImage": {
      "get": {
        "tags": ["AttributeImage"],
        "operationId": "AttributeImage_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "type": "array", "items": { "type": "string" } }
          }
        }
      },
      "put": {
        "tags": ["AttributeImage"],
        "summary": "Updates files",
        "operationId": "AttributeImage_Put",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      },
      "post": {
        "tags": ["AttributeImage"],
        "summary": "Creates new files",
        "operationId": "AttributeImage_Post",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/setup/api/v1/admin/files/AttributeImage/{id}": {
      "get": {
        "tags": ["AttributeImage"],
        "summary": "Gets specified file",
        "operationId": "AttributeImage_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "File name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      },
      "put": {
        "tags": ["AttributeImage"],
        "summary": "Updates specified file",
        "operationId": "AttributeImage_Put",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Name of the file to update",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      },
      "delete": {
        "tags": ["AttributeImage"],
        "summary": "Deletes specified file",
        "operationId": "AttributeImage_Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "File name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/api/v1/admin/AttributeTranslationImportExport/GetInitData": {
      "get": {
        "tags": ["AttributeTranslationImportExport"],
        "summary": "Gets the initialize data.",
        "operationId": "AttributeTranslationImportExport_GetInitData",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.Admin.AttributeTranslationImportExport.AttributeTranslationImportExportResponse"
            }
          }
        }
      }
    },
    "/api/v1/admin/AttributeTranslationImportExport/GetFileResponseMessage": {
      "get": {
        "tags": ["AttributeTranslationImportExport"],
        "summary": "Gets the file response message.",
        "operationId": "AttributeTranslationImportExport_GetFileResponseMessage",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "fileName",
            "in": "query",
            "description": "Name of the file.",
            "required": true,
            "type": "string"
          },
          {
            "name": "content._buffer",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "content._origin",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._position",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._length",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._capacity",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._expandable",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content._writable",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content._exposable",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content._isOpen",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content.__identity",
            "in": "query",
            "required": false,
            "type": "object"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/setup/api/v1/admin/auditTrail/userAction": {
      "get": {
        "tags": ["AuditTrail"],
        "summary": "Gets the user action audit trail records.",
        "operationId": "AuditTrail_GetUserAction",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.Common.Models.PagedDataVM[Webcom.API.SetupSPA.AuditTrail.VM.UserActionVM]"
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/auditTrail/adminAction": {
      "get": {
        "tags": ["AuditTrail"],
        "summary": "Gets the admin action audit trail records",
        "operationId": "AuditTrail_GetAdminAction",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.Common.Models.PagedDataVM[Webcom.API.SetupSPA.AuditTrail.VM.AdminAuditTrailVM]"
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/auditTrail/productAction": {
      "get": {
        "tags": ["AuditTrail"],
        "summary": "Gets the product action audit trail records.",
        "operationId": "AuditTrail_GetProductAction",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.Common.Models.PagedDataVM[Webcom.API.SetupSPA.AuditTrail.VM.ProductActionVM]"
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/auditTrail/pricebookAction": {
      "get": {
        "tags": ["AuditTrail"],
        "summary": "Gets pricebook audit trail",
        "operationId": "AuditTrail_GetPricebookAction",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.Common.Models.PagedDataVM[Webcom.API.SetupSPA.AuditTrail.VM.PricebookActionVM]"
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/auditTrail/customTableAction": {
      "get": {
        "tags": ["AuditTrail"],
        "summary": "Gets the custom table action audit trail records.",
        "operationId": "AuditTrail_GetCustomTableAction",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.Common.Models.PagedDataVM[Webcom.API.SetupSPA.AuditTrail.VM.CustomTableActionVM]"
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/auditTrail/attributeAction": {
      "get": {
        "tags": ["AuditTrail"],
        "summary": "Gets the product action audit trail records.",
        "operationId": "AuditTrail_GetAttributeAction",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.Common.Models.PagedDataVM[Webcom.API.SetupSPA.AuditTrail.VM.AttributeActionVM]"
            }
          }
        }
      }
    },
    "/api/scim/v1/Auth": {
      "post": {
        "tags": ["Auth"],
        "summary": "Authenticates application against it's credentials",
        "operationId": "Auth_Authenticate",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "credentials",
            "in": "body",
            "description": "Connected application credentials",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Webcom.Common.Provisioning.Entities.ApplicationCredentials"
            }
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/api/scim/v1/Bulk": {
      "post": {
        "tags": ["Bulk"],
        "summary": "Creates user depend on the data provided on the POST body request",
        "operationId": "Bulk_Process",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "bulk",
            "in": "body",
            "description": "Bulk to be processed",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Webcom.Common.Provisioning.Entities.Bulk"
            }
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/api/v1/admin/BulkImportExport/ExportUsers": {
      "post": {
        "tags": ["BulkImportExport"],
        "summary": "Exports the users.",
        "operationId": "BulkImportExport_ExportUsers",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Webcom.API.Admin.BulkImportExport.UserExportRequest"
            }
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "string" } }
        }
      }
    },
    "/api/v1/admin/BulkImportExport/GetUserExportInitData": {
      "get": {
        "tags": ["BulkImportExport"],
        "summary": "Gets the user export initialize data.",
        "operationId": "BulkImportExport_GetUserExportInitData",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.Admin.BulkImportExport.UserExportResponse"
            }
          }
        }
      }
    },
    "/api/v1/admin/BulkImportExport/GetData": {
      "post": {
        "tags": ["BulkImportExport"],
        "summary": "Gets the data.",
        "operationId": "BulkImportExport_GetData",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "currentPage",
            "in": "query",
            "description": "The current page number.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "The number of items per page",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.Admin.BulkImportExport.BulkImportExportResponse"
            }
          }
        }
      }
    },
    "/api/v1/admin/BulkImportExport/CancelJob": {
      "post": {
        "tags": ["BulkImportExport"],
        "summary": "Cancels the job.",
        "operationId": "BulkImportExport_CancelJob",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "jobId",
            "in": "query",
            "description": "The id of job that should be canceled.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": { "204": { "description": "No Content" } }
      }
    },
    "/api/v1/admin/BulkImportExport/ChangeRequestEmail": {
      "post": {
        "tags": ["BulkImportExport"],
        "summary": "Changes the request email.",
        "operationId": "BulkImportExport_ChangeRequestEmail",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "jobId",
            "in": "query",
            "description": "The job identifier.",
            "required": true,
            "type": "string"
          },
          {
            "name": "requestEmail",
            "in": "query",
            "description": "if set to true [request email].",
            "required": true,
            "type": "boolean"
          }
        ],
        "responses": { "204": { "description": "No Content" } }
      }
    },
    "/api/v1/admin/BulkImportExport/ExportProducts": {
      "post": {
        "tags": ["BulkImportExport"],
        "summary": "Exports the products.",
        "operationId": "BulkImportExport_ExportProducts",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The ProductExportRequest request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Webcom.API.Admin.BulkImportExport.ProductExportRequest"
            }
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "string" } }
        }
      }
    },
    "/api/v1/admin/BulkImportExport/GetCategories": {
      "get": {
        "tags": ["BulkImportExport"],
        "summary": "Gets the categories for filter.",
        "operationId": "BulkImportExport_GetCategories",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Webcom.API.Admin.BulkImportExport.VM.CategoryVM"
              }
            }
          }
        }
      }
    },
    "/api/v1/admin/BulkImportExport/GetPermissions": {
      "get": {
        "tags": ["BulkImportExport"],
        "summary": "Gets the CPQ permissions from filter.",
        "operationId": "BulkImportExport_GetPermissions",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Webcom.API.Admin.BulkImportExport.VM.PermissionVm"
              }
            }
          }
        }
      }
    },
    "/api/v1/admin/BulkImportExport/GetFileResponseMessage": {
      "get": {
        "tags": ["BulkImportExport"],
        "summary": "Gets the file response message.",
        "operationId": "BulkImportExport_GetFileResponseMessage",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "fileName",
            "in": "query",
            "description": "Name of the file.",
            "required": true,
            "type": "string"
          },
          {
            "name": "content._buffer",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "content._origin",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._position",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._length",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._capacity",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._expandable",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content._writable",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content._exposable",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content._isOpen",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content.__identity",
            "in": "query",
            "required": false,
            "type": "object"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/api/rd/v1/Cart/GetCustomFields": {
      "get": {
        "tags": ["Cart"],
        "summary": "Gets the custom fields.",
        "operationId": "Cart_GetCustomFields",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "tabId",
            "in": "query",
            "description": "The tab identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Cart.CustomFieldsResponse"
            }
          }
        }
      }
    },
    "/api/rd/v1/Cart/SaveCustomFields": {
      "post": {
        "tags": ["Cart"],
        "summary": "Saves the custom fields.",
        "operationId": "Cart_SaveCustomFields",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "dirtyCustomFields",
            "in": "body",
            "description": "The dirty custom fields.",
            "required": true,
            "schema": {
              "type": "object",
              "additionalProperties": { "type": "string" }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Cart.CustomFieldsResponse"
            }
          }
        }
      }
    },
    "/api/rd/v1/Cart/GetInitData": {
      "get": {
        "tags": ["Cart"],
        "summary": "Gets the initialize data.",
        "operationId": "Cart_GetInitData",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "mode",
            "in": "query",
            "description": "The mode.",
            "required": true,
            "type": "integer",
            "format": "int32",
            "enum": [0, 1, 2]
          },
          {
            "name": "ownerId",
            "in": "query",
            "description": "The owner identifier.",
            "required": false,
            "type": "string"
          },
          {
            "name": "cartId",
            "in": "query",
            "description": "The cart identifier.",
            "required": false,
            "type": "string"
          },
          {
            "name": "avc",
            "in": "query",
            "description": "The avc.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Cart.CartResponse"
            }
          }
        }
      }
    },
    "/api/rd/v1/Cart/GetItems": {
      "get": {
        "tags": ["Cart"],
        "summary": "Gets the items.",
        "operationId": "Cart_GetItems",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request.pageNumber",
            "in": "query",
            "description": "Gets or sets the page number.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "request.pageSize",
            "in": "query",
            "description": "Gets or sets the page size.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "request.filterQuery",
            "in": "query",
            "description": "Gets or sets the list of query criteria.",
            "required": false,
            "type": "array",
            "items": { "type": "array", "items": { "type": "string" } },
            "collectionFormat": "multi"
          },
          {
            "name": "request.cartItem",
            "in": "query",
            "description": "The cart item that should be loaded in data page.\r\nIf supplied pageNumber is ignored.\r\nSystem will also expand some items if required so that requested item is visible\r\n///",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Cart.CartItemsResponse"
            }
          }
        }
      }
    },
    "/api/rd/v1/Cart/GetItemsPost": {
      "post": {
        "tags": ["Cart"],
        "summary": "Gets the items.",
        "operationId": "Cart_GetItemsPost",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Cart.CartItemsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Cart.CartItemsResponse"
            }
          }
        }
      }
    },
    "/api/rd/v1/Cart/GetOrderSummaryData": {
      "get": {
        "tags": ["Cart"],
        "summary": "Gets the order summary data.",
        "operationId": "Cart_GetOrderSummaryData",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Cart.CartResponse"
            }
          }
        }
      }
    },
    "/api/rd/v1/Cart/Calculate": {
      "post": {
        "tags": ["Cart"],
        "summary": "Calculates the specified cart update parameters.",
        "operationId": "Cart_Calculate",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "cartUpdateParams",
            "in": "body",
            "description": "The cart update parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Cart.CartActionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Cart.CartResponse"
            }
          }
        }
      }
    },
    "/api/rd/v1/Cart/CancelItemEdit": {
      "post": {
        "tags": ["Cart"],
        "summary": "Cancels the item edit.",
        "operationId": "Cart_CancelItemEdit",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Webcom.API.StatusVm" }
          }
        }
      }
    },
    "/api/rd/v1/Cart/ChangeItemType": {
      "post": {
        "tags": ["Cart"],
        "summary": "Changes the type of the item.",
        "operationId": "Cart_ChangeItemType",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "cartItem",
            "in": "query",
            "description": "The cart item.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "newItemType",
            "in": "query",
            "description": "New type of the item.",
            "required": true,
            "type": "integer",
            "format": "int32",
            "enum": [0, 1, 2, 3]
          },
          {
            "name": "newBaseItem",
            "in": "query",
            "description": "The new base item.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Cart.CartResponse"
            }
          }
        }
      }
    },
    "/api/rd/v1/Cart/ChangeItemsType": {
      "post": {
        "tags": ["Cart"],
        "summary": "Changes the type of the items.",
        "operationId": "Cart_ChangeItemsType",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "description": "The model.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Cart.ItemsTypeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Cart.CartResponse"
            }
          }
        }
      }
    },
    "/api/rd/v1/Cart/ChangeMarket": {
      "post": {
        "tags": ["Cart"],
        "summary": "Changes the market.",
        "operationId": "Cart_ChangeMarket",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "newMarketId",
            "in": "query",
            "description": "The new market identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Cart.CartResponse"
            }
          }
        }
      }
    },
    "/api/rd/v1/Cart/ChangePricebook": {
      "post": {
        "tags": ["Cart"],
        "summary": "Changes the pricebook.",
        "operationId": "Cart_ChangePricebook",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "newPricebookId",
            "in": "query",
            "description": "The new pricebook identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Cart.CartResponse"
            }
          }
        }
      }
    },
    "/api/rd/v1/Cart/ChangeEffectiveDate": {
      "post": {
        "tags": ["Cart"],
        "summary": "Changes the effective date.",
        "operationId": "Cart_ChangeEffectiveDate",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "newEffectiveDate",
            "in": "query",
            "description": "The new effective date.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Cart.CartResponse"
            }
          }
        }
      }
    },
    "/api/rd/v1/Cart/ChangeShipping": {
      "post": {
        "tags": ["Cart"],
        "summary": "Changes the shipping.",
        "operationId": "Cart_ChangeShipping",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "newShippingId",
            "in": "query",
            "description": "The new shipping identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Cart.CartResponse"
            }
          }
        }
      }
    },
    "/api/rd/v1/Cart/ChangeStatus": {
      "post": {
        "tags": ["Cart"],
        "summary": "Changes the status.",
        "operationId": "Cart_ChangeStatus",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "newStatusId",
            "in": "query",
            "description": "The new status identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Cart.CartResponse"
            }
          }
        }
      }
    },
    "/api/rd/v1/Cart/CrateNewAdditionalDiscount": {
      "post": {
        "tags": ["Cart"],
        "summary": "Crates the new additional discount.",
        "operationId": "Cart_CrateNewAdditionalDiscount",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "cartUpdateParams",
            "in": "body",
            "description": "The cart update parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Cart.CartActionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Cart.CartResponse"
            }
          }
        }
      }
    },
    "/api/rd/v1/Cart/DeleteAdditionalDiscount": {
      "post": {
        "tags": ["Cart"],
        "summary": "Deletes the additional discount.",
        "operationId": "Cart_DeleteAdditionalDiscount",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "discountId",
            "in": "query",
            "description": "The discount identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "cartUpdateParams",
            "in": "body",
            "description": "The cart update parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Cart.CartActionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Cart.CartResponse"
            }
          }
        }
      }
    },
    "/api/rd/v1/Cart/ExecuteAction": {
      "post": {
        "tags": ["Cart"],
        "summary": "Executes the action.",
        "operationId": "Cart_ExecuteAction",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "actionId",
            "in": "query",
            "description": "The action identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "cartUpdateParams",
            "in": "body",
            "description": "The cart update parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Cart.CartActionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Cart.CartResponse"
            }
          }
        }
      }
    },
    "/api/rd/v1/Cart/ExecuteItemAction": {
      "post": {
        "tags": ["Cart"],
        "summary": "Executes the item action.",
        "operationId": "Cart_ExecuteItemAction",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "actionId",
            "in": "query",
            "description": "The action identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "cartItem",
            "in": "query",
            "description": "The cart item number.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "itemId",
            "in": "query",
            "description": "The quote item id.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/api/rd/v1/Cart/ExecuteUpgradeItemAction": {
      "post": {
        "tags": ["Cart"],
        "summary": "Executes the upgrade item action.",
        "operationId": "Cart_ExecuteUpgradeItemAction",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "cartItem",
            "in": "query",
            "description": "The cart item.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "itemId",
            "in": "query",
            "description": "The item identifier.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Cart.CartResponse"
            }
          }
        }
      }
    },
    "/api/rd/v1/Cart/ExecuteItemActionById": {
      "post": {
        "tags": ["Cart"],
        "summary": "Executes the item action by cart item id.",
        "operationId": "Cart_ExecuteItemActionById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "actionId",
            "in": "query",
            "description": "The action identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "cartItemId",
            "in": "query",
            "description": "The cart item id.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/api/rd/v1/Cart/GetProductsForUpgrade": {
      "get": {
        "tags": ["Cart"],
        "summary": "Gets the products for upgrade.",
        "operationId": "Cart_GetProductsForUpgrade",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/api/rd/v1/Cart/GetCartItemProductUpgradeConfirmationMessage": {
      "get": {
        "tags": ["Cart"],
        "summary": "Gets the cart item product upgrade confirmation message.",
        "operationId": "Cart_GetCartItemProductUpgradeConfirmationMessage",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "cartItem",
            "in": "query",
            "description": "The cart item.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "string" } }
        }
      }
    },
    "/api/rd/v1/Cart/GetCartProductsUpgradeConfirmationMessage": {
      "get": {
        "tags": ["Cart"],
        "summary": "Gets the cart products upgrade confirmation message.",
        "operationId": "Cart_GetCartProductsUpgradeConfirmationMessage",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "string" } }
        }
      }
    },
    "/api/rd/v1/Cart/MoveItemDown": {
      "post": {
        "tags": ["Cart"],
        "summary": "Moves the item down.",
        "operationId": "Cart_MoveItemDown",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "cartItem",
            "in": "query",
            "description": "The cart item.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Cart.CartResponse"
            }
          }
        }
      }
    },
    "/api/rd/v1/Cart/MoveItemUp": {
      "post": {
        "tags": ["Cart"],
        "summary": "Moves the item up.",
        "operationId": "Cart_MoveItemUp",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "cartItem",
            "in": "query",
            "description": "The cart item.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Cart.CartResponse"
            }
          }
        }
      }
    },
    "/api/rd/v1/Cart/MoveToPosition": {
      "post": {
        "tags": ["Cart"],
        "summary": "Moves item to below upperCartItem.",
        "operationId": "Cart_MoveToPosition",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "cartItem",
            "in": "query",
            "description": "The cart item unique identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "upperCartItem",
            "in": "query",
            "description": "The upper cart item.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Cart.CartResponse"
            }
          }
        }
      }
    },
    "/api/rd/v1/Cart/Redo": {
      "post": {
        "tags": ["Cart"],
        "summary": "Redoes this instance.",
        "operationId": "Cart_Redo",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Cart.CartResponse"
            }
          }
        }
      }
    },
    "/api/rd/v1/Cart/SetActiveEditableGroup": {
      "post": {
        "tags": ["Cart"],
        "summary": "Sets the active editable group.",
        "operationId": "Cart_SetActiveEditableGroup",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "editableGroup",
            "in": "query",
            "description": "The editable group.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Cart.CartResponse"
            }
          }
        }
      }
    },
    "/api/rd/v1/Cart/Undo": {
      "post": {
        "tags": ["Cart"],
        "summary": "Undoes this instance.",
        "operationId": "Cart_Undo",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Cart.CartResponse"
            }
          }
        }
      }
    },
    "/api/rd/v1/Cart/UpgradeAndEditProduct": {
      "post": {
        "tags": ["Cart"],
        "summary": "Upgrades the and edit product.",
        "operationId": "Cart_UpgradeAndEditProduct",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "cartItem",
            "in": "query",
            "description": "The quote item number.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "itemId",
            "in": "query",
            "description": "The quote item id.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/api/rd/v1/Cart/UpgradeProductsAndExecuteAction": {
      "post": {
        "tags": ["Cart"],
        "summary": "Upgrades the products and execute action.",
        "operationId": "Cart_UpgradeProductsAndExecuteAction",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "actionId",
            "in": "query",
            "description": "The action identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "cartUpdateParams",
            "in": "body",
            "description": "The cart update parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Cart.CartActionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Cart.CartResponse"
            }
          }
        }
      }
    },
    "/api/rd/v1/Cart/AddToQuote": {
      "post": {
        "tags": ["Cart"],
        "summary": "Adds to quote.",
        "operationId": "Cart_AddToQuote",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "productId",
            "in": "query",
            "description": "The product identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "quantity",
            "in": "query",
            "description": "The quantity.",
            "required": true,
            "type": "number",
            "format": "double"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Cart.CartResponse"
            }
          }
        }
      }
    },
    "/api/rd/v1/Cart/AddToQuoteWithSection": {
      "post": {
        "tags": ["Cart"],
        "summary": "Adds to quote.",
        "operationId": "Cart_AddToQuoteWithSection",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "productId",
            "in": "query",
            "description": "The product identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "quantity",
            "in": "query",
            "description": "The quantity.",
            "required": true,
            "type": "number",
            "format": "double"
          },
          {
            "name": "section",
            "in": "query",
            "description": "The section.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Cart.CartResponse"
            }
          }
        }
      }
    },
    "/api/rd/v1/Cart/AddFavoriteToQuote": {
      "post": {
        "tags": ["Cart"],
        "summary": "Adds the favorite to quote.",
        "operationId": "Cart_AddFavoriteToQuote",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "favoriteId",
            "in": "query",
            "description": "The favorite identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "quantity",
            "in": "query",
            "description": "The quantity.",
            "required": true,
            "type": "number",
            "format": "double"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Cart.CartResponse"
            }
          }
        }
      }
    },
    "/api/rd/v1/Cart/ChangeApprovalProbability": {
      "post": {
        "tags": ["Cart"],
        "summary": "Changes the approval probability.",
        "operationId": "Cart_ChangeApprovalProbability",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "sliderId",
            "in": "query",
            "description": "The slider identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "value",
            "in": "query",
            "description": "The value.",
            "required": true,
            "type": "number",
            "format": "double"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Cart.CartResponse"
            }
          }
        }
      }
    },
    "/api/rd/v1/Cart/DeleteItems": {
      "post": {
        "tags": ["Cart"],
        "summary": "Deletes the items.",
        "operationId": "Cart_DeleteItems",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "cartItems",
            "in": "body",
            "description": "The cart items.",
            "required": true,
            "schema": {
              "type": "array",
              "items": { "format": "int32", "type": "integer" }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Cart.CartResponse"
            }
          }
        }
      }
    },
    "/api/rd/v1/Cart/ReorderItems": {
      "post": {
        "tags": ["Cart"],
        "summary": "Reorders the items.",
        "operationId": "Cart_ReorderItems",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "reorderItems",
            "in": "body",
            "description": "The reorder items.",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Webcom.API.RD.Cart.ReorderItemRequest"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Cart.CartResponse"
            }
          }
        }
      }
    },
    "/api/rd/v1/Cart/ChangeMarginHealth": {
      "post": {
        "tags": ["Cart"],
        "summary": "Changes the margin health.",
        "operationId": "Cart_ChangeMarginHealth",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "margin",
            "in": "query",
            "description": "The margin.",
            "required": true,
            "type": "number",
            "format": "double"
          },
          {
            "name": "calculationMode",
            "in": "query",
            "description": "The calculation mode.",
            "required": true,
            "type": "integer",
            "format": "int32",
            "enum": [1, 2, 3]
          },
          {
            "name": "id",
            "in": "query",
            "description": "The identifier.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Cart.CartResponse"
            }
          }
        }
      }
    },
    "/api/rd/v1/Cart/ContinueActionExecution": {
      "post": {
        "tags": ["Cart"],
        "summary": "Continues the action execution.",
        "operationId": "Cart_ContinueActionExecution",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "actionId",
            "in": "query",
            "description": "The action identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "dirtyCustomFields",
            "in": "body",
            "description": "The dirty custom fields.",
            "required": true,
            "schema": {
              "type": "object",
              "additionalProperties": { "type": "string" }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Cart.CustomFieldsResponse"
            }
          }
        }
      }
    },
    "/api/rd/v1/Cart/GetPartNumberSuggestions": {
      "get": {
        "tags": ["Cart"],
        "summary": "Gets the part number suggestions.",
        "operationId": "Cart_GetPartNumberSuggestions",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "description": "The query.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "type": "array", "items": { "type": "string" } }
          }
        }
      }
    },
    "/api/rd/v1/Cart/SetCartItemComment": {
      "post": {
        "tags": ["Cart"],
        "summary": "Sets the cart item comment.",
        "operationId": "Cart_SetCartItemComment",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "cartItem",
            "in": "query",
            "description": "The cart item.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "comment",
            "in": "query",
            "description": "The comment.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Webcom.API.StatusVm" }
          }
        }
      }
    },
    "/api/rd/v1/Cart/CreateNew": {
      "post": {
        "tags": ["Cart"],
        "summary": "Creates the new.",
        "operationId": "Cart_CreateNew",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "refer",
            "in": "query",
            "description": "The refer.",
            "required": true,
            "type": "string"
          },
          {
            "name": "forceCreate",
            "in": "query",
            "description": "if true new cart will always be created regardless of \"CreateEmptyQuoteFirst\" App parameter values.\r\n            Default value is false.",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Webcom.API.RedirectResponse" }
          }
        }
      }
    },
    "/api/rd/v1/Cart/LinkToOpportunity": {
      "post": {
        "tags": ["Cart"],
        "summary": "Creates link in CPQ between current quote and opportunity.",
        "operationId": "Cart_LinkToOpportunity",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "opportunityId",
            "in": "query",
            "description": "The opportunity identifier. Can not be null or string.Empty",
            "required": true,
            "type": "string"
          }
        ],
        "responses": { "204": { "description": "No Content" } }
      }
    },
    "/api/rd/v1/Cart/GetViewQuoteItemsModel": {
      "get": {
        "tags": ["Cart"],
        "summary": "Gets the view quote items model.",
        "operationId": "Cart_GetViewQuoteItemsModel",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "pageSize",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "page",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Cart.QuoteItemsResponse"
            }
          }
        }
      }
    },
    "/api/rd/v1/Cart/ItemActionDeleteReduced": {
      "post": {
        "tags": ["Cart"],
        "summary": "Items the action delete reduced.",
        "operationId": "Cart_ItemActionDeleteReduced",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "quoteItem",
            "in": "query",
            "description": "The quote item.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "itemId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Cart.QuoteItemsResponse"
            }
          }
        }
      }
    },
    "/api/rd/v1/Cart/GetCurrentMainItemsCount": {
      "get": {
        "tags": ["Cart"],
        "summary": "Gets the current main items count.",
        "operationId": "Cart_GetCurrentMainItemsCount",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Cart.MainItemsCountResponse"
            }
          }
        }
      }
    },
    "/api/rd/v1/Cart/GetPartialOrderData": {
      "post": {
        "tags": ["Cart"],
        "summary": "Gets the data for action create partial order.",
        "operationId": "Cart_GetPartialOrderData",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Webcom.API.RD.Cart.PartialOrderItemVM"
              }
            }
          }
        }
      }
    },
    "/api/rd/v1/Cart/CreatePartialOrder": {
      "post": {
        "tags": ["Cart"],
        "summary": "Creates the partial order.",
        "operationId": "Cart_CreatePartialOrder",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "rowsSelection",
            "in": "body",
            "description": "The partial order rows selection.",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Webcom.API.RD.Cart.CreatePartialOrderRequest"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Webcom.API.StatusVm" }
          }
        }
      }
    },
    "/api/rd/v1/Cart/GetPromotions": {
      "get": {
        "tags": ["Cart"],
        "summary": "Gets the promotions.",
        "operationId": "Cart_GetPromotions",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Cart.VM.Promotion.PromotionsResponse"
            }
          }
        }
      }
    },
    "/api/rd/v1/Cart/ApplyPromotions": {
      "post": {
        "tags": ["Cart"],
        "summary": "Applies the promotions.",
        "operationId": "Cart_ApplyPromotions",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "rowsSelection",
            "in": "body",
            "description": "The rows selection.",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Webcom.API.RD.Cart.VM.Promotion.ApplyPromotionsRequest"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Cart.CartResponse"
            }
          }
        }
      }
    },
    "/api/rd/v1/Cart/ExpandItem": {
      "post": {
        "tags": ["Cart"],
        "summary": "Expands the item.",
        "operationId": "Cart_ExpandItem",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "cartItem",
            "in": "query",
            "description": "The cart item.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Webcom.API.StatusVm" }
          }
        }
      }
    },
    "/api/rd/v1/Cart/ExpandAll": {
      "post": {
        "tags": ["Cart"],
        "summary": "Expands all items.",
        "operationId": "Cart_ExpandAll",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Webcom.API.StatusVm" }
          }
        }
      }
    },
    "/api/rd/v1/Cart/CollapseItem": {
      "post": {
        "tags": ["Cart"],
        "summary": "Collapses the item.",
        "operationId": "Cart_CollapseItem",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "cartItem",
            "in": "query",
            "description": "The cart item.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Webcom.API.StatusVm" }
          }
        }
      }
    },
    "/api/rd/v1/Cart/CollapseAll": {
      "post": {
        "tags": ["Cart"],
        "summary": "Collapses all items.",
        "operationId": "Cart_CollapseAll",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Webcom.API.StatusVm" }
          }
        }
      }
    },
    "/api/rd/v1/Cart/SearchItems": {
      "get": {
        "tags": ["Cart"],
        "summary": "Returns top 5 items in cart matching search criteria.",
        "operationId": "Cart_SearchItems",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "The search criteria.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Webcom.API.RD.Cart.VM.SearchItemVm"
              }
            }
          }
        }
      }
    },
    "/api/rd/v1/Cart/CopyQuoteTableRow": {
      "post": {
        "tags": ["Cart"],
        "summary": "Copies the quote table row and returns cart data.\r\nIf reduced will return just custom fields and quote tables not all cart data.",
        "operationId": "Cart_CopyQuoteTableRow",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Cart.ChangeQuoteTableRequest"
            }
          },
          {
            "name": "tabId",
            "in": "query",
            "description": "The tab identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "reduced",
            "in": "query",
            "description": "if set to true [reduced].",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Cart.CartResponse"
            }
          }
        }
      }
    },
    "/api/rd/v1/Cart/DeleteQuoteTableRow": {
      "post": {
        "tags": ["Cart"],
        "summary": "Deletes the quote table row.\r\nIf reduced will return just custom fields and quote tables not all cart data.",
        "operationId": "Cart_DeleteQuoteTableRow",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Cart.ChangeQuoteTableRequest"
            }
          },
          {
            "name": "tabId",
            "in": "query",
            "description": "The tab identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "reduced",
            "in": "query",
            "description": "if set to true [reduced].",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Cart.CartResponse"
            }
          }
        }
      }
    },
    "/api/rd/v1/Cart/AddQuoteTableRow": {
      "post": {
        "tags": ["Cart"],
        "summary": "Adds the quote table row.\r\nIf reduced will return just custom fields and quote tables not all cart data.",
        "operationId": "Cart_AddQuoteTableRow",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "quoteTableId",
            "in": "body",
            "description": "The quote table identifier.",
            "required": true,
            "schema": { "format": "int32", "type": "integer" }
          },
          {
            "name": "tabId",
            "in": "query",
            "description": "The tab identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "reduced",
            "in": "query",
            "description": "if set to true [reduced].",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Cart.CartResponse"
            }
          }
        }
      }
    },
    "/api/rd/v1/Cart/ChangeQuoteTableCells": {
      "post": {
        "tags": ["Cart"],
        "summary": "Changes the quote table cells.\r\nIf reduced will return just custom fields and quote tables not all cart data.",
        "operationId": "Cart_ChangeQuoteTableCells",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Cart.CartActionRequest"
            }
          },
          {
            "name": "tabId",
            "in": "query",
            "description": "The tab identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "reduced",
            "in": "query",
            "description": "if set to true [reduced].",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Cart.CartResponse"
            }
          }
        }
      }
    },
    "/api/rd/v1/Cart/GetQuoteTableRows": {
      "get": {
        "tags": ["Cart"],
        "summary": "Gets the quote table rows.",
        "operationId": "Cart_GetQuoteTableRows",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "quoteTableId",
            "in": "query",
            "description": "The table identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "The page number.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Size of the page.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "tabId",
            "in": "query",
            "description": "The tab identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Cart.QuoteTableVm"
            }
          }
        }
      }
    },
    "/api/rd/v1/Cart/ExecuteQuoteTableCustomAction": {
      "post": {
        "tags": ["Cart"],
        "summary": "Executes the quote table custom action.",
        "operationId": "Cart_ExecuteQuoteTableCustomAction",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Cart.ExecuteQuoteTableCustomActionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Cart.CartResponse"
            }
          }
        }
      }
    },
    "/api/rd/v1/Cart/FilterQuoteTableRows": {
      "post": {
        "tags": ["Cart"],
        "summary": "Gets filtered quote table rows.",
        "operationId": "Cart_FilterQuoteTableRows",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "description": "Quote table data with filters",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Cart.VM.QuoteTable.QuoteTableFilteredVM"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Cart.QuoteTableVm"
            }
          }
        }
      }
    },
    "/api/rd/v1/Cart/GetAutoCompleteSourceTableValues": {
      "get": {
        "tags": ["Cart"],
        "summary": "Gets the auto-complete custom table values for custom field.",
        "operationId": "Cart_GetAutoCompleteSourceTableValues",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "stdAttrCode",
            "in": "query",
            "description": "The standard attribute code of referencing attribute.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "searchValue",
            "in": "query",
            "description": "The search value.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Configurator.AutoCompleteVM"
            }
          }
        }
      }
    },
    "/api/rd/v1/Cart/SelectAutocompleteCustomField": {
      "post": {
        "tags": ["Cart"],
        "summary": "Selects the autocomplete custom field value.",
        "operationId": "Cart_SelectAutocompleteCustomField",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "scParamId",
            "in": "query",
            "description": "Custom field id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "contentId",
            "in": "query",
            "description": "The selected autocomplete content identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": { "204": { "description": "No Content" } }
      }
    },
    "/api/rd/v1/Cart/GetFilterableItemColumns": {
      "get": {
        "tags": ["Cart"],
        "summary": "Gets filterable standard and item custom fields.",
        "operationId": "Cart_GetFilterableItemColumns",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Webcom.Quote.Helpers.Filtering.FilterFields.QuoteItemFilterField"
              }
            }
          }
        }
      }
    },
    "/api/rd/v1/Cart/GetMinAndMaxForColumn": {
      "get": {
        "tags": ["Cart"],
        "summary": "Get min and max values for given quote item custom field.",
        "operationId": "Cart_GetMinAndMaxForColumn",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "column",
            "in": "query",
            "description": "Custom field name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Cart.VM.QuoteItemMinMaxResponseVM"
            }
          }
        }
      }
    },
    "/api/rd/v1/Cart/GetFiltersMetadata": {
      "get": {
        "tags": ["Cart"],
        "summary": "Get medatata for filterable columns.",
        "operationId": "Cart_GetFiltersMetadata",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Cart.VM.FilterMetadataVM"
            }
          }
        }
      }
    },
    "/api/rd/v1/Cart/GetCustomFieldAutocomplete": {
      "get": {
        "tags": ["Cart"],
        "summary": "Get list of custom field available values for given quote custom field based on search string.",
        "operationId": "Cart_GetCustomFieldAutocomplete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "column",
            "in": "query",
            "description": "Custom field name",
            "required": true,
            "type": "string"
          },
          {
            "name": "searchString",
            "in": "query",
            "description": "Search string",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "type": "array", "items": { "type": "string" } }
          }
        }
      }
    },
    "/api/rd/v1/Cart/GetFieldDistinctValues": {
      "get": {
        "tags": ["Cart"],
        "summary": "Get list of distinct values if there are fewer than 10.",
        "operationId": "Cart_GetFieldDistinctValues",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "column",
            "in": "query",
            "description": "Custom field name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Cart.VM.DistinctValuesVM"
            }
          }
        }
      }
    },
    "/api/rd/v1/Cart/GetProductTypes": {
      "get": {
        "tags": ["Cart"],
        "summary": "Get list of product type available values for current quote.",
        "operationId": "Cart_GetProductTypes",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Webcom.Configurator.Core.IdNamePair"
              }
            }
          }
        }
      }
    },
    "/api/rd/v1/Cart/GetCustomFieldAutocompleteAttribute": {
      "get": {
        "tags": ["Cart"],
        "summary": "Get list of attribute custom field available values for given quote custom field based on search string.",
        "operationId": "Cart_GetCustomFieldAutocompleteAttribute",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "column",
            "in": "query",
            "description": "Custom field name",
            "required": true,
            "type": "string"
          },
          {
            "name": "searchString",
            "in": "query",
            "description": "Custom field id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Webcom.Configurator.Core.IdNamePair"
              }
            }
          }
        }
      }
    },
    "/api/rd/v1/Cart/DownloadQTDataTemplate": {
      "get": {
        "tags": ["Cart"],
        "operationId": "Cart_DownloadQTDataTemplate",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "quoteTableId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/api/rd/v1/Cart/DownloadQTEmptyTemplate": {
      "get": {
        "tags": ["Cart"],
        "operationId": "Cart_DownloadQTEmptyTemplate",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "quoteTableId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/api/rd/v1/Cart/CalculateSections": {
      "post": {
        "tags": ["Cart"],
        "summary": "Calculates the sections.",
        "operationId": "Cart_CalculateSections",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "cartUpdateParams",
            "in": "body",
            "description": "The cart update parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Cart.VM.Sections.SectionCalculateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Webcom.API.RD.Cart.CartLineItemVM"
              }
            }
          }
        }
      }
    },
    "/api/rd/v1/Cart/GetItemsBySections": {
      "post": {
        "tags": ["Cart"],
        "operationId": "Cart_GetItemsBySections",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Cart.VM.Sections.ItemActionsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Webcom.API.RD.Cart.CartLineItemVM"
              }
            }
          }
        }
      }
    },
    "/api/rd/v1/Cart/GetActionsForItem": {
      "get": {
        "tags": ["Cart"],
        "operationId": "Cart_GetActionsForItem",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "itemId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Webcom.API.RD.Cart.MainItemActionVM"
              }
            }
          }
        }
      }
    },
    "/api/rd/v1/Cart/DeleteQuoteTeam": {
      "post": {
        "tags": ["Cart"],
        "summary": "Deletes the quote team.",
        "operationId": "Cart_DeleteQuoteTeam",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "teamId",
            "in": "query",
            "description": "The team identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Webcom.API.StatusVm" }
          }
        }
      }
    },
    "/api/rd/v1/Cart/SaveQuoteTeam": {
      "post": {
        "tags": ["Cart"],
        "summary": "Saves the quote team.",
        "operationId": "Cart_SaveQuoteTeam",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "team",
            "in": "body",
            "description": "The team.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Cart.VM.QuoteTeam.QuoteTeamVm"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Cart.VM.QuoteTeam.QuoteTeamVm"
            }
          }
        }
      }
    },
    "/api/rd/v1/Cart/GetInvolvedParties": {
      "get": {
        "tags": ["Cart"],
        "summary": "Gets the involved parties.",
        "operationId": "Cart_GetInvolvedParties",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "tabId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Cart.VM.QuoteTeam.InvolvedPartiesVm"
            }
          }
        }
      }
    },
    "/api/rd/v1/Cart/GetQuoteTeams": {
      "get": {
        "tags": ["Cart"],
        "summary": "Gets the quote teams.",
        "operationId": "Cart_GetQuoteTeams",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "quoteId",
            "in": "query",
            "description": "The quote identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Webcom.API.RD.Cart.VM.QuoteTeam.QuoteTeamVm"
              }
            }
          }
        }
      }
    },
    "/api/rd/v1/Cart/BulkAssign": {
      "post": {
        "tags": ["Cart"],
        "summary": "Bulks the assign.",
        "operationId": "Cart_BulkAssign",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "cartUpdateParams",
            "in": "body",
            "description": "The cart update parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Cart.VM.Sections.BulkAssignRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Webcom.API.RD.Cart.CartLineItemVM"
              }
            }
          }
        }
      }
    },
    "/api/rd/v1/Cart/GetFileResponseMessage": {
      "get": {
        "tags": ["Cart"],
        "summary": "Gets the file response message.",
        "operationId": "Cart_GetFileResponseMessage",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "fileName",
            "in": "query",
            "description": "Name of the file.",
            "required": true,
            "type": "string"
          },
          {
            "name": "content._buffer",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "content._origin",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._position",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._length",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._capacity",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._expandable",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content._writable",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content._exposable",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content._isOpen",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content.__identity",
            "in": "query",
            "required": false,
            "type": "object"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/api/v1/CartApi/CreateNew": {
      "post": {
        "tags": ["CartApi"],
        "summary": "Creates the new cart.",
        "operationId": "CartApi_CreateNew",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Webcom.API.Public.Cart.CartApiRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.Public.Cart.CartApiResponse"
            }
          }
        }
      }
    },
    "/api/v1/CartApi/GetFileResponseMessage": {
      "get": {
        "tags": ["CartApi"],
        "summary": "Gets the file response message.",
        "operationId": "CartApi_GetFileResponseMessage",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "fileName",
            "in": "query",
            "description": "Name of the file.",
            "required": true,
            "type": "string"
          },
          {
            "name": "content._buffer",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "content._origin",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._position",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._length",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._capacity",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._expandable",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content._writable",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content._exposable",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content._isOpen",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content.__identity",
            "in": "query",
            "required": false,
            "type": "object"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/api/rd/v1/CartDocuments/GetCartDocumentsModelInit": {
      "get": {
        "tags": ["CartDocuments"],
        "summary": "Gets the cart documents model initialize.",
        "operationId": "CartDocuments_GetCartDocumentsModelInit",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "tabId",
            "in": "query",
            "description": "The tab identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Cart.VM.Documents.CartDocumentsResponse"
            }
          }
        }
      }
    },
    "/api/rd/v1/CartDocuments/GetCartDocumentAttachmentModel": {
      "get": {
        "tags": ["CartDocuments"],
        "summary": "Gets the cart document attachment model.",
        "operationId": "CartDocuments_GetCartDocumentAttachmentModel",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request.currentTable",
            "in": "query",
            "description": "Gets or sets the current table.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "enum": [0, 1, 2]
          },
          {
            "name": "request.currentPage",
            "in": "query",
            "description": "Gets or sets the current page.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "request.itemsPerPage",
            "in": "query",
            "description": "Gets or sets the items per page.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "request.sortMethod",
            "in": "query",
            "description": "Gets or sets the sort method.",
            "required": false,
            "type": "string"
          },
          {
            "name": "request.orderByColumn",
            "in": "query",
            "description": "Gets or sets the order by column.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Cart.VM.Documents.CartDocumentsResponse"
            }
          }
        }
      }
    },
    "/api/rd/v1/CartDocuments/GetCartDocumentGenDocModel": {
      "get": {
        "tags": ["CartDocuments"],
        "summary": "Gets the cart document gen document model.",
        "operationId": "CartDocuments_GetCartDocumentGenDocModel",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request.currentTable",
            "in": "query",
            "description": "Gets or sets the current table.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "enum": [0, 1, 2]
          },
          {
            "name": "request.currentPage",
            "in": "query",
            "description": "Gets or sets the current page.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "request.itemsPerPage",
            "in": "query",
            "description": "Gets or sets the items per page.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "request.sortMethod",
            "in": "query",
            "description": "Gets or sets the sort method.",
            "required": false,
            "type": "string"
          },
          {
            "name": "request.orderByColumn",
            "in": "query",
            "description": "Gets or sets the order by column.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Cart.VM.Documents.CartDocumentsResponse"
            }
          }
        }
      }
    },
    "/api/rd/v1/CartDocuments/PrepareGeneratedDocumentForDownload": {
      "post": {
        "tags": ["CartDocuments"],
        "summary": "Downloads the document.",
        "operationId": "CartDocuments_PrepareGeneratedDocumentForDownload",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "documentId",
            "in": "query",
            "description": "The document identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "boolean" } }
        }
      }
    },
    "/api/rd/v1/CartDocuments/SetSendToCustomer": {
      "post": {
        "tags": ["CartDocuments"],
        "summary": "Sets the send to customer.",
        "operationId": "CartDocuments_SetSendToCustomer",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "The identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "isChecked",
            "in": "query",
            "description": "if set to true [is checked].",
            "required": true,
            "type": "boolean"
          }
        ],
        "responses": { "204": { "description": "No Content" } }
      }
    },
    "/api/rd/v1/CartDocuments/SetViewedByCustomer": {
      "post": {
        "tags": ["CartDocuments"],
        "summary": "Sets the viewed by customer.",
        "operationId": "CartDocuments_SetViewedByCustomer",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "The identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "isChecked",
            "in": "query",
            "description": "if set to true [is checked].",
            "required": true,
            "type": "boolean"
          }
        ],
        "responses": { "204": { "description": "No Content" } }
      }
    },
    "/api/rd/v1/CartDocuments/DeleteGeneratedDocument": {
      "post": {
        "tags": ["CartDocuments"],
        "summary": "Deletes the generated document.",
        "operationId": "CartDocuments_DeleteGeneratedDocument",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "The identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": { "204": { "description": "No Content" } }
      }
    },
    "/api/rd/v1/CartDocuments/DeleteAttachment": {
      "post": {
        "tags": ["CartDocuments"],
        "summary": "Deletes the attachment.",
        "operationId": "CartDocuments_DeleteAttachment",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "The identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": { "204": { "description": "No Content" } }
      }
    },
    "/api/rd/v1/CartDocuments/SaveQuoteRevisionDescription": {
      "post": {
        "tags": ["CartDocuments"],
        "summary": "Saves the quote revision description.",
        "operationId": "CartDocuments_SaveQuoteRevisionDescription",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "The identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "description",
            "in": "query",
            "description": "The description.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": { "204": { "description": "No Content" } }
      }
    },
    "/api/rd/v1/CartDocuments/ViewCartAttachment": {
      "get": {
        "tags": ["CartDocuments"],
        "summary": "Views the cart attachment.",
        "operationId": "CartDocuments_ViewCartAttachment",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "The identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/api/rd/v1/CartDocuments/DownloadCartAttachment": {
      "get": {
        "tags": ["CartDocuments"],
        "summary": "Downloads the cart attachment.",
        "operationId": "CartDocuments_DownloadCartAttachment",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "The identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/api/rd/v1/CartDocuments/GetFileResponseMessage": {
      "get": {
        "tags": ["CartDocuments"],
        "summary": "Gets the file response message.",
        "operationId": "CartDocuments_GetFileResponseMessage",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "fileName",
            "in": "query",
            "description": "Name of the file.",
            "required": true,
            "type": "string"
          },
          {
            "name": "content._buffer",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "content._origin",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._position",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._length",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._capacity",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._expandable",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content._writable",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content._exposable",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content._isOpen",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content.__identity",
            "in": "query",
            "required": false,
            "type": "object"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/api/rd/v1/CartList/ChangeStatus": {
      "post": {
        "tags": ["CartList"],
        "summary": "Changes the status.",
        "operationId": "CartList_ChangeStatus",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.CartList.ChangeStatusRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.CartList.CartListResponse"
            }
          }
        }
      }
    },
    "/api/rd/v1/CartList/ExecuteAction": {
      "post": {
        "tags": ["CartList"],
        "summary": "Executes the action.",
        "operationId": "CartList_ExecuteAction",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.CartList.ExecuteActionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.CartList.CartListResponse"
            }
          }
        }
      }
    },
    "/api/rd/v1/CartList/RetractApprovalProcess": {
      "post": {
        "tags": ["CartList"],
        "summary": "Retracts approval process.",
        "operationId": "CartList_RetractApprovalProcess",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.CartList.ExecuteActionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.CartList.CartListResponse"
            }
          }
        }
      }
    },
    "/api/rd/v1/CartList/ExecuteApprovals": {
      "post": {
        "tags": ["CartList"],
        "summary": "Executes the approvals.",
        "operationId": "CartList_ExecuteApprovals",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.CartList.ExecuteActionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.CartList.CartListResponse"
            }
          }
        }
      }
    },
    "/api/rd/v1/CartList/GetData": {
      "post": {
        "tags": ["CartList"],
        "summary": "Gets the data.",
        "operationId": "CartList_GetData",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.CartList.GetDataRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.CartList.CartListResponse"
            }
          }
        }
      }
    },
    "/api/rd/v1/CartList/GetDataByQuoteNumber": {
      "get": {
        "tags": ["CartList"],
        "summary": "Gets the data by quote number.",
        "operationId": "CartList_GetDataByQuoteNumber",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "quoteNumber",
            "in": "query",
            "description": "The quote number.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.CartList.GetDataByQuoteNumberResponse"
            }
          }
        }
      }
    },
    "/api/rd/v1/CartList/GetInitData": {
      "get": {
        "tags": ["CartList"],
        "summary": "Gets the initialize data.",
        "operationId": "CartList_GetInitData",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.CartList.CartListInitResponse"
            }
          }
        }
      }
    },
    "/api/rd/v1/CartList/GetUserTypesForReassign": {
      "post": {
        "tags": ["CartList"],
        "summary": "Gets the user types for reassign.",
        "operationId": "CartList_GetUserTypesForReassign",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Webcom.API.IdNamePair" }
            }
          }
        }
      }
    },
    "/api/rd/v1/CartList/GetUsersForReassign": {
      "post": {
        "tags": ["CartList"],
        "summary": "Gets the users for reassign.",
        "operationId": "CartList_GetUsersForReassign",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "userTypeId",
            "in": "query",
            "description": "The user type identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Webcom.API.IdNamePair" }
            }
          }
        }
      }
    },
    "/api/rd/v1/CartList/Reassign": {
      "post": {
        "tags": ["CartList"],
        "summary": "Reassigns the specified new user identifier.",
        "operationId": "CartList_Reassign",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "newUserId",
            "in": "query",
            "description": "The new user identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "ownerId",
            "in": "query",
            "description": "The owner identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "cartId",
            "in": "query",
            "description": "The cart identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Webcom.API.StatusVm" }
          }
        }
      }
    },
    "/api/rd/v1/CartList/SaveData": {
      "post": {
        "tags": ["CartList"],
        "summary": "Saves the data.",
        "operationId": "CartList_SaveData",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Webcom.API.RD.CartList.SaveDataRequest"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.CartList.SaveScParamsResponse"
            }
          }
        }
      }
    },
    "/api/rd/v1/CartList/SaveSettings": {
      "post": {
        "tags": ["CartList"],
        "summary": "Saves the settings.",
        "operationId": "CartList_SaveSettings",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.CartList.GetDataRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Webcom.API.StatusVm" }
          }
        }
      }
    },
    "/api/rd/v1/CartList/GetFileResponseMessage": {
      "get": {
        "tags": ["CartList"],
        "summary": "Gets the file response message.",
        "operationId": "CartList_GetFileResponseMessage",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "fileName",
            "in": "query",
            "description": "Name of the file.",
            "required": true,
            "type": "string"
          },
          {
            "name": "content._buffer",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "content._origin",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._position",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._length",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._capacity",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._expandable",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content._writable",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content._exposable",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content._isOpen",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content.__identity",
            "in": "query",
            "required": false,
            "type": "object"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/api/rd/v1/Catalog/GetInitData": {
      "get": {
        "tags": ["Catalog"],
        "summary": "Gets the initialize data.",
        "operationId": "Catalog_GetInitData",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Catalog.CatalogResponse"
            }
          }
        }
      }
    },
    "/api/rd/v1/Catalog/GetData": {
      "get": {
        "tags": ["Catalog"],
        "summary": "Gets the data.",
        "operationId": "Catalog_GetData",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "filter.inPromotion",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "filter.search",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.categoryId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "filter.name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.description",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.partNumber",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.type",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.lowerPrice",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.upperPrice",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.productIdCsv",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.pageNumber",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "filter.pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "filter.isAttributeBasedSearch",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "filter.sortOrderBy",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "enum": [0, 1, 2, 3, 4, 5]
          },
          {
            "name": "filter.isSortAscending",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "filter.systemId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.systemIdCsv",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Catalog.CatalogResponse"
            }
          }
        }
      }
    },
    "/api/rd/v1/Catalog/GetProductsCount": {
      "get": {
        "tags": ["Catalog"],
        "summary": "Gets the products count.",
        "operationId": "Catalog_GetProductsCount",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "filter.inPromotion",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "filter.search",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.categoryId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "filter.name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.description",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.partNumber",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.type",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.lowerPrice",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.upperPrice",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.productIdCsv",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.pageNumber",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "filter.pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "filter.isAttributeBasedSearch",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "filter.sortOrderBy",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "enum": [0, 1, 2, 3, 4, 5]
          },
          {
            "name": "filter.isSortAscending",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "filter.systemId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.systemIdCsv",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "format": "int32", "type": "integer" }
          }
        }
      }
    },
    "/api/rd/v1/Catalog/GetReplaceProductId": {
      "get": {
        "tags": ["Catalog"],
        "summary": "Gets the replace product identifier.",
        "operationId": "Catalog_GetReplaceProductId",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "orginalProductId",
            "in": "query",
            "description": "The orginal product identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "format": "int32", "type": "integer" }
          }
        }
      }
    },
    "/api/rd/v1/Catalog/GetQuickAdd": {
      "get": {
        "tags": ["Catalog"],
        "summary": "Gets the quikc add.",
        "operationId": "Catalog_GetQuickAdd",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "The search.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Catalog.QuickAddResponse"
            }
          }
        }
      }
    },
    "/api/rd/v1/Catalog/Reset": {
      "post": {
        "tags": ["Catalog"],
        "summary": "Resets this instance.",
        "operationId": "Catalog_Reset",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Webcom.API.StatusVm" }
          }
        }
      }
    },
    "/api/rd/v1/Catalog/ClearAbs": {
      "post": {
        "tags": ["Catalog"],
        "summary": "Clears the abs.",
        "operationId": "Catalog_ClearAbs",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "filter",
            "in": "body",
            "description": "The filter.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Webcom.Configurator.Catalogue.CatalogueFilterOptions"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Catalog.CatalogResponse"
            }
          }
        }
      }
    },
    "/api/rd/v1/Catalog/GetSearchSuggestions": {
      "get": {
        "tags": ["Catalog"],
        "summary": "Gets the search suggestions.",
        "operationId": "Catalog_GetSearchSuggestions",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "description": "The query.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "type": "array", "items": { "type": "string" } }
          }
        }
      }
    },
    "/api/rd/v1/Catalog/AddToQuote": {
      "post": {
        "tags": ["Catalog"],
        "summary": "Adds to quote.",
        "operationId": "Catalog_AddToQuote",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "productId",
            "in": "query",
            "description": "The product identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "quantity",
            "in": "query",
            "description": "The quantity.",
            "required": true,
            "type": "number",
            "format": "double"
          },
          {
            "name": "section",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Catalog.AddToQuoteResponse"
            }
          }
        }
      }
    },
    "/api/rd/v1/Catalog/QuickConfig": {
      "post": {
        "tags": ["Catalog"],
        "summary": "This service will try to find product configuration based on catalog code.",
        "operationId": "Catalog_QuickConfig",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "catalogCode",
            "in": "query",
            "description": "The catalog code.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Webcom.API.StatusVm" }
          }
        }
      }
    },
    "/api/rd/v1/Catalog/GetCategories": {
      "get": {
        "tags": ["Catalog"],
        "summary": "Gets list of all product categories.",
        "operationId": "Catalog_GetCategories",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Webcom.API.RD.Catalog.CategoryVM"
              }
            }
          }
        }
      }
    },
    "/api/rd/v1/Catalog/GetRatePlanForProductAndMarket": {
      "get": {
        "tags": ["Catalog"],
        "summary": "Gets SB product RatePlan",
        "operationId": "Catalog_GetRatePlanForProductAndMarket",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "productId",
            "in": "query",
            "description": "The catalog code.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Cart.VM.SubscriptionBilling.ProductRatePlanVM"
            }
          }
        }
      }
    },
    "/api/rd/v1/Catalog/GetFileResponseMessage": {
      "get": {
        "tags": ["Catalog"],
        "summary": "Gets the file response message.",
        "operationId": "Catalog_GetFileResponseMessage",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "fileName",
            "in": "query",
            "description": "Name of the file.",
            "required": true,
            "type": "string"
          },
          {
            "name": "content._buffer",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "content._origin",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._position",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._length",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._capacity",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._expandable",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content._writable",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content._exposable",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content._isOpen",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content.__identity",
            "in": "query",
            "required": false,
            "type": "object"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/setup/api/v1/admin/categories": {
      "get": {
        "tags": ["Category"],
        "summary": "Gets categories",
        "operationId": "Category_GetCategories",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Webcom.API.SetupSPA.Categories.VM.CategoryVM"
              }
            }
          }
        }
      }
    },
    "/api/v1/admin/files/CategoryImage": {
      "get": {
        "tags": ["CategoryImage"],
        "operationId": "CategoryImage_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "type": "array", "items": { "type": "string" } }
          }
        }
      },
      "put": {
        "tags": ["CategoryImage"],
        "summary": "Updates files",
        "operationId": "CategoryImage_Put",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      },
      "post": {
        "tags": ["CategoryImage"],
        "summary": "Creates new files",
        "operationId": "CategoryImage_Post",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/api/v1/admin/files/CategoryImage/{id}": {
      "get": {
        "tags": ["CategoryImage"],
        "summary": "Gets specified file",
        "operationId": "CategoryImage_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "File name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      },
      "put": {
        "tags": ["CategoryImage"],
        "summary": "Updates specified file",
        "operationId": "CategoryImage_Put",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Name of the file to update",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      },
      "delete": {
        "tags": ["CategoryImage"],
        "summary": "Deletes specified file",
        "operationId": "CategoryImage_Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "File name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/setup/api/v1/admin/files/CategoryImage": {
      "get": {
        "tags": ["CategoryImage"],
        "operationId": "CategoryImage_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "type": "array", "items": { "type": "string" } }
          }
        }
      },
      "put": {
        "tags": ["CategoryImage"],
        "summary": "Updates files",
        "operationId": "CategoryImage_Put",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      },
      "post": {
        "tags": ["CategoryImage"],
        "summary": "Creates new files",
        "operationId": "CategoryImage_Post",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/setup/api/v1/admin/files/CategoryImage/{id}": {
      "get": {
        "tags": ["CategoryImage"],
        "summary": "Gets specified file",
        "operationId": "CategoryImage_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "File name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      },
      "put": {
        "tags": ["CategoryImage"],
        "summary": "Updates specified file",
        "operationId": "CategoryImage_Put",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Name of the file to update",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      },
      "delete": {
        "tags": ["CategoryImage"],
        "summary": "Deletes specified file",
        "operationId": "CategoryImage_Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "File name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/setup/api/v1/admin/certificateManagement": {
      "get": {
        "tags": ["CertificateManagement"],
        "summary": "",
        "operationId": "CertificateManagement_GetSettings",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.Common.Models.PagedDataVM[Webcom.API.SetupSPA.CertificateManagement.VM.CertificateManagementTableRowVM]"
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/certificateManagement/dkim": {
      "get": {
        "tags": ["CertificateManagement"],
        "summary": "",
        "operationId": "CertificateManagement_GetDkimSettings",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.Common.Models.PagedDataVM[Webcom.API.SetupSPA.CertificateManagement.VM.CertificateManagementTableRowVM]"
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/certificateManagement/{id}/status/{isActive}": {
      "post": {
        "tags": ["CertificateManagement"],
        "summary": "",
        "operationId": "CertificateManagement_SetCertificateManagementSettingStatus",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "isActive",
            "in": "path",
            "description": "",
            "required": true,
            "type": "boolean"
          }
        ],
        "responses": { "204": { "description": "No Content" } }
      }
    },
    "/setup/api/v1/admin/certificateManagement/getKeyString": {
      "get": {
        "tags": ["CertificateManagement"],
        "summary": "",
        "operationId": "CertificateManagement_GetCertificateKeyAsString",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "entryId",
            "in": "query",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "string" } }
        }
      }
    },
    "/setup/api/v1/admin/certificateManagement/details/{id}": {
      "get": {
        "tags": ["CertificateManagement"],
        "summary": "Gets all tenants with their HF Url",
        "operationId": "CertificateManagement_GetCertificateDetails",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/System.Collections.Generic.KeyValuePair[System.String,System.String]"
              }
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/certificateManagement/{id}": {
      "delete": {
        "tags": ["CertificateManagement"],
        "summary": "",
        "operationId": "CertificateManagement_DeleteSetting",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": { "204": { "description": "No Content" } }
      }
    },
    "/setup/api/v1/admin/certificateManagement/purposes": {
      "get": {
        "tags": ["CertificateManagement"],
        "summary": "Gets data types lookup",
        "operationId": "CertificateManagement_GetPurposes",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Webcom.API.SetupSPA.Common.LookupVM"
              }
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/certificateManagement/enabled/{enabledState}": {
      "post": {
        "tags": ["CertificateManagement"],
        "summary": "",
        "operationId": "CertificateManagement_SetEnabledStatus",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "enabledState",
            "in": "path",
            "description": "",
            "required": true,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "boolean" } }
        }
      }
    },
    "/setup/api/v1/admin/certificateManagement/enabled": {
      "get": {
        "tags": ["CertificateManagement"],
        "summary": "",
        "operationId": "CertificateManagement_GetEnabledStatus",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "boolean" } }
        }
      }
    },
    "/setup/api/v1/admin/certificateManagement/save": {
      "post": {
        "tags": ["CertificateManagement"],
        "summary": "",
        "operationId": "CertificateManagement_SaveCertificateSettingEntry",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "entry",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Webcom.API.SetupSPA.CertificateManagement.CertificateSettingsEntryDialogVM"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "format": "int32", "type": "integer" }
          }
        }
      }
    },
    "/setup/api/v1/admin/changeSets/{id}": {
      "get": {
        "tags": ["ChangeSet"],
        "operationId": "ChangeSet_GetChangeSet",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.SetupSPA.ChangeSet.VM.ChangeSetVM"
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/changeSets": {
      "get": {
        "tags": ["ChangeSet"],
        "summary": "Gets data for change set datatable",
        "operationId": "ChangeSet_GetChangeSetDataTable",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.Common.Models.PagedDataVM[Webcom.API.SetupSPA.ChangeSet.VM.ChangeSetVM]"
            }
          }
        }
      },
      "post": {
        "tags": ["ChangeSet"],
        "summary": "Saves change set.",
        "operationId": "ChangeSet_SaveChangeSet",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "changeSet",
            "in": "body",
            "description": "ChangeSet",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Webcom.API.SetupSPA.ChangeSet.VM.ChangeSetVM"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "format": "int32", "type": "integer" }
          }
        }
      }
    },
    "/setup/api/v1/admin/changeSets/lookups": {
      "get": {
        "tags": ["ChangeSet"],
        "summary": "Gets list of change set lookups",
        "operationId": "ChangeSet_GetChangeSetLookups",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Webcom.API.SetupSPA.Common.LookupVM"
              }
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/changeSets/filterLookups": {
      "get": {
        "tags": ["ChangeSet"],
        "summary": "Gets list of change set lookups",
        "operationId": "ChangeSet_GetChangeSetFilterLookups",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Webcom.API.SetupSPA.Common.LookupVM[System.String]"
              }
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/changeSets/{id}/status/{isActive}": {
      "post": {
        "tags": ["ChangeSet"],
        "summary": "Set status",
        "operationId": "ChangeSet_SetStatus",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Change set id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "isActive",
            "in": "path",
            "description": "Is active",
            "required": true,
            "type": "boolean"
          }
        ],
        "responses": { "204": { "description": "No Content" } }
      }
    },
    "/setup/api/v1/admin/changeSets/{id}/selected": {
      "post": {
        "tags": ["ChangeSet"],
        "summary": "Select change set.",
        "operationId": "ChangeSet_SelectChangeSet",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": { "204": { "description": "No Content" } }
      }
    },
    "/setup/api/v1/admin/changeSets/selected": {
      "get": {
        "tags": ["ChangeSet"],
        "summary": "Gets the selected change set.",
        "operationId": "ChangeSet_GetSelectedChangeSet",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.SetupSPA.Common.LookupVM"
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/changeSets/getTenantEnv": {
      "get": {
        "tags": ["ChangeSet"],
        "summary": "Get connected environments for send deploy change sets",
        "operationId": "ChangeSet_GetConnectedTenantEnvironments",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Webcom.API.SetupSPA.ChangeSet.VM.TenantEnvironmentVM"
              }
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/changeSets/sendChangeSets/{envId}": {
      "post": {
        "tags": ["ChangeSet"],
        "summary": "Send change sets to target environment",
        "operationId": "ChangeSet_SendChangeSetsAsync",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "envId",
            "in": "path",
            "description": "id of targetenvironment",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "changeSets",
            "in": "body",
            "description": "Change set list",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Webcom.API.SetupSPA.ChangeSet.VM.ChangeSetVM"
              }
            }
          }
        ],
        "responses": { "204": { "description": "No Content" } }
      }
    },
    "/setup/api/v1/admin/changeSets/deployChangeSets": {
      "post": {
        "tags": ["ChangeSet"],
        "summary": "Deploy change sets from other environment",
        "operationId": "ChangeSet_DeployChangeSets",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "changeSets",
            "in": "body",
            "description": "Change sets for deployment",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Webcom.API.SetupSPA.ChangeSet.VM.ChangeSetVM"
              }
            }
          }
        ],
        "responses": { "204": { "description": "No Content" } }
      }
    },
    "/api/rd/v1/ChangeSets/GetChangeSetOptions": {
      "get": {
        "tags": ["ChangeSets"],
        "summary": "Gets the change sets for the change set select.",
        "operationId": "ChangeSets_GetChangeSetOptions",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Webcom.API.SetupSPA.Common.LookupVM"
              }
            }
          }
        }
      }
    },
    "/api/rd/v1/ChangeSets/SaveChangeSet": {
      "post": {
        "tags": ["ChangeSets"],
        "summary": "Saves the new change set.",
        "operationId": "ChangeSets_SaveChangeSet",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "changeSet",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Webcom.API.SetupSPA.ChangeSet.VM.ChangeSetVM"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "format": "int32", "type": "integer" }
          }
        }
      }
    },
    "/api/rd/v1/ChangeSets/GetSelectedChangeSet": {
      "get": {
        "tags": ["ChangeSets"],
        "summary": "Gets the selected change set.",
        "operationId": "ChangeSets_GetSelectedChangeSet",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "format": "int32", "type": "integer" }
          }
        }
      }
    },
    "/api/rd/v1/ChangeSets/SelectChangeSet": {
      "post": {
        "tags": ["ChangeSets"],
        "summary": "Select change set.",
        "operationId": "ChangeSets_SelectChangeSet",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "body",
            "description": "Id",
            "required": true,
            "schema": { "format": "int32", "type": "integer" }
          }
        ],
        "responses": { "204": { "description": "No Content" } }
      }
    },
    "/api/rd/v1/ChangeSets/GetFileResponseMessage": {
      "get": {
        "tags": ["ChangeSets"],
        "summary": "Gets the file response message.",
        "operationId": "ChangeSets_GetFileResponseMessage",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "fileName",
            "in": "query",
            "description": "Name of the file.",
            "required": true,
            "type": "string"
          },
          {
            "name": "content._buffer",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "content._origin",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._position",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._length",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._capacity",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._expandable",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content._writable",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content._exposable",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content._isOpen",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content.__identity",
            "in": "query",
            "required": false,
            "type": "object"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/api/v1/ClmApi/GetClmToCpqMappings": {
      "get": {
        "tags": ["ClmApi"],
        "summary": "Gets the CLM to CPQ mappings.",
        "operationId": "ClmApi_GetClmToCpqMappings",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "contractType",
            "in": "query",
            "description": "Type of the contract.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.Public.Clm.ClmMappingsResponse"
            }
          }
        }
      }
    },
    "/api/v1/ClmApi/GetQuoteComments": {
      "get": {
        "tags": ["ClmApi"],
        "operationId": "ClmApi_GetQuoteComments",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "cartCompositeNumber",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "cartRevisionNumber",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.Public.Clm.QuoteCommentResponse"
            }
          }
        }
      }
    },
    "/api/v1/ClmApi/CheckIfMappingExists": {
      "get": {
        "tags": ["ClmApi"],
        "operationId": "ClmApi_CheckIfMappingExists",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "contractTypeId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "clmStatusId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/api/v1/ClmApi/GetFileResponseMessage": {
      "get": {
        "tags": ["ClmApi"],
        "summary": "Gets the file response message.",
        "operationId": "ClmApi_GetFileResponseMessage",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "fileName",
            "in": "query",
            "description": "Name of the file.",
            "required": true,
            "type": "string"
          },
          {
            "name": "content._buffer",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "content._origin",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._position",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._length",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._capacity",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._expandable",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content._writable",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content._exposable",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content._isOpen",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content.__identity",
            "in": "query",
            "required": false,
            "type": "object"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/api/v1/admin/CLMFieldMappings/GetData": {
      "get": {
        "tags": ["CLMFieldMappings"],
        "summary": "Gets the initialize data.",
        "operationId": "CLMFieldMappings_GetData",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "directionId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "contractType",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.Admin.Providers.CLM.CLMFieldMappingsResponse"
            }
          }
        }
      }
    },
    "/api/v1/admin/CLMFieldMappings/SaveMapping": {
      "post": {
        "tags": ["CLMFieldMappings"],
        "summary": "Saves the mapping.",
        "operationId": "CLMFieldMappings_SaveMapping",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Webcom.API.Admin.Providers.CLM.CLMFieldMappingsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.Admin.Providers.CLM.CLMFieldMappingResponse"
            }
          }
        }
      }
    },
    "/api/v1/admin/CLMFieldMappings/DeleteMapping": {
      "post": {
        "tags": ["CLMFieldMappings"],
        "summary": "Deletes the mapping.",
        "operationId": "CLMFieldMappings_DeleteMapping",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "The identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.Admin.Providers.CLM.CLMFieldMappingsResponse"
            }
          }
        }
      }
    },
    "/api/v1/admin/CLMFieldMappings/GenerateSecretKey": {
      "get": {
        "tags": ["CLMFieldMappings"],
        "summary": "Generates the secret key suitable for SHA-256.",
        "operationId": "CLMFieldMappings_GenerateSecretKey",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "string" } }
        }
      }
    },
    "/api/v1/admin/CLMFieldMappings/GetFileResponseMessage": {
      "get": {
        "tags": ["CLMFieldMappings"],
        "summary": "Gets the file response message.",
        "operationId": "CLMFieldMappings_GetFileResponseMessage",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "fileName",
            "in": "query",
            "description": "Name of the file.",
            "required": true,
            "type": "string"
          },
          {
            "name": "content._buffer",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "content._origin",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._position",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._length",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._capacity",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._expandable",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content._writable",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content._exposable",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content._isOpen",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content.__identity",
            "in": "query",
            "required": false,
            "type": "object"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/api/v1/admin/ClmStatusMappings/GetData": {
      "get": {
        "tags": ["ClmStatusMappings"],
        "summary": "Gets the initialize data.",
        "operationId": "ClmStatusMappings_GetData",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "contractType",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/api/v1/admin/ClmStatusMappings/SaveMapping": {
      "post": {
        "tags": ["ClmStatusMappings"],
        "summary": "Saves the mapping.",
        "operationId": "ClmStatusMappings_SaveMapping",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "status",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Webcom.Configurator.Core.Clm.ClmStatusMapping"
            }
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/api/v1/admin/ClmStatusMappings/DeleteMapping": {
      "post": {
        "tags": ["ClmStatusMappings"],
        "summary": "Deletes the mapping.",
        "operationId": "ClmStatusMappings_DeleteMapping",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "The identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/api/v1/admin/ClmStatusMappings/GenerateSecretKey": {
      "get": {
        "tags": ["ClmStatusMappings"],
        "summary": "Generates the secret key suitable for SHA-256.",
        "operationId": "ClmStatusMappings_GenerateSecretKey",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "string" } }
        }
      }
    },
    "/api/v1/admin/ClmStatusMappings/GetFileResponseMessage": {
      "get": {
        "tags": ["ClmStatusMappings"],
        "summary": "Gets the file response message.",
        "operationId": "ClmStatusMappings_GetFileResponseMessage",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "fileName",
            "in": "query",
            "description": "Name of the file.",
            "required": true,
            "type": "string"
          },
          {
            "name": "content._buffer",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "content._origin",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._position",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._length",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._capacity",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._expandable",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content._writable",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content._exposable",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content._isOpen",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content.__identity",
            "in": "query",
            "required": false,
            "type": "object"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/api/v1/admin/CompaniesImportExport/Export": {
      "get": {
        "tags": ["CompaniesImportExport"],
        "summary": "Exports all companies and returns the XML file.",
        "operationId": "CompaniesImportExport_Export",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/api/v1/admin/CompaniesImportExport/Import": {
      "post": {
        "tags": ["CompaniesImportExport"],
        "summary": "Imports this instance.",
        "operationId": "CompaniesImportExport_Import",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/api/v1/admin/CompaniesImportExport/GetFileResponseMessage": {
      "get": {
        "tags": ["CompaniesImportExport"],
        "summary": "Gets the file response message.",
        "operationId": "CompaniesImportExport_GetFileResponseMessage",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "fileName",
            "in": "query",
            "description": "Name of the file.",
            "required": true,
            "type": "string"
          },
          {
            "name": "content._buffer",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "content._origin",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._position",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._length",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._capacity",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._expandable",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content._writable",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content._exposable",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content._isOpen",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content.__identity",
            "in": "query",
            "required": false,
            "type": "object"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/setup/api/v1/admin/companies": {
      "get": {
        "tags": ["Company"],
        "summary": "Gets filtered, paged and sorted companies with total number of companies.",
        "operationId": "Company_GetCompanies",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.Common.Models.PagedDataVM[Webcom.API.SetupSPA.Users.VM.CompanyTableRowVM]"
            }
          }
        }
      },
      "post": {
        "tags": ["Company"],
        "summary": "Saves company",
        "operationId": "Company_SaveCompany",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "companyVM",
            "in": "body",
            "description": "Company VM",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Webcom.API.SetupSPA.Company.VM.CompanyVM"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "format": "int32", "type": "integer" }
          }
        }
      }
    },
    "/setup/api/v1/admin/companies/{companyId}": {
      "get": {
        "tags": ["Company"],
        "summary": "Gets data of company with provided id",
        "operationId": "Company_GetCompanyById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.SetupSPA.Company.VM.CompanyVM"
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/companies/{id}/permissions": {
      "get": {
        "tags": ["Company"],
        "summary": "Gets administration permissions for company with provided id",
        "operationId": "Company_GetAdministrationPermissionsForCompany",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Company id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "format": "int32", "type": "integer" }
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/companies/{id}": {
      "delete": {
        "tags": ["Company"],
        "summary": "Deletes company with provided id",
        "operationId": "Company_DeleteCompany",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Company id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": { "204": { "description": "No Content" } }
      }
    },
    "/setup/api/v1/admin/companies/crmAccount": {
      "get": {
        "tags": ["Company"],
        "summary": "Should use CRM account",
        "operationId": "Company_ShouldUseCrmAccount",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "boolean" } }
        }
      }
    },
    "/setup/api/v1/admin/companies/SystemId": {
      "get": {
        "tags": ["Company"],
        "summary": "Gets system id",
        "operationId": "Company_GetSystemId",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "string" } }
        }
      }
    },
    "/api/v1/admin/files/CompanyLogo": {
      "get": {
        "tags": ["CompanyLogo"],
        "operationId": "CompanyLogo_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "type": "array", "items": { "type": "string" } }
          }
        }
      },
      "put": {
        "tags": ["CompanyLogo"],
        "summary": "Updates files",
        "operationId": "CompanyLogo_Put",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      },
      "post": {
        "tags": ["CompanyLogo"],
        "summary": "Creates new files",
        "operationId": "CompanyLogo_Post",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/api/v1/admin/files/CompanyLogo/{id}": {
      "get": {
        "tags": ["CompanyLogo"],
        "summary": "Gets specified file",
        "operationId": "CompanyLogo_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "File name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      },
      "put": {
        "tags": ["CompanyLogo"],
        "summary": "Updates specified file",
        "operationId": "CompanyLogo_Put",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Name of the file to update",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      },
      "delete": {
        "tags": ["CompanyLogo"],
        "summary": "Deletes specified file",
        "operationId": "CompanyLogo_Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "File name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/setup/api/v1/admin/files/CompanyLogo": {
      "get": {
        "tags": ["CompanyLogo"],
        "operationId": "CompanyLogo_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "type": "array", "items": { "type": "string" } }
          }
        }
      },
      "put": {
        "tags": ["CompanyLogo"],
        "summary": "Updates files",
        "operationId": "CompanyLogo_Put",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      },
      "post": {
        "tags": ["CompanyLogo"],
        "summary": "Creates new files",
        "operationId": "CompanyLogo_Post",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/setup/api/v1/admin/files/CompanyLogo/{id}": {
      "get": {
        "tags": ["CompanyLogo"],
        "summary": "Gets specified file",
        "operationId": "CompanyLogo_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "File name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      },
      "put": {
        "tags": ["CompanyLogo"],
        "summary": "Updates specified file",
        "operationId": "CompanyLogo_Put",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Name of the file to update",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      },
      "delete": {
        "tags": ["CompanyLogo"],
        "summary": "Deletes specified file",
        "operationId": "CompanyLogo_Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "File name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/api/rd/v1/CompareProducts/GetInitData": {
      "get": {
        "tags": ["CompareProducts"],
        "summary": "Gets the initialize data.",
        "operationId": "CompareProducts_GetInitData",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.CompareProducts.CompareProductsResponse"
            }
          }
        }
      }
    },
    "/api/rd/v1/CompareProducts/AddProductToCompare": {
      "post": {
        "tags": ["CompareProducts"],
        "summary": "Adds the product to compare.",
        "operationId": "CompareProducts_AddProductToCompare",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "productId",
            "in": "query",
            "description": "The product identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": { "204": { "description": "No Content" } }
      }
    },
    "/api/rd/v1/CompareProducts/RemoveProductFromCompare": {
      "post": {
        "tags": ["CompareProducts"],
        "summary": "Removes the product from compare.",
        "operationId": "CompareProducts_RemoveProductFromCompare",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "productId",
            "in": "query",
            "description": "The product identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": { "204": { "description": "No Content" } }
      }
    },
    "/api/rd/v1/CompareProducts/RemoveProductFromCompareAndReload": {
      "post": {
        "tags": ["CompareProducts"],
        "summary": "Removes the product from compare and reload.",
        "operationId": "CompareProducts_RemoveProductFromCompareAndReload",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "productId",
            "in": "query",
            "description": "The product identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.CompareProducts.CompareProductsResponse"
            }
          }
        }
      }
    },
    "/api/rd/v1/CompareProducts/ClearProductComparisonSelection": {
      "post": {
        "tags": ["CompareProducts"],
        "summary": "Clears the product comparison selection.",
        "operationId": "CompareProducts_ClearProductComparisonSelection",
        "consumes": [],
        "produces": [],
        "responses": { "204": { "description": "No Content" } }
      }
    },
    "/api/rd/v1/CompareProducts/GetFileResponseMessage": {
      "get": {
        "tags": ["CompareProducts"],
        "summary": "Gets the file response message.",
        "operationId": "CompareProducts_GetFileResponseMessage",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "fileName",
            "in": "query",
            "description": "Name of the file.",
            "required": true,
            "type": "string"
          },
          {
            "name": "content._buffer",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "content._origin",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._position",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._length",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._capacity",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._expandable",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content._writable",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content._exposable",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content._isOpen",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content.__identity",
            "in": "query",
            "required": false,
            "type": "object"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/api/rd/v1/Configurator/Init": {
      "post": {
        "tags": ["Configurator"],
        "summary": "Initializes the specified pid.",
        "operationId": "Configurator_Init",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "pid",
            "in": "query",
            "description": "The pid.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "cid",
            "in": "query",
            "description": "The cid.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "favId",
            "in": "query",
            "description": "The fav identifier.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sid",
            "in": "query",
            "description": "The sid.",
            "required": false,
            "type": "string"
          },
          {
            "name": "systemId",
            "in": "query",
            "description": "The product system id.",
            "required": false,
            "type": "string"
          },
          {
            "name": "configurationId",
            "in": "query",
            "description": "The configuration id.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Webcom.API.StatusVm" }
          }
        }
      }
    },
    "/api/rd/v1/Configurator/GetModel": {
      "get": {
        "tags": ["Configurator"],
        "summary": "Gets the current configurator tab model.",
        "operationId": "Configurator_GetModel",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Configurator.ConfiguratorResponse"
            }
          }
        }
      }
    },
    "/api/rd/v1/Configurator/GetTabModel": {
      "get": {
        "tags": ["Configurator"],
        "summary": "Changes current tab and then get model for that configurator tab.",
        "operationId": "Configurator_GetTabModel",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "tabId",
            "in": "query",
            "description": "The tab id.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "productId",
            "in": "query",
            "description": "product id.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Configurator.ConfiguratorResponse"
            }
          }
        }
      }
    },
    "/api/rd/v1/Configurator/ShouldShowConflictsTab": {
      "get": {
        "tags": ["Configurator"],
        "summary": "Gets information whether the conflicts tab in responder should be shown or not for VC integration",
        "operationId": "Configurator_ShouldShowConflictsTab",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Configurator.ConfiguratorResponse"
            }
          }
        }
      }
    },
    "/api/rd/v1/Configurator/ChangeUserInput": {
      "post": {
        "tags": ["Configurator"],
        "summary": "Changes the user input.",
        "operationId": "Configurator_ChangeUserInput",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "stdAttrCode",
            "in": "query",
            "description": "The standard attribute code.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "userInput",
            "in": "body",
            "description": "The user input.",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Configurator.ConfiguratorResponse"
            }
          }
        }
      }
    },
    "/api/rd/v1/Configurator/ChangeAttributeQuantity": {
      "post": {
        "tags": ["Configurator"],
        "summary": "Changes the attribute quantity.",
        "operationId": "Configurator_ChangeAttributeQuantity",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "stdAttrCode",
            "in": "query",
            "description": "The standard attribute code.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "quantity",
            "in": "query",
            "description": "The quantity.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Configurator.ConfiguratorResponse"
            }
          }
        }
      }
    },
    "/api/rd/v1/Configurator/ChangeAttributeValue": {
      "post": {
        "tags": ["Configurator"],
        "summary": "Changes the attribute value.",
        "operationId": "Configurator_ChangeAttributeValue",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "stdAttrCode",
            "in": "query",
            "description": "The standard attribute code.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pavIdCsv",
            "in": "query",
            "description": "The pav identifier CSV.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Configurator.ConfiguratorResponse"
            }
          }
        }
      }
    },
    "/api/rd/v1/Configurator/ButtonAttributeAction": {
      "post": {
        "tags": ["Configurator"],
        "summary": "Buttons the attribute action.",
        "operationId": "Configurator_ButtonAttributeAction",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "stdAttrCode",
            "in": "query",
            "description": "The standard attribute code.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Configurator.ConfiguratorResponse"
            }
          }
        }
      }
    },
    "/api/rd/v1/Configurator/ChangeAttributeValueQuantity": {
      "post": {
        "tags": ["Configurator"],
        "summary": "Changes the attribute value quantity.",
        "operationId": "Configurator_ChangeAttributeValueQuantity",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "stdAttrCode",
            "in": "query",
            "description": "The standard attribute code.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pavIdCsv",
            "in": "query",
            "description": "The pav identifier CSV.",
            "required": true,
            "type": "string"
          },
          {
            "name": "quantity",
            "in": "query",
            "description": "The quantity.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Configurator.ConfiguratorResponse"
            }
          }
        }
      }
    },
    "/api/rd/v1/Configurator/AddContainerRow": {
      "post": {
        "tags": ["Configurator"],
        "summary": "Adds the container row.",
        "operationId": "Configurator_AddContainerRow",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "stdAttrCode",
            "in": "query",
            "description": "The standard attribute code.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "productId",
            "in": "query",
            "description": "The product identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Configurator.ConfiguratorResponse"
            }
          }
        }
      }
    },
    "/api/rd/v1/Configurator/EditConfigurationTreeRow": {
      "post": {
        "tags": ["Configurator"],
        "summary": "Edits the configuration tree item (container row).",
        "operationId": "Configurator_EditConfigurationTreeRow",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "uniqueIdentifier",
            "in": "query",
            "description": "Unique container row identifier (same as CartItemGuid if exists).",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Configurator.ConfiguratorResponse"
            }
          }
        }
      }
    },
    "/api/rd/v1/Configurator/EditContainerRow": {
      "post": {
        "tags": ["Configurator"],
        "summary": "Edits the container row.",
        "operationId": "Configurator_EditContainerRow",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "stdAttrCode",
            "in": "query",
            "description": "The standard attribute code.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "rowIndex",
            "in": "query",
            "description": "Index of the row.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Configurator.ConfiguratorResponse"
            }
          }
        }
      }
    },
    "/api/rd/v1/Configurator/SetContainerCurrentPage": {
      "post": {
        "tags": ["Configurator"],
        "summary": "Sets the container current page.",
        "operationId": "Configurator_SetContainerCurrentPage",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "stdAttrCode",
            "in": "query",
            "description": "The standard attribute code.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "currentPage",
            "in": "query",
            "description": "The current page.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Configurator.ConfiguratorResponse"
            }
          }
        }
      }
    },
    "/api/rd/v1/Configurator/SetContainerPageSize": {
      "post": {
        "tags": ["Configurator"],
        "summary": "Sets the size of the container page.",
        "operationId": "Configurator_SetContainerPageSize",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "stdAttrCode",
            "in": "query",
            "description": "The standard attribute code.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Size of the page.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Configurator.ConfiguratorResponse"
            }
          }
        }
      }
    },
    "/api/rd/v1/Configurator/DeleteContainerRow": {
      "post": {
        "tags": ["Configurator"],
        "summary": "Deletes the container row.",
        "operationId": "Configurator_DeleteContainerRow",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "stdAttrCode",
            "in": "query",
            "description": "The standard attribute code.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "rowIndex",
            "in": "query",
            "description": "Index of the row.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Configurator.ConfiguratorResponse"
            }
          }
        }
      }
    },
    "/api/rd/v1/Configurator/CopyContainerRow": {
      "post": {
        "tags": ["Configurator"],
        "summary": "Copies the container row.",
        "operationId": "Configurator_CopyContainerRow",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "stdAttrCode",
            "in": "query",
            "description": "The standard attribute code.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "rowIndex",
            "in": "query",
            "description": "Index of the row.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Configurator.ConfiguratorResponse"
            }
          }
        }
      }
    },
    "/api/rd/v1/Configurator/ModalCopyContainerRow": {
      "post": {
        "tags": ["Configurator"],
        "summary": "Modals the copy container row.",
        "operationId": "Configurator_ModalCopyContainerRow",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "stdAttrCode",
            "in": "query",
            "description": "The standard attribute code.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "rowIndex",
            "in": "query",
            "description": "Index of the row.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "columnIds",
            "in": "query",
            "description": "The column ids.",
            "required": true,
            "type": "array",
            "items": { "type": "integer", "format": "int32" },
            "collectionFormat": "multi"
          },
          {
            "name": "qty",
            "in": "query",
            "description": "The qty.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Configurator.ConfiguratorResponse"
            }
          }
        }
      }
    },
    "/api/rd/v1/Configurator/MoveUpContainerRow": {
      "post": {
        "tags": ["Configurator"],
        "summary": "Moves up container row.",
        "operationId": "Configurator_MoveUpContainerRow",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "stdAttrCode",
            "in": "query",
            "description": "The standard attribute code.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "rowIndex",
            "in": "query",
            "description": "Index of the row.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Configurator.ConfiguratorResponse"
            }
          }
        }
      }
    },
    "/api/rd/v1/Configurator/MoveDownContainerRow": {
      "post": {
        "tags": ["Configurator"],
        "summary": "Moves down container row.",
        "operationId": "Configurator_MoveDownContainerRow",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "stdAttrCode",
            "in": "query",
            "description": "The standard attribute code.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "rowIndex",
            "in": "query",
            "description": "Index of the row.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Configurator.ConfiguratorResponse"
            }
          }
        }
      }
    },
    "/api/rd/v1/Configurator/ChangeContainerValue": {
      "post": {
        "tags": ["Configurator"],
        "summary": "Changes the container value.",
        "operationId": "Configurator_ChangeContainerValue",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "stdAttrCode",
            "in": "query",
            "description": "The standard attribute code.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "columnId",
            "in": "query",
            "description": "The column identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "rowIndex",
            "in": "query",
            "description": "Index of the row.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "value",
            "in": "query",
            "description": "The value.",
            "required": true,
            "type": "string"
          },
          {
            "name": "selectedOptions",
            "in": "query",
            "description": "The selected options.",
            "required": true,
            "type": "array",
            "items": { "type": "integer", "format": "int32" },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Configurator.ConfiguratorResponse"
            }
          }
        }
      }
    },
    "/api/rd/v1/Configurator/ContainerSort": {
      "post": {
        "tags": ["Configurator"],
        "summary": "Toggles the container column sort direction.",
        "operationId": "Configurator_ContainerSort",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "stdAttrCode",
            "in": "query",
            "description": "The standard attribute code.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "columnId",
            "in": "query",
            "description": "The column identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Configurator.ConfiguratorResponse"
            }
          }
        }
      }
    },
    "/api/rd/v1/Configurator/ContainerClearSort": {
      "post": {
        "tags": ["Configurator"],
        "summary": "Clears the container sorting.",
        "operationId": "Configurator_ContainerClearSort",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "stdAttrCode",
            "in": "query",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Configurator.ConfiguratorResponse"
            }
          }
        }
      }
    },
    "/api/rd/v1/Configurator/ChangeContainerAutocompleteValue": {
      "post": {
        "tags": ["Configurator"],
        "summary": "Changes the container autocomplete value.",
        "operationId": "Configurator_ChangeContainerAutocompleteValue",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "referencedStdAttrCode",
            "in": "query",
            "description": "The standard attribute code of the referenced attribute.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "containerId",
            "in": "query",
            "description": "The standard attribute code of the container attribute",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "rowIndex",
            "in": "query",
            "description": "Index of the row.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "columnId",
            "in": "query",
            "description": "The column identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "entryId",
            "in": "query",
            "description": "The id of selected autocomplete row.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Configurator.ConfiguratorResponse"
            }
          }
        }
      }
    },
    "/api/rd/v1/Configurator/AlterContainerRowSelection": {
      "post": {
        "tags": ["Configurator"],
        "summary": "Alters the container row selection.",
        "operationId": "Configurator_AlterContainerRowSelection",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "stdAttrCode",
            "in": "query",
            "description": "The standard attribute code.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "columnId",
            "in": "query",
            "description": "The column identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "rowIndex",
            "in": "query",
            "description": "Index of the row.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "isRowSelected",
            "in": "query",
            "description": "if set to true [is row selected].",
            "required": true,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Configurator.ConfiguratorResponse"
            }
          }
        }
      }
    },
    "/api/rd/v1/Configurator/SetContainerSelectedRowFilter": {
      "post": {
        "tags": ["Configurator"],
        "summary": "Sets the container selected row filter.",
        "operationId": "Configurator_SetContainerSelectedRowFilter",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "stdAttrCode",
            "in": "query",
            "description": "The standard attribute code.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "showOnlySelected",
            "in": "query",
            "description": "if set to true [show only selected].",
            "required": true,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Configurator.ConfiguratorResponse"
            }
          }
        }
      }
    },
    "/api/rd/v1/Configurator/ChangeDrillDownValue": {
      "post": {
        "tags": ["Configurator"],
        "summary": "Changes the drill down value.",
        "operationId": "Configurator_ChangeDrillDownValue",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "stdAttrCode",
            "in": "query",
            "description": "The standard attribute code.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "columnId",
            "in": "query",
            "description": "The column identifier.",
            "required": true,
            "type": "string"
          },
          {
            "name": "newValue",
            "in": "query",
            "description": "The new value.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/api/rd/v1/Configurator/Reset": {
      "post": {
        "tags": ["Configurator"],
        "summary": "Resets this instance.",
        "operationId": "Configurator_Reset",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Configurator.ConfiguratorResponse"
            }
          }
        }
      }
    },
    "/api/rd/v1/Configurator/AddToQuote": {
      "post": {
        "tags": ["Configurator"],
        "summary": "Adds to quote.",
        "operationId": "Configurator_AddToQuote",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/api/rd/v1/Configurator/UnlockProduct": {
      "get": {
        "tags": ["Configurator"],
        "operationId": "Configurator_UnlockProduct",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Configurator.ConfiguratorResponse"
            }
          }
        }
      }
    },
    "/api/rd/v1/Configurator/SaveAndExitNestedProduct": {
      "post": {
        "tags": ["Configurator"],
        "summary": "Saves the and exit nested product.",
        "operationId": "Configurator_SaveAndExitNestedProduct",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Configurator.ConfiguratorResponse"
            }
          }
        }
      }
    },
    "/api/rd/v1/Configurator/ExitNestedProduct": {
      "post": {
        "tags": ["Configurator"],
        "summary": "Exits the nested product.",
        "operationId": "Configurator_ExitNestedProduct",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Configurator.ConfiguratorResponse"
            }
          }
        }
      }
    },
    "/api/rd/v1/Configurator/GoToRootProduct": {
      "post": {
        "tags": ["Configurator"],
        "summary": "Gets root product",
        "operationId": "Configurator_GoToRootProduct",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Configurator.ConfiguratorResponse"
            }
          }
        }
      }
    },
    "/api/rd/v1/Configurator/ViewABSPriceRanges": {
      "post": {
        "tags": ["Configurator"],
        "summary": "Views the abs price ranges.",
        "operationId": "Configurator_ViewABSPriceRanges",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Configurator.ConfiguratorResponse"
            }
          }
        }
      }
    },
    "/api/rd/v1/Configurator/HideABSPriceRanges": {
      "post": {
        "tags": ["Configurator"],
        "summary": "Hides the abs price ranges.",
        "operationId": "Configurator_HideABSPriceRanges",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Configurator.ConfiguratorResponse"
            }
          }
        }
      }
    },
    "/api/rd/v1/Configurator/ViewABSProducts": {
      "post": {
        "tags": ["Configurator"],
        "summary": "Views the abs products.",
        "operationId": "Configurator_ViewABSProducts",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "absGroups",
            "in": "query",
            "description": "The abs groups.",
            "required": true,
            "type": "array",
            "items": { "type": "integer", "format": "int32" },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Webcom.API.RedirectResponse" }
          }
        }
      }
    },
    "/api/rd/v1/Configurator/ApplyConfigurationTemplate": {
      "post": {
        "tags": ["Configurator"],
        "summary": "Applies the configuration template.",
        "operationId": "Configurator_ApplyConfigurationTemplate",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Configurator.ConfiguratorResponse"
            }
          }
        }
      }
    },
    "/api/rd/v1/Configurator/GetAutoCompleteSourceTableValues": {
      "get": {
        "tags": ["Configurator"],
        "summary": "Gets the auto-complete values.",
        "operationId": "Configurator_GetAutoCompleteSourceTableValues",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "stdAttrCode",
            "in": "query",
            "description": "The standard attribute code.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "searchValue",
            "in": "query",
            "description": "The search value.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Configurator.AutoCompleteVM"
            }
          }
        }
      }
    },
    "/api/rd/v1/Configurator/SelectAutoCompleteAttribute": {
      "post": {
        "tags": ["Configurator"],
        "summary": "Selects the auto-complete attribute.",
        "operationId": "Configurator_SelectAutoCompleteAttribute",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "stdAttrCode",
            "in": "query",
            "description": "The standard attribute code.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "entryId",
            "in": "query",
            "description": "The entry identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Configurator.ConfiguratorResponse"
            }
          }
        }
      }
    },
    "/api/rd/v1/Configurator/GetConfigurationTree": {
      "get": {
        "tags": ["Configurator"],
        "summary": "Gets complete parent/child structure for configurator.",
        "operationId": "Configurator_GetConfigurationTree",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Configurator.VM.ConfigurationTree.ConfigurationTreeVM"
            }
          }
        }
      }
    },
    "/api/rd/v1/Configurator/GetConflictSummary": {
      "get": {
        "tags": ["Configurator"],
        "summary": "Gets complete parent/child structure for configurator.",
        "operationId": "Configurator_GetConflictSummary",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Configurator.VM.Responder.ConflictSummaryVM"
            }
          }
        }
      }
    },
    "/api/rd/v1/Configurator/Preserve": {
      "post": {
        "tags": ["Configurator"],
        "summary": "Saves current configuration",
        "operationId": "Configurator_Preserve",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/api/rd/v1/Configurator/Clone": {
      "post": {
        "tags": ["Configurator"],
        "summary": "Clone current configuration",
        "operationId": "Configurator_Clone",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "configurationId",
            "in": "query",
            "description": "The unique configuration id.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/api/rd/v1/Configurator/GetConfiguration": {
      "get": {
        "tags": ["Configurator"],
        "summary": "Gets simplified configuration model.",
        "operationId": "Configurator_GetConfiguration",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "configurationId",
            "in": "query",
            "description": "The unique configuration id.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/api/rd/v1/Configurator/DeleteConfiguration": {
      "delete": {
        "tags": ["Configurator"],
        "summary": "Deletes the configuration with provided id.",
        "operationId": "Configurator_DeleteConfiguration",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "configurationId",
            "in": "query",
            "description": "The unique configuration id.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/api/rd/v1/Configurator/GetFileResponseMessage": {
      "get": {
        "tags": ["Configurator"],
        "summary": "Gets the file response message.",
        "operationId": "Configurator_GetFileResponseMessage",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "fileName",
            "in": "query",
            "description": "Name of the file.",
            "required": true,
            "type": "string"
          },
          {
            "name": "content._buffer",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "content._origin",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._position",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._length",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._capacity",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._expandable",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content._writable",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content._exposable",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content._isOpen",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content.__identity",
            "in": "query",
            "required": false,
            "type": "object"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/api/v1/admin/files/ContentFile": {
      "get": {
        "tags": ["ContentFile"],
        "operationId": "ContentFile_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "type": "array", "items": { "type": "string" } }
          }
        }
      },
      "put": {
        "tags": ["ContentFile"],
        "summary": "Updates files",
        "operationId": "ContentFile_Put",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      },
      "post": {
        "tags": ["ContentFile"],
        "summary": "Creates new files",
        "operationId": "ContentFile_Post",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/api/v1/admin/files/ContentFile/{id}": {
      "get": {
        "tags": ["ContentFile"],
        "summary": "Gets specified file",
        "operationId": "ContentFile_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "File name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      },
      "put": {
        "tags": ["ContentFile"],
        "summary": "Updates specified file",
        "operationId": "ContentFile_Put",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Name of the file to update",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      },
      "delete": {
        "tags": ["ContentFile"],
        "summary": "Deletes specified file",
        "operationId": "ContentFile_Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "File name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/setup/api/v1/admin/files/ContentFile": {
      "get": {
        "tags": ["ContentFile"],
        "operationId": "ContentFile_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "type": "array", "items": { "type": "string" } }
          }
        }
      },
      "put": {
        "tags": ["ContentFile"],
        "summary": "Updates files",
        "operationId": "ContentFile_Put",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      },
      "post": {
        "tags": ["ContentFile"],
        "summary": "Creates new files",
        "operationId": "ContentFile_Post",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/setup/api/v1/admin/files/ContentFile/{id}": {
      "get": {
        "tags": ["ContentFile"],
        "summary": "Gets specified file",
        "operationId": "ContentFile_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "File name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      },
      "put": {
        "tags": ["ContentFile"],
        "summary": "Updates specified file",
        "operationId": "ContentFile_Put",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Name of the file to update",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      },
      "delete": {
        "tags": ["ContentFile"],
        "summary": "Deletes specified file",
        "operationId": "ContentFile_Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "File name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/api/rd/v1/Core/LogError": {
      "post": {
        "tags": ["Core"],
        "summary": "Logs the error.",
        "operationId": "Core_LogError",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "message",
            "in": "query",
            "description": "The message.",
            "required": true,
            "type": "string"
          },
          {
            "name": "url",
            "in": "query",
            "description": "The URL.",
            "required": true,
            "type": "string"
          },
          {
            "name": "line",
            "in": "query",
            "description": "The line.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Webcom.API.StatusVm" }
          }
        }
      }
    },
    "/api/rd/v1/Core/RefreshSession": {
      "get": {
        "tags": ["Core"],
        "summary": "Refreshes the session.",
        "operationId": "Core_RefreshSession",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Webcom.API.StatusVm" }
          }
        }
      }
    },
    "/api/rd/v1/Core/LogIn": {
      "post": {
        "tags": ["Core"],
        "summary": "Logs the in.",
        "operationId": "Core_LogIn",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "The username.",
            "required": true,
            "type": "string"
          },
          {
            "name": "password",
            "in": "query",
            "description": "The password.",
            "required": true,
            "type": "string"
          },
          {
            "name": "domain",
            "in": "query",
            "description": "The domain.",
            "required": true,
            "type": "string"
          },
          {
            "name": "hideMenu",
            "in": "query",
            "description": "if set to true [hide menu].",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "string" } }
        }
      }
    },
    "/api/rd/v1/Core/LogInGuestUser": {
      "post": {
        "tags": ["Core"],
        "summary": "Logs the in guest user.",
        "operationId": "Core_LogInGuestUser",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "The username.",
            "required": true,
            "type": "string"
          },
          {
            "name": "password",
            "in": "query",
            "description": "The password.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "string" } }
        }
      }
    },
    "/api/rd/v1/Core/LogInJWT": {
      "post": {
        "tags": ["Core"],
        "summary": "Logs the user in with JWT.\r\nTo use this method you must first define shared secret in Setup/Application parameters.\r\nAlgorithm used is HS256 so header is\r\nheader:\r\n {\r\n    \"typ\": \"JWT\",\r\n    \"alg\": \"HS256\"\r\n }\r\n\r\nWhat we ecpect in JWT payload:\r\n - exp (Expiration which didn't expire yet)\r\n - username - existing CPQ User's username\r\n - domain - CPQ tenant name\r\n\r\npayload:\r\n {\r\n    \"exp\": 1488893055,\r\n    \"username\": \"my_username\",\r\n    \"domain\": \"my_tenant_name\"\r\n }\r\n\r\nToken should be sent in request authorization header like below.\r\nAuthorization: Bearer [token]",
        "operationId": "Core_LogInJWT",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "string" } }
        }
      }
    },
    "/api/rd/v1/Core/LoginFromSalesforce": {
      "post": {
        "tags": ["Core"],
        "summary": "Logins to CPQ from salesforce.",
        "operationId": "Core_LoginFromSalesforce",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "sessionId",
            "in": "query",
            "description": "The SF session identifier.",
            "required": true,
            "type": "string"
          },
          {
            "name": "sfApiUrl",
            "in": "query",
            "description": "The SF API URL.",
            "required": true,
            "type": "string"
          },
          {
            "name": "sfApiPassword",
            "in": "query",
            "description": "The SF API password as set in CPQ.",
            "required": true,
            "type": "string"
          },
          {
            "name": "domainName",
            "in": "query",
            "description": "Name of the CPQ domain.",
            "required": true,
            "type": "string"
          },
          {
            "name": "opportunityId",
            "in": "query",
            "description": "The SF opportunity identifier. This parameter is optional and should be provided if e.g. Create/Update Opportunity CPQ action is called via API.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "string" } }
        }
      }
    },
    "/api/rd/v1/Core/LoginGeoIP": {
      "post": {
        "tags": ["Core"],
        "summary": "Login using Geo iP, this will be caled from external \"Honey pot\" service for users from embargoed countries,\r\nAuthorization of the external service will be done using Auth header in request which should match \"GeoIPAuthorizationCode\" app para",
        "operationId": "Core_LoginGeoIP",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "Request from external service",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.GeoIP.GeoIPLoginRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.GeoIP.GeoIPLoginResponse"
            }
          }
        }
      }
    },
    "/api/rd/v1/Core/GetFileResponseMessage": {
      "get": {
        "tags": ["Core"],
        "summary": "Gets the file response message.",
        "operationId": "Core_GetFileResponseMessage",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "fileName",
            "in": "query",
            "description": "Name of the file.",
            "required": true,
            "type": "string"
          },
          {
            "name": "content._buffer",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "content._origin",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._position",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._length",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._capacity",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._expandable",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content._writable",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content._exposable",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content._isOpen",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content.__identity",
            "in": "query",
            "required": false,
            "type": "object"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/api/v1/admin/CpqQuoteItemColumnsMapping/GetData": {
      "get": {
        "tags": ["CpqQuoteItemColumnsMapping"],
        "operationId": "CpqQuoteItemColumnsMapping_GetData",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "templateId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/api/v1/admin/CpqQuoteItemColumnsMapping/SaveMapping": {
      "post": {
        "tags": ["CpqQuoteItemColumnsMapping"],
        "operationId": "CpqQuoteItemColumnsMapping_SaveMapping",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "quoteItemColumnMapping",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Webcom.API.Admin.Providers.CLM.ClmQuoteItemColumnMapping"
            }
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/api/v1/admin/CpqQuoteItemColumnsMapping/GenerateSecretKey": {
      "get": {
        "tags": ["CpqQuoteItemColumnsMapping"],
        "summary": "Generates the secret key suitable for SHA-256.",
        "operationId": "CpqQuoteItemColumnsMapping_GenerateSecretKey",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "string" } }
        }
      }
    },
    "/api/v1/admin/CpqQuoteItemColumnsMapping/GetFileResponseMessage": {
      "get": {
        "tags": ["CpqQuoteItemColumnsMapping"],
        "summary": "Gets the file response message.",
        "operationId": "CpqQuoteItemColumnsMapping_GetFileResponseMessage",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "fileName",
            "in": "query",
            "description": "Name of the file.",
            "required": true,
            "type": "string"
          },
          {
            "name": "content._buffer",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "content._origin",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._position",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._length",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._capacity",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._expandable",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content._writable",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content._exposable",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content._isOpen",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content.__identity",
            "in": "query",
            "required": false,
            "type": "object"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/setup/api/v1/admin/customers/{id}": {
      "get": {
        "tags": ["Customer"],
        "summary": "Gets customer with provided id",
        "operationId": "Customer_GetCustomer",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.SetupSPA.Customers.VM.CustomerVM"
            }
          }
        }
      }
    },
    "/api/v1/CustomerApi/GetCrmCustomerMapping": {
      "get": {
        "tags": ["CustomerApi"],
        "summary": "Gets the customer mappings.",
        "operationId": "CustomerApi_GetCrmCustomerMapping",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.Public.Customers.CustomerMappingsApiResponse"
            }
          }
        }
      }
    },
    "/api/v1/CustomerApi/GetFileResponseMessage": {
      "get": {
        "tags": ["CustomerApi"],
        "summary": "Gets the file response message.",
        "operationId": "CustomerApi_GetFileResponseMessage",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "fileName",
            "in": "query",
            "description": "Name of the file.",
            "required": true,
            "type": "string"
          },
          {
            "name": "content._buffer",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "content._origin",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._position",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._length",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._capacity",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._expandable",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content._writable",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content._exposable",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content._isOpen",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content.__identity",
            "in": "query",
            "required": false,
            "type": "object"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/api/rd/v1/CustomerFeedback/GetData": {
      "get": {
        "tags": ["CustomerFeedback"],
        "operationId": "CustomerFeedback_GetData",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Webcom.API.RD.Cart.CustomerFeedback.VM.CustomerFeedbackVM"
              }
            }
          }
        }
      }
    },
    "/api/rd/v1/CustomerFeedback/GetUnreadCount": {
      "get": {
        "tags": ["CustomerFeedback"],
        "operationId": "CustomerFeedback_GetUnreadCount",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/api/rd/v1/CustomerFeedback/SaveComment": {
      "post": {
        "tags": ["CustomerFeedback"],
        "operationId": "CustomerFeedback_SaveComment",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "customerFeedbackComment",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Cart.CustomerFeedback.CustomerFeedbackComment"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Webcom.API.RD.Cart.CustomerFeedback.VM.CustomerFeedbackVM"
              }
            }
          }
        }
      }
    },
    "/api/rd/v1/CustomerFeedback/DeleteComment": {
      "post": {
        "tags": ["CustomerFeedback"],
        "summary": "Deletes comment",
        "operationId": "CustomerFeedback_DeleteComment",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Comment id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Webcom.API.RD.Cart.CustomerFeedback.VM.CustomerFeedbackVM"
              }
            }
          }
        }
      }
    },
    "/api/rd/v1/CustomerFeedback/GetFileResponseMessage": {
      "get": {
        "tags": ["CustomerFeedback"],
        "summary": "Gets the file response message.",
        "operationId": "CustomerFeedback_GetFileResponseMessage",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "fileName",
            "in": "query",
            "description": "Name of the file.",
            "required": true,
            "type": "string"
          },
          {
            "name": "content._buffer",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "content._origin",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._position",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._length",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._capacity",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._expandable",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content._writable",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content._exposable",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content._isOpen",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content.__identity",
            "in": "query",
            "required": false,
            "type": "object"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/api/rd/v1/Customers/ClearCustomerRole": {
      "post": {
        "tags": ["Customers"],
        "summary": "Clears the customer role.",
        "operationId": "Customers_ClearCustomerRole",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "roleType",
            "in": "query",
            "description": "Type of the role.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Webcom.API.RD.Customers.CustomerRoleResponse"
              }
            }
          }
        }
      }
    },
    "/api/rd/v1/Customers/CopyCustomer": {
      "post": {
        "tags": ["Customers"],
        "summary": "Copies the customer.",
        "operationId": "Customers_CopyCustomer",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "The identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "filter",
            "in": "body",
            "description": "The filter.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Customers.CustomerListRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Customers.CustomerListResponse"
            }
          }
        }
      }
    },
    "/api/rd/v1/Customers/GetAccountInfo": {
      "post": {
        "tags": ["Customers"],
        "summary": "Gets the account information.",
        "operationId": "Customers_GetAccountInfo",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "description": "The account identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Customers.AccountInfoResponse"
            }
          }
        }
      }
    },
    "/api/rd/v1/Customers/GetAddressesPostCodeLookup": {
      "post": {
        "tags": ["Customers"],
        "summary": "Gets the addresses post code lookup.",
        "operationId": "Customers_GetAddressesPostCodeLookup",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "countryCode",
            "in": "query",
            "description": "The country code.",
            "required": true,
            "type": "string"
          },
          {
            "name": "zipCode",
            "in": "query",
            "description": "The zip code.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Customers.AddressesLookupResponse"
            }
          }
        }
      }
    },
    "/api/rd/v1/Customers/GetContactInfo": {
      "post": {
        "tags": ["Customers"],
        "summary": "Gets the contact information.",
        "operationId": "Customers_GetContactInfo",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "contactId",
            "in": "query",
            "description": "The contact identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Customers.AccountInfoResponse"
            }
          }
        }
      }
    },
    "/api/rd/v1/Customers/GetCrmAccountAndContactsForImport": {
      "post": {
        "tags": ["Customers"],
        "summary": "Gets the CRM account and contacts for import.",
        "operationId": "Customers_GetCrmAccountAndContactsForImport",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "description": "The account identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Customers.AccountDetailsResponse"
            }
          }
        }
      }
    },
    "/api/rd/v1/Customers/ChangedSelectedCountry": {
      "post": {
        "tags": ["Customers"],
        "summary": "Handles on selected country changed events",
        "operationId": "Customers_ChangedSelectedCountry",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "Get states for selected country request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Customers.GetStatesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Webcom.API.NameValuePair" }
            }
          }
        }
      }
    },
    "/api/rd/v1/Customers/GetCrmLookupInfo": {
      "post": {
        "tags": ["Customers"],
        "summary": "Gets the CRM lookup information.",
        "operationId": "Customers_GetCrmLookupInfo",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "roleType",
            "in": "query",
            "description": "Type of the role.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Customers.CrmLookupResponse"
            }
          }
        }
      }
    },
    "/api/rd/v1/Customers/GetCustomer": {
      "post": {
        "tags": ["Customers"],
        "summary": "Gets the customer.",
        "operationId": "Customers_GetCustomer",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "The identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Customers.CustomerRoleResponse"
            }
          }
        }
      }
    },
    "/api/rd/v1/Customers/GetCustomersForCustomerRole": {
      "post": {
        "tags": ["Customers"],
        "summary": "Gets the customers for customer role.",
        "operationId": "Customers_GetCustomersForCustomerRole",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "roleType",
            "in": "query",
            "description": "Type of the role.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Customers.CustomerListResponse"
            }
          }
        }
      }
    },
    "/api/rd/v1/Customers/GetData": {
      "post": {
        "tags": ["Customers"],
        "summary": "Gets the data.",
        "operationId": "Customers_GetData",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "filter",
            "in": "body",
            "description": "The filter.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Customers.CustomerListRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Customers.CustomerListResponse"
            }
          }
        }
      }
    },
    "/api/rd/v1/Customers/GetInitData": {
      "get": {
        "tags": ["Customers"],
        "summary": "Gets the initialize data.",
        "operationId": "Customers_GetInitData",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Customers.CustomerListResponse"
            }
          }
        }
      }
    },
    "/api/rd/v1/Customers/GetInitShippingInfoData": {
      "get": {
        "tags": ["Customers"],
        "summary": "Gets the initialize shipping information data.",
        "operationId": "Customers_GetInitShippingInfoData",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Customers.ShippingInfoResponse"
            }
          }
        }
      }
    },
    "/api/rd/v1/Customers/GetPostCodeLookupAddressById": {
      "post": {
        "tags": ["Customers"],
        "summary": "Gets the post code lookup address by identifier.",
        "operationId": "Customers_GetPostCodeLookupAddressById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "The identifier.",
            "required": true,
            "type": "string"
          },
          {
            "name": "byPostCode",
            "in": "query",
            "description": "if set to true [by post code].",
            "required": true,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Customers.AddressResponse"
            }
          }
        }
      }
    },
    "/api/rd/v1/Customers/GetSearchSuggestions": {
      "get": {
        "tags": ["Customers"],
        "summary": "Gets the search suggestions.",
        "operationId": "Customers_GetSearchSuggestions",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "description": "The query.",
            "required": true,
            "type": "string"
          },
          {
            "name": "roleType",
            "in": "query",
            "description": "Type of the role.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Webcom.API.RD.Customers.SearchResponse"
              }
            }
          }
        }
      }
    },
    "/api/rd/v1/Customers/ImportCustomerFromCrm": {
      "post": {
        "tags": ["Customers"],
        "summary": "Imports the customer from CRM.",
        "operationId": "Customers_ImportCustomerFromCrm",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "description": "The account identifier.",
            "required": true,
            "type": "string"
          },
          {
            "name": "contactId",
            "in": "query",
            "description": "The contact identifier.",
            "required": true,
            "type": "string"
          },
          {
            "name": "roleType",
            "in": "query",
            "description": "Type of the role.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Webcom.API.RD.Customers.CustomerRoleResponse"
              }
            }
          }
        }
      }
    },
    "/api/rd/v1/Customers/NewCustomerShippingInfo": {
      "post": {
        "tags": ["Customers"],
        "summary": "News the customer shipping information.",
        "operationId": "Customers_NewCustomerShippingInfo",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "roleType",
            "in": "query",
            "description": "Type of the role.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Customers.CustomerRoleResponse"
            }
          }
        }
      }
    },
    "/api/rd/v1/Customers/PickCustomerFromLookup": {
      "post": {
        "tags": ["Customers"],
        "summary": "Picks the customer from lookup.",
        "operationId": "Customers_PickCustomerFromLookup",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "roleType",
            "in": "query",
            "description": "Type of the role.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "customerId",
            "in": "query",
            "description": "The customer identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Webcom.API.RD.Customers.CustomerRoleResponse"
              }
            }
          }
        }
      }
    },
    "/api/rd/v1/Customers/ReloadCustomerData": {
      "post": {
        "tags": ["Customers"],
        "summary": "Reloads the customer data.",
        "operationId": "Customers_ReloadCustomerData",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "roleType",
            "in": "query",
            "description": "Type of the role.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Customers.CustomerRoleResponse"
            }
          }
        }
      }
    },
    "/api/rd/v1/Customers/RemoveCustomer": {
      "post": {
        "tags": ["Customers"],
        "summary": "Removes the customer.",
        "operationId": "Customers_RemoveCustomer",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "The identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "filter",
            "in": "body",
            "description": "The filter.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Customers.CustomerListRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Customers.CustomerListResponse"
            }
          }
        }
      }
    },
    "/api/rd/v1/Customers/SaveCustomer": {
      "post": {
        "tags": ["Customers"],
        "summary": "Saves the customer.",
        "operationId": "Customers_SaveCustomer",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "customer",
            "in": "body",
            "description": "The customer.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Customers.SaveCustomerRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Customers.CustomerListResponse"
            }
          }
        }
      }
    },
    "/api/rd/v1/Customers/SaveCustomerShippingInfo": {
      "post": {
        "tags": ["Customers"],
        "summary": "Saves the customer shipping information.",
        "operationId": "Customers_SaveCustomerShippingInfo",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "customer",
            "in": "body",
            "description": "The customer.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Customers.SaveCustomerRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Webcom.API.RD.Customers.CustomerRoleResponse"
              }
            }
          }
        }
      }
    },
    "/api/rd/v1/Customers/CopyCustomerTo": {
      "post": {
        "tags": ["Customers"],
        "summary": "Copies the customer to.",
        "operationId": "Customers_CopyCustomerTo",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "copyFrom",
            "in": "query",
            "description": "The copy from.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "copyTo",
            "in": "query",
            "description": "The copy to.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Webcom.API.RD.Customers.CustomerRoleResponse"
              }
            }
          }
        }
      }
    },
    "/api/rd/v1/Customers/GetFileResponseMessage": {
      "get": {
        "tags": ["Customers"],
        "summary": "Gets the file response message.",
        "operationId": "Customers_GetFileResponseMessage",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "fileName",
            "in": "query",
            "description": "Name of the file.",
            "required": true,
            "type": "string"
          },
          {
            "name": "content._buffer",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "content._origin",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._position",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._length",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._capacity",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._expandable",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content._writable",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content._exposable",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content._isOpen",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content.__identity",
            "in": "query",
            "required": false,
            "type": "object"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/api/v1/customers": {
      "get": {
        "tags": ["CustomersApi"],
        "summary": "Get list of customers with provided customerCode",
        "operationId": "CustomersApi_GetCustomersInfo",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "customerCode",
            "in": "query",
            "description": "The customer code.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/api/v1/admin/CustomFields/GetFileResponseMessage": {
      "get": {
        "tags": ["CustomFields"],
        "summary": "Gets the file response message.",
        "operationId": "CustomFields_GetFileResponseMessage",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "fileName",
            "in": "query",
            "description": "Name of the file.",
            "required": true,
            "type": "string"
          },
          {
            "name": "content._buffer",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "content._origin",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._position",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._length",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._capacity",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._expandable",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content._writable",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content._exposable",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content._isOpen",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content.__identity",
            "in": "query",
            "required": false,
            "type": "object"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/api/v1/admin/files/CustomImage": {
      "get": {
        "tags": ["CustomImage"],
        "operationId": "CustomImage_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "type": "array", "items": { "type": "string" } }
          }
        }
      },
      "put": {
        "tags": ["CustomImage"],
        "summary": "Updates files",
        "operationId": "CustomImage_Put",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      },
      "post": {
        "tags": ["CustomImage"],
        "summary": "Creates new files",
        "operationId": "CustomImage_Post",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/api/v1/admin/files/CustomImage/{id}": {
      "get": {
        "tags": ["CustomImage"],
        "summary": "Gets specified file",
        "operationId": "CustomImage_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "File name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      },
      "put": {
        "tags": ["CustomImage"],
        "summary": "Updates specified file",
        "operationId": "CustomImage_Put",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Name of the file to update",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      },
      "delete": {
        "tags": ["CustomImage"],
        "summary": "Deletes specified file",
        "operationId": "CustomImage_Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "File name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/setup/api/v1/admin/files/CustomImage": {
      "get": {
        "tags": ["CustomImage"],
        "operationId": "CustomImage_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "type": "array", "items": { "type": "string" } }
          }
        }
      },
      "put": {
        "tags": ["CustomImage"],
        "summary": "Updates files",
        "operationId": "CustomImage_Put",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      },
      "post": {
        "tags": ["CustomImage"],
        "summary": "Creates new files",
        "operationId": "CustomImage_Post",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/setup/api/v1/admin/files/CustomImage/{id}": {
      "get": {
        "tags": ["CustomImage"],
        "summary": "Gets specified file",
        "operationId": "CustomImage_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "File name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      },
      "put": {
        "tags": ["CustomImage"],
        "summary": "Updates specified file",
        "operationId": "CustomImage_Put",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Name of the file to update",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      },
      "delete": {
        "tags": ["CustomImage"],
        "summary": "Deletes specified file",
        "operationId": "CustomImage_Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "File name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/setup/api/v1/admin/dataDeletionSettings": {
      "get": {
        "tags": ["DataDeletionSettings"],
        "summary": "Gets all data deletion settings",
        "operationId": "DataDeletionSettings_GetDataDeletionSettings",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.SetupSPA.DataDeletion.VM.DataDeletionSettingsVM"
            }
          }
        }
      },
      "post": {
        "tags": ["DataDeletionSettings"],
        "summary": "Saves defined data deletion settings",
        "operationId": "DataDeletionSettings_SaveDataDeletionSettings",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "dataDeletionSettings",
            "in": "body",
            "description": "Data deletion settings",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Webcom.API.SetupSPA.DataDeletion.VM.DataDeletionSettingsVM"
            }
          }
        ],
        "responses": { "204": { "description": "No Content" } }
      }
    },
    "/setup/api/v1/admin/dataDeletionSettings/quote": {
      "get": {
        "tags": ["DataDeletionSettings"],
        "summary": "Gets quote lookups",
        "operationId": "DataDeletionSettings_GetQuoteLookups",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Webcom.API.SetupSPA.Common.LookupVM"
              }
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/dataProtectionLog": {
      "get": {
        "tags": ["DataProtectionLog"],
        "operationId": "DataProtectionLog_GetDataProtectionLog",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.Common.Models.PagedDataVM[Webcom.API.SetupSPA.DataProtection.VM.DataProtectionLogVM]"
            }
          }
        }
      }
    },
    "/api/rd/v1/DealView/GetDealViewInitData": {
      "get": {
        "tags": ["DealView"],
        "operationId": "DealView_GetDealViewInitData",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "tabId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Cart.DealViewResponse"
            }
          }
        }
      }
    },
    "/api/rd/v1/DealView/BulkUpdateDealStructure": {
      "post": {
        "tags": ["DealView"],
        "operationId": "DealView_BulkUpdateDealStructure",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "quoteId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "dealStructure",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Webcom.Configurator.Core.DealStructure.DealStructureModel"
              }
            }
          }
        ],
        "responses": { "204": { "description": "No Content" } }
      }
    },
    "/api/rd/v1/DealView/MoveItemToSection": {
      "get": {
        "tags": ["DealView"],
        "operationId": "DealView_MoveItemToSection",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "itemId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sectionPath",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": { "204": { "description": "No Content" } }
      }
    },
    "/api/rd/v1/DealView/GetDealSectionByPath": {
      "get": {
        "tags": ["DealView"],
        "operationId": "DealView_GetDealSectionByPath",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "sectionPath",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.Configurator.Core.DealStructure.DealStructureModel"
            }
          }
        }
      }
    },
    "/api/rd/v1/DealView/SetActiveEditableGroup": {
      "post": {
        "tags": ["DealView"],
        "summary": "Sets the active editable group.",
        "operationId": "DealView_SetActiveEditableGroup",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "editableGroup",
            "in": "query",
            "description": "The editable group.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Cart.CartResponse"
            }
          }
        }
      }
    },
    "/api/rd/v1/DealView/SearchSectionsByName": {
      "get": {
        "tags": ["DealView"],
        "summary": "Sets the active editable group.",
        "operationId": "DealView_SearchSectionsByName",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "searchString",
            "in": "query",
            "description": "The editable group.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Webcom.Configurator.Core.DealStructure.DealStructureModel"
              }
            }
          }
        }
      }
    },
    "/api/rd/v1/DealView/DealStructureModelsCount": {
      "get": {
        "tags": ["DealView"],
        "summary": "Gets deal structure models count for current quote.",
        "operationId": "DealView_DealStructureModelsCount",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "format": "int32", "type": "integer" }
          }
        }
      }
    },
    "/api/rd/v1/DealView/DownloadSectionsTemplate": {
      "get": {
        "tags": ["DealView"],
        "operationId": "DealView_DownloadSectionsTemplate",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/api/rd/v1/DealView/ExportDealStructure": {
      "get": {
        "tags": ["DealView"],
        "operationId": "DealView_ExportDealStructure",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "filterQuery",
            "in": "query",
            "required": true,
            "type": "array",
            "items": { "type": "string" },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/api/rd/v1/DealView/GetFilterableItemColumns": {
      "get": {
        "tags": ["DealView"],
        "summary": "Gets filterable standard and item custom fields.",
        "operationId": "DealView_GetFilterableItemColumns",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Webcom.Quote.Helpers.Filtering.FilterFields.QuoteItemFilterField"
              }
            }
          }
        }
      }
    },
    "/api/rd/v1/DealView/GetMinAndMaxForColumn": {
      "get": {
        "tags": ["DealView"],
        "summary": "Get min and max values for given quote item custom field.",
        "operationId": "DealView_GetMinAndMaxForColumn",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "column",
            "in": "query",
            "description": "Custom field name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Cart.VM.QuoteItemMinMaxResponseVM"
            }
          }
        }
      }
    },
    "/api/rd/v1/DealView/GetCustomFieldAutocomplete": {
      "get": {
        "tags": ["DealView"],
        "summary": "Get list of custom field available values for given quote custom field based on search string.",
        "operationId": "DealView_GetCustomFieldAutocomplete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "column",
            "in": "query",
            "description": "Custom field name",
            "required": true,
            "type": "string"
          },
          {
            "name": "searchString",
            "in": "query",
            "description": "Search string",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "type": "array", "items": { "type": "string" } }
          }
        }
      }
    },
    "/api/rd/v1/DealView/GetFieldDistinctValues": {
      "get": {
        "tags": ["DealView"],
        "summary": "Get list of distinct values if there are fewer than 10.",
        "operationId": "DealView_GetFieldDistinctValues",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "column",
            "in": "query",
            "description": "Custom field name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Cart.VM.DistinctValuesVM"
            }
          }
        }
      }
    },
    "/api/rd/v1/DealView/GetSectionsDistinctPaths": {
      "get": {
        "tags": ["DealView"],
        "summary": "Get list of distinct section paths if there are fewer than 10.",
        "operationId": "DealView_GetSectionsDistinctPaths",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Cart.VM.DistinctValuesVM"
            }
          }
        }
      }
    },
    "/api/rd/v1/DealView/GetCustomFieldAutocompleteAttribute": {
      "get": {
        "tags": ["DealView"],
        "summary": "Get list of attribute custom field available values for given quote custom field based on search string.",
        "operationId": "DealView_GetCustomFieldAutocompleteAttribute",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "column",
            "in": "query",
            "description": "Custom field name",
            "required": true,
            "type": "string"
          },
          {
            "name": "searchString",
            "in": "query",
            "description": "Custom field id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Webcom.Configurator.Core.IdNamePair"
              }
            }
          }
        }
      }
    },
    "/api/rd/v1/DealView/GetFiltersMetadata": {
      "get": {
        "tags": ["DealView"],
        "summary": "Get medatata for filterable columns.",
        "operationId": "DealView_GetFiltersMetadata",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Cart.VM.FilterMetadataVM"
            }
          }
        }
      }
    },
    "/api/rd/v1/DealView/GetSectionPaths": {
      "get": {
        "tags": ["DealView"],
        "summary": "Get list of section paths for given quote custom field based on search string.",
        "operationId": "DealView_GetSectionPaths",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "searchString",
            "in": "query",
            "description": "Search string",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "type": "array", "items": { "type": "string" } }
          }
        }
      }
    },
    "/api/rd/v1/DealView/GetFilteredDealStructure": {
      "get": {
        "tags": ["DealView"],
        "operationId": "DealView_GetFilteredDealStructure",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "filterQuery",
            "in": "query",
            "required": true,
            "type": "array",
            "items": { "type": "array", "items": { "type": "string" } },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "format": "int32", "type": "integer" }
            }
          }
        }
      }
    },
    "/api/rd/v1/DealView/DistributeSections": {
      "post": {
        "tags": ["DealView"],
        "operationId": "DealView_DistributeSections",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Cart.VM.Sections.SectionDistributionRequest"
            }
          }
        ],
        "responses": { "204": { "description": "No Content" } }
      }
    },
    "/api/rd/v1/DealView/Redistribute": {
      "get": {
        "tags": ["DealView"],
        "operationId": "DealView_Redistribute",
        "consumes": [],
        "produces": [],
        "responses": { "204": { "description": "No Content" } }
      }
    },
    "/api/rd/v1/DealView/RetractDistribution": {
      "post": {
        "tags": ["DealView"],
        "operationId": "DealView_RetractDistribution",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Cart.VM.Sections.SectionDistributionRequest"
            }
          }
        ],
        "responses": { "204": { "description": "No Content" } }
      }
    },
    "/api/rd/v1/DealView/GetSectionTotals": {
      "post": {
        "tags": ["DealView"],
        "summary": "Gets the section totals.",
        "operationId": "DealView_GetSectionTotals",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Cart.VM.Sections.SectionTotalsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Webcom.API.RD.Cart.VM.Sections.SectionTotalsVM"
              }
            }
          }
        }
      }
    },
    "/api/rd/v1/DealView/GetFileResponseMessage": {
      "get": {
        "tags": ["DealView"],
        "summary": "Gets the file response message.",
        "operationId": "DealView_GetFileResponseMessage",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "fileName",
            "in": "query",
            "description": "Name of the file.",
            "required": true,
            "type": "string"
          },
          {
            "name": "content._buffer",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "content._origin",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._position",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._length",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._capacity",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._expandable",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content._writable",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content._exposable",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content._isOpen",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content.__identity",
            "in": "query",
            "required": false,
            "type": "object"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/api/v1/ESign/Callback": {
      "get": {
        "tags": ["ESign"],
        "summary": "Process callback requst from AdobeSign system based on provide query string parameters",
        "operationId": "ESign_Callback",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "domain",
            "in": "query",
            "description": "Target CPQ domain name",
            "required": true,
            "type": "string"
          },
          {
            "name": "documentKey",
            "in": "query",
            "description": "Agreement id in AdobeSign system",
            "required": true,
            "type": "string"
          },
          {
            "name": "eventType",
            "in": "query",
            "description": "Type of the event the fires callback call",
            "required": true,
            "type": "string"
          },
          {
            "name": "status",
            "in": "query",
            "description": "Adobe sign statu in which document currently is",
            "required": true,
            "type": "string"
          }
        ],
        "responses": { "204": { "description": "No Content" } }
      }
    },
    "/api/v1/ESign/GetFileResponseMessage": {
      "get": {
        "tags": ["ESign"],
        "summary": "Gets the file response message.",
        "operationId": "ESign_GetFileResponseMessage",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "fileName",
            "in": "query",
            "description": "Name of the file.",
            "required": true,
            "type": "string"
          },
          {
            "name": "content._buffer",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "content._origin",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._position",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._length",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._capacity",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._expandable",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content._writable",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content._exposable",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content._isOpen",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content.__identity",
            "in": "query",
            "required": false,
            "type": "object"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/setup/api/v1/admin/eventSubscription": {
      "get": {
        "tags": ["EventSubscription"],
        "summary": "Gets the paged webhooks.",
        "operationId": "EventSubscription_GetEventSubscriptions",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.Common.Models.PagedDataVM[Webcom.API.SetupSPA.EventSubscription.VM.EventSubscriptionTableRowVM]"
            }
          }
        }
      },
      "post": {
        "tags": ["EventSubscription"],
        "summary": "Saves the webhook.",
        "operationId": "EventSubscription_SaveEventSubscription",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "eventSubscription",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Webcom.API.SetupSPA.EventSubscription.VM.EventSubscriptionVM"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.SetupSPA.Common.UpdateInfoVM[System.Guid]"
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/eventSubscription/{id}": {
      "get": {
        "tags": ["EventSubscription"],
        "summary": "Gets the webhook.",
        "operationId": "EventSubscription_GetEventSubscription",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The webhook id",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.SetupSPA.EventSubscription.VM.EventSubscriptionVM"
            }
          }
        }
      },
      "delete": {
        "tags": ["EventSubscription"],
        "summary": "Deletes the webhook.",
        "operationId": "EventSubscription_DeleteWebhook",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The webhook id.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": { "204": { "description": "No Content" } }
      }
    },
    "/setup/api/v1/admin/eventSubscription/lookups/events": {
      "get": {
        "tags": ["EventSubscription"],
        "summary": "Gets the domain event lookups.",
        "operationId": "EventSubscription_GetDomainEventLookups",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Webcom.API.SetupSPA.Common.LookupVM[System.String]"
              }
            }
          }
        }
      }
    },
    "/api/rd/v1/Favorites/GetInitData": {
      "get": {
        "tags": ["Favorites"],
        "summary": "Gets the initialize data.",
        "operationId": "Favorites_GetInitData",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "productId",
            "in": "query",
            "description": "The product identifier.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "nameFilter",
            "in": "query",
            "description": "The name filter.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Favorites.FavoritesResponse"
            }
          }
        }
      }
    },
    "/api/rd/v1/Favorites/GetData": {
      "post": {
        "tags": ["Favorites"],
        "summary": "Gets the data.",
        "operationId": "Favorites_GetData",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The favorites request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Favorites.FavoritesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Favorites.FavoritesResponse"
            }
          }
        }
      }
    },
    "/api/rd/v1/Favorites/DeleteFavorite": {
      "post": {
        "tags": ["Favorites"],
        "summary": "Deletes the favorite.",
        "operationId": "Favorites_DeleteFavorite",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "favoriteId",
            "in": "query",
            "description": "The favorite identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Favorites.FavoriteActionResponse"
            }
          }
        }
      }
    },
    "/api/rd/v1/Favorites/DeleteFavoriteFromFavoritesList": {
      "post": {
        "tags": ["Favorites"],
        "summary": "Deletes the favorite from favorites list.",
        "operationId": "Favorites_DeleteFavoriteFromFavoritesList",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "favoriteId",
            "in": "query",
            "description": "The favorite identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "request",
            "in": "body",
            "description": "The favorite request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Favorites.FavoritesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Favorites.FavoritesResponse"
            }
          }
        }
      }
    },
    "/api/rd/v1/Favorites/UpdateFavoriteFromFavoritesList": {
      "post": {
        "tags": ["Favorites"],
        "summary": "Updates the favorite from favorites list.",
        "operationId": "Favorites_UpdateFavoriteFromFavoritesList",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "favoriteId",
            "in": "query",
            "description": "The favorite identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "name",
            "in": "query",
            "description": "The favorite name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "description",
            "in": "query",
            "description": "The favorite description.",
            "required": true,
            "type": "string"
          },
          {
            "name": "isSharedWithCompanyUsers",
            "in": "query",
            "description": "if set to true favorite is shared with company users.",
            "required": true,
            "type": "boolean"
          },
          {
            "name": "isSharedWithAllUsers",
            "in": "query",
            "description": "if set to true favorite is shared with all users.",
            "required": true,
            "type": "boolean"
          },
          {
            "name": "request",
            "in": "body",
            "description": "The favorite request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Favorites.FavoritesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Favorites.FavoritesResponse"
            }
          }
        }
      }
    },
    "/api/rd/v1/Favorites/SaveFavoriteFromCatalog": {
      "post": {
        "tags": ["Favorites"],
        "summary": "Saves the favorite from catalog.",
        "operationId": "Favorites_SaveFavoriteFromCatalog",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "productId",
            "in": "query",
            "description": "The product identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "name",
            "in": "query",
            "description": "The favorite name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "description",
            "in": "query",
            "description": "The favorite description.",
            "required": true,
            "type": "string"
          },
          {
            "name": "isSharedWithCompanyUsers",
            "in": "query",
            "description": "if set to true favorite is shared with company users.",
            "required": true,
            "type": "boolean"
          },
          {
            "name": "isSharedWithAllUsers",
            "in": "query",
            "description": "if set to true favorite is shared with all users.",
            "required": true,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Favorites.FavoriteActionResponse"
            }
          }
        }
      }
    },
    "/api/rd/v1/Favorites/SaveFavoriteFromConfigurator": {
      "post": {
        "tags": ["Favorites"],
        "summary": "Saves the favorite from configurator.",
        "operationId": "Favorites_SaveFavoriteFromConfigurator",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "productId",
            "in": "query",
            "description": "The product identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "name",
            "in": "query",
            "description": "The favorite name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "description",
            "in": "query",
            "description": "The favorite description.",
            "required": true,
            "type": "string"
          },
          {
            "name": "isSharedWithCompanyUsers",
            "in": "query",
            "description": "if set to true favorite is shared with company users.",
            "required": true,
            "type": "boolean"
          },
          {
            "name": "isSharedWithAllUsers",
            "in": "query",
            "description": "if set to true favorite is shared with all users.",
            "required": true,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Favorites.FavoriteActionResponse"
            }
          }
        }
      }
    },
    "/api/rd/v1/Favorites/SaveFavoriteFromCart": {
      "post": {
        "tags": ["Favorites"],
        "summary": "Saves the favorite from cart.",
        "operationId": "Favorites_SaveFavoriteFromCart",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "cartItem",
            "in": "query",
            "description": "The cart item.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "name",
            "in": "query",
            "description": "The favorite name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "description",
            "in": "query",
            "description": "The favorite description.",
            "required": true,
            "type": "string"
          },
          {
            "name": "isSharedWithCompanyUsers",
            "in": "query",
            "description": "if set to true favorite is shared with company users.",
            "required": true,
            "type": "boolean"
          },
          {
            "name": "isSharedWithAllUsers",
            "in": "query",
            "description": "if set to true favorite is shared with all users.",
            "required": true,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Favorites.FavoriteActionResponse"
            }
          }
        }
      }
    },
    "/api/rd/v1/Favorites/UpdateFavoriteFromConfigurator": {
      "post": {
        "tags": ["Favorites"],
        "summary": "Updates the favorite from configurator.",
        "operationId": "Favorites_UpdateFavoriteFromConfigurator",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "favoriteId",
            "in": "query",
            "description": "The favorite identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "name",
            "in": "query",
            "description": "The favorite name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "description",
            "in": "query",
            "description": "The favorite description.",
            "required": true,
            "type": "string"
          },
          {
            "name": "isSharedWithCompanyUsers",
            "in": "query",
            "description": "if set to true favorite is shared with company users.",
            "required": true,
            "type": "boolean"
          },
          {
            "name": "isSharedWithAllUsers",
            "in": "query",
            "description": "if set to true favorite is shared with all users.",
            "required": true,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Favorites.FavoriteActionResponse"
            }
          }
        }
      }
    },
    "/api/rd/v1/Favorites/AddToQuote": {
      "post": {
        "tags": ["Favorites"],
        "summary": "Adds to quote.",
        "operationId": "Favorites_AddToQuote",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "favoriteId",
            "in": "query",
            "description": "The favorite identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "quantity",
            "in": "query",
            "description": "The quantity.",
            "required": true,
            "type": "number",
            "format": "double"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Favorites.AddToQuoteResponse"
            }
          }
        }
      }
    },
    "/api/rd/v1/Favorites/GetProductNameAndDescription": {
      "post": {
        "tags": ["Favorites"],
        "summary": "Gets the product name and description.",
        "operationId": "Favorites_GetProductNameAndDescription",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "productId",
            "in": "query",
            "description": "The product identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Favorites.ProductNameDescriptonResponse"
            }
          }
        }
      }
    },
    "/api/rd/v1/Favorites/EditFavorite": {
      "post": {
        "tags": ["Favorites"],
        "summary": "Edits the configurable favorite.",
        "operationId": "Favorites_EditFavorite",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "favId",
            "in": "query",
            "description": "The favorite identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Webcom.API.StatusVm" }
          }
        }
      }
    },
    "/api/rd/v1/Favorites/GetFileResponseMessage": {
      "get": {
        "tags": ["Favorites"],
        "summary": "Gets the file response message.",
        "operationId": "Favorites_GetFileResponseMessage",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "fileName",
            "in": "query",
            "description": "Name of the file.",
            "required": true,
            "type": "string"
          },
          {
            "name": "content._buffer",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "content._origin",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._position",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._length",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._capacity",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._expandable",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content._writable",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content._exposable",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content._isOpen",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content.__identity",
            "in": "query",
            "required": false,
            "type": "object"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/setup/api/v1/admin/footer": {
      "get": {
        "tags": ["Footer"],
        "operationId": "Footer_GetFooterData",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "string" } }
        }
      }
    },
    "/api/scim/v1/Groups": {
      "get": {
        "tags": ["Groups"],
        "summary": "Retrieves group depend on a provided group id",
        "operationId": "Groups_RetreiveGroup",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "gid",
            "in": "query",
            "description": "Group unique identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "domain",
            "in": "query",
            "description": "Domain name where user belongs to",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      },
      "put": {
        "tags": ["Groups"],
        "summary": "Performs a full update. Consumers must retrieve the entire group (in JSON or XML format) and PUT \r\nthe desired modifications as the operation overwrites all previously stored data. \r\nSince this performs a full update, Consumers MAY send read-only attributes of the retrieved \r\nresource and Service Provider MUST ignore any read-only attributes that are present in \r\nthe payload of a PUT request. Unless otherwise specified a successful PUT operation returns a 200 OK \r\nresponse code and the entire Resource within the response body, \r\nenabling the Consumer to correlate the Consumer's and Provider's views of the updated Resource.",
        "operationId": "Groups_PutGroup",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "gid",
            "in": "query",
            "description": "Group unique identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "group",
            "in": "body",
            "description": "Group to be updated",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Webcom.Common.Provisioning.Entities.Group"
            }
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      },
      "post": {
        "tags": ["Groups"],
        "summary": "Creates group depend on the data provided on the POST body request",
        "operationId": "Groups_CreateGroup",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "group",
            "in": "body",
            "description": "Group to be created",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Webcom.Common.Provisioning.Entities.Group"
            }
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      },
      "delete": {
        "tags": ["Groups"],
        "summary": "Deletes group on service provider on consumers request \r\ndepend on a provided group's identifier in json format",
        "operationId": "Groups_DeleteGroup",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "gid",
            "in": "query",
            "description": "Group unique identifier",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/setup/api/v1/admin/guestUser/lookup": {
      "get": {
        "tags": ["GuestUser"],
        "summary": "Gets guest user's lookup",
        "operationId": "GuestUser_GuestUserLookup",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Webcom.API.SetupSPA.Common.LookupVM"
              }
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/guestUser": {
      "get": {
        "tags": ["GuestUser"],
        "summary": "Gets guest user settings",
        "operationId": "GuestUser_GetDefault",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.SetupSPA.GuestUser.GuestUserVM"
            }
          }
        }
      },
      "post": {
        "tags": ["GuestUser"],
        "summary": "Saves guest user settings",
        "operationId": "GuestUser_Save",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "guestUser",
            "in": "body",
            "description": "Guest user",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Webcom.API.SetupSPA.GuestUser.GuestUserVM"
            }
          }
        ],
        "responses": { "204": { "description": "No Content" } }
      }
    },
    "/api/v1/Health/Details": {
      "get": {
        "tags": ["Health"],
        "summary": "Returns health status and found errors per each coponent.\r\nRequires authentication",
        "operationId": "Health_Details",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/api/v1/Health/Status": {
      "get": {
        "tags": ["Health"],
        "summary": "Returns health status per each component",
        "operationId": "Health_Status",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/api/v1/Health/GetFileResponseMessage": {
      "get": {
        "tags": ["Health"],
        "summary": "Gets the file response message.",
        "operationId": "Health_GetFileResponseMessage",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "fileName",
            "in": "query",
            "description": "Name of the file.",
            "required": true,
            "type": "string"
          },
          {
            "name": "content._buffer",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "content._origin",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._position",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._length",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._capacity",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._expandable",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content._writable",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content._exposable",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content._isOpen",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content.__identity",
            "in": "query",
            "required": false,
            "type": "object"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/setup/api/v1/admin/ironPythonContext/properties/{fullName}/{assemblyName}": {
      "get": {
        "tags": ["IronPythonSpa"],
        "summary": "Gets the scripting properties.",
        "operationId": "IronPythonSpa_GetProperties",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "fullName",
            "in": "path",
            "description": "The full name. Ex: Scripting.Quote",
            "required": true,
            "type": "string"
          },
          {
            "name": "assemblyName",
            "in": "path",
            "description": "Name of the assembly name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Scripting.VM.ScriptingPropertyVM"
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/ironPythonContext/properties/firstLevel/{mode}": {
      "get": {
        "tags": ["IronPythonSpa"],
        "summary": "Gets the first level data.",
        "operationId": "IronPythonSpa_GetFirstLevelProperties",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          { "name": "mode", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Webcom.API.RD.Scripting.VM.ScriptingPropertyVM"
              }
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/ironPythonContext/syntax": {
      "post": {
        "tags": ["IronPythonSpa"],
        "summary": "Checks syntax of a script through CPQScriptEngine and returns errors if any.",
        "operationId": "IronPythonSpa_CheckSyntax",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "script",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Webcom.API.SetupSPA.IronPython.VM.ScriptVM"
            }
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "string" } }
        }
      }
    },
    "/api/v1/admin/ItemCustomFields/GetFileResponseMessage": {
      "get": {
        "tags": ["ItemCustomFields"],
        "summary": "Gets the file response message.",
        "operationId": "ItemCustomFields_GetFileResponseMessage",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "fileName",
            "in": "query",
            "description": "Name of the file.",
            "required": true,
            "type": "string"
          },
          {
            "name": "content._buffer",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "content._origin",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._position",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._length",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._capacity",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._expandable",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content._writable",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content._exposable",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content._isOpen",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content.__identity",
            "in": "query",
            "required": false,
            "type": "object"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/setup/api/v1/admin/lookups/user": {
      "get": {
        "tags": ["Lookup"],
        "summary": "Gets user lookups",
        "operationId": "Lookup_GetUserLookups",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "description": "Query",
            "required": false,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "description": "Id",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Webcom.API.SetupSPA.Common.LookupVM[System.Int32]"
              }
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/lookups/userCustomFieldAttributes": {
      "get": {
        "tags": ["Lookup"],
        "summary": "Gets all user custom fields as attributes",
        "operationId": "Lookup_GetUserCustomFieldAttributes",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Webcom.API.SetupSPA.Common.LookupVM[System.Int32]"
              }
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/lookups/customer": {
      "get": {
        "tags": ["Lookup"],
        "summary": "Gets customer lookups",
        "operationId": "Lookup_GetCustomerLookups",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Webcom.API.SetupSPA.Common.LookupVM[System.Int32]"
              }
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/lookups/quoteStatuses": {
      "get": {
        "tags": ["Lookup"],
        "summary": "Gets all quote statuses",
        "operationId": "Lookup_GetQuoteStatuses",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Webcom.API.SetupSPA.Common.LookupVM[System.Int32]"
              }
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/lookups/userCustomFieldAttributes/{userId}/values/{customFieldId}": {
      "get": {
        "tags": ["Lookup"],
        "summary": "Gets values for attribute user custom field",
        "operationId": "Lookup_GetUserCustomFieldAttributeValues",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "customFieldId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "userId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "query",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Webcom.API.SetupSPA.Common.LookupVM[System.String]"
              }
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/lookups/userTypes": {
      "get": {
        "tags": ["Lookup"],
        "summary": "Gets user type lookups",
        "operationId": "Lookup_GetUserTypeLookups",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "description": "Query",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Webcom.API.SetupSPA.Common.LookupVM[System.Int32]"
              }
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/lookups/companies": {
      "get": {
        "tags": ["Lookup"],
        "operationId": "Lookup_GetCompanyLookups",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Webcom.API.SetupSPA.Common.LookupVM[System.Int32]"
              }
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/lookups/tab": {
      "get": {
        "tags": ["Lookup"],
        "summary": "Gets tab lookups",
        "operationId": "Lookup_GetTabs",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Webcom.API.SetupSPA.Common.LookupVM[System.Int32]"
              }
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/lookups/status": {
      "get": {
        "tags": ["Lookup"],
        "operationId": "Lookup_GetStatusesLookups",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          { "name": "query", "in": "query", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Webcom.API.SetupSPA.Common.LookupVM"
              }
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/lookups/productTypes": {
      "get": {
        "tags": ["Lookup"],
        "summary": "Gets Product Types (translated)",
        "operationId": "Lookup_GetProductTypes",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "description": "Query (product type name)",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Webcom.API.SetupSPA.Common.LookupVM"
              }
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/lookups/productCategories": {
      "get": {
        "tags": ["Lookup"],
        "summary": "Gets Product Categories (translated)",
        "operationId": "Lookup_GetProductCategories",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "description": "Query (category name)",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Webcom.API.SetupSPA.Common.LookupVM"
              }
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/lookups/productWizards": {
      "get": {
        "tags": ["Lookup"],
        "summary": "Gets Product Wizard Types (translated)",
        "operationId": "Lookup_GetProductWizardTypes",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Webcom.API.SetupSPA.Common.LookupVM[System.String]"
              }
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/lookups/productAttributeDisplayTypes": {
      "get": {
        "tags": ["Lookup"],
        "summary": "Gets Product Attribute Display types",
        "operationId": "Lookup_GetProductAttributeDisplayTypes",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Webcom.API.SetupSPA.Common.LookupVM"
              }
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/lookups/productAttributeTabs": {
      "get": {
        "tags": ["Lookup"],
        "summary": "Gets Product Attribute Tabs",
        "operationId": "Lookup_GetProducAttributeTabs",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Webcom.API.SetupSPA.Common.LookupVM"
              }
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/lookups/countries": {
      "get": {
        "tags": ["Lookup"],
        "summary": "All countries",
        "operationId": "Lookup_GetCountries",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Webcom.API.SetupSPA.Common.LookupVM[System.String]"
              }
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/lookups/states/{countryName}": {
      "get": {
        "tags": ["Lookup"],
        "summary": "Gets all states lookups for given country Name",
        "operationId": "Lookup_GetStates",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "countryName",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Webcom.API.SetupSPA.Common.LookupVM[System.String]"
              }
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/lookups/dictionaries": {
      "get": {
        "tags": ["Lookup"],
        "summary": "Gets all dictionaries",
        "operationId": "Lookup_GetDictionaries",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Webcom.API.SetupSPA.Common.LookupVM"
              }
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/lookups/defaultdictionaries": {
      "get": {
        "tags": ["Lookup"],
        "summary": "Gets default system dictionaries",
        "operationId": "Lookup_GetDefaultDictionaries",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Webcom.API.SetupSPA.Common.LookupVM"
              }
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/lookups/customTables": {
      "get": {
        "tags": ["Lookup"],
        "summary": "Get custom tables",
        "operationId": "Lookup_GetCustomTables",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Webcom.API.SetupSPA.Common.LookupVM[System.Int32]"
              }
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/lookups/attributesDataTypes": {
      "get": {
        "tags": ["Lookup"],
        "summary": "Get attribute data types",
        "operationId": "Lookup_GetAttributeDataTypes",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Webcom.API.SetupSPA.Common.LookupVM[System.String]"
              }
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/lookups/attribute/products/{productIds}/attributes/{displayTypeId}": {
      "get": {
        "tags": ["Lookup"],
        "summary": "Get all attributes from products that attribute contains",
        "operationId": "Lookup_GetContainerProductAttributes",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "productIds",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "query",
            "in": "query",
            "description": "search criteria",
            "required": false,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "description": "Attribute id",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "displayTypeId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Webcom.API.SetupSPA.Common.LookupVM"
              }
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/lookups/attributes/{displayTypeId}": {
      "get": {
        "tags": ["Lookup"],
        "summary": "Gets attributes lookup",
        "operationId": "Lookup_GetContainerAttributes",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "displayTypeId",
            "in": "path",
            "description": "display type",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "query",
            "in": "query",
            "description": "search criteria",
            "required": false,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Webcom.API.SetupSPA.Common.LookupVM"
              }
            }
          }
        }
      }
    },
    "/api/v1/markets": {
      "get": {
        "tags": ["Markets"],
        "summary": "Get markets",
        "operationId": "Markets_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "marketCode",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/setup/api/v1/admin/menu/items/hidden": {
      "get": {
        "tags": ["Menu"],
        "summary": "Gets key for hidden items in menu for new setup",
        "operationId": "Menu_GetHiddenMenuKeys",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "type": "array", "items": { "type": "string" } }
          }
        }
      }
    },
    "/setup/api/v1/admin/menu/items/disabled": {
      "get": {
        "tags": ["Menu"],
        "summary": "Gets keys of all menu items which should be disabled for CpqLite",
        "operationId": "Menu_GetDisabledMenuItemsForCpqLite",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "type": "array", "items": { "type": "string" } }
          }
        }
      }
    },
    "/setup/api/v1/admin/pageRecommendations": {
      "get": {
        "tags": ["PageRecommendation"],
        "summary": "Gets filtered, paged and sorted recommended pages with total number of pages.",
        "operationId": "PageRecommendation_GetAllPages",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.Common.Models.PagedDataVM[Webcom.API.SetupSPA.PageRecommendation.VM.PageRecommendationVM]"
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/pageRecommendations/pages": {
      "get": {
        "tags": ["PageRecommendation"],
        "summary": "Gets landing page name based on User Type.",
        "operationId": "PageRecommendation_GetLandingPageName",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "startPage",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "landingProductSystemId",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "string" } }
        }
      }
    },
    "/setup/api/v1/admin/permissionGroups": {
      "get": {
        "tags": ["PermissionGroup"],
        "summary": "Get all prmissions for data table",
        "operationId": "PermissionGroup_GetPermissionGroups",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.Common.Models.PagedDataVM[Webcom.API.SetupSPA.Permission.VM.PermissionGroupRowVM]"
            }
          }
        }
      },
      "post": {
        "tags": ["PermissionGroup"],
        "summary": "Saves manually created permission group",
        "operationId": "PermissionGroup_SavePermission",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "permissionGroup",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Webcom.API.SetupSPA.Permission.VM.PermissionGroupVM"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "format": "int32", "type": "integer" }
          }
        }
      }
    },
    "/setup/api/v1/admin/permissionGroups/users": {
      "post": {
        "tags": ["PermissionGroup"],
        "summary": "Gets all users which belongs to selected permission groups",
        "operationId": "PermissionGroup_GetUsersByPermissionGroups",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Webcom.API.Common.Models.FilteredRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.Common.Models.PagedDataVM[Webcom.API.SetupSPA.Users.VM.UserTableRowVM]"
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/permissionGroups/permissions": {
      "get": {
        "tags": ["PermissionGroup"],
        "summary": "Get all permissions",
        "operationId": "PermissionGroup_GetAllPermissions",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.SetupSPA.Permission.VM.PermissionGroupsVM"
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/permissionGroups/permissions/group": {
      "get": {
        "tags": ["PermissionGroup"],
        "summary": "Get all permissions for permission groups",
        "operationId": "PermissionGroup_GetAllPermissionsForPermissionGroups",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.SetupSPA.Permission.VM.PermissionGroupsVM"
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/permissionGroups/permissions/userTypeGroup": {
      "get": {
        "tags": ["PermissionGroup"],
        "summary": "Get all permissions for permission groups",
        "operationId": "PermissionGroup_GetAllPermissionsForUserTypeGroup",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.SetupSPA.Permission.VM.PermissionGroupsVM"
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/permissionGroups/permissions/admin": {
      "get": {
        "tags": ["PermissionGroup"],
        "summary": "Gets all permission groups for admin users",
        "operationId": "PermissionGroup_GetAdminPermissionGroups",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.SetupSPA.Permission.VM.PermissionGroupsVM"
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/permissionGroups/{permissionId}": {
      "get": {
        "tags": ["PermissionGroup"],
        "summary": "Get permission by Id",
        "operationId": "PermissionGroup_GetPermissionById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "permissionId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.SetupSPA.Permission.VM.PermissionGroupVM"
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/permissionGroups/users/{userId}/id": {
      "get": {
        "tags": ["PermissionGroup"],
        "summary": "Get permission id of user with provided id",
        "operationId": "PermissionGroup_GetUserPermissionId",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "User id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "format": "int32", "type": "integer" }
          }
        }
      }
    },
    "/setup/api/v1/admin/permissionGroups/name": {
      "get": {
        "tags": ["PermissionGroup"],
        "summary": "Get name by Id for user permission groups",
        "operationId": "PermissionGroup_GetNameByIdForUserPermissionGroup",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "description": "User id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Collections.Generic.KeyValuePair[System.Int32,System.String]"
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/permissionGroups/SystemId": {
      "get": {
        "tags": ["PermissionGroup"],
        "summary": "Gets system id",
        "operationId": "PermissionGroup_GetSystemId",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "string" } }
        }
      }
    },
    "/setup/api/v1/admin/permissionGroups/{id}": {
      "delete": {
        "tags": ["PermissionGroup"],
        "summary": "Deletes permission group with provided id",
        "operationId": "PermissionGroup_DeletePermission",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": { "204": { "description": "No Content" } }
      }
    },
    "/setup/api/v1/admin/pricebook/lookup": {
      "get": {
        "tags": ["Pricebook"],
        "operationId": "Pricebook_GetPricebookLookups",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.Common.Models.PagedDataVM[Webcom.API.SetupSPA.Pricebook.VM.PricebookRowVM]"
            }
          }
        }
      },
      "put": {
        "tags": ["Pricebook"],
        "operationId": "Pricebook_SavePricebookLookups",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "rows",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Webcom.API.SetupSPA.Pricebook.VM.PricebookRowVM"
              }
            }
          }
        ],
        "responses": { "204": { "description": "No Content" } }
      }
    },
    "/api/v1/admin/Pricebooks/GetMarketSelectionInitData": {
      "get": {
        "tags": ["Pricebooks"],
        "summary": "Gets market selection data.",
        "operationId": "Pricebooks_GetMarketSelectionInitData",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.Admin.Pricebooks.PricebooksResponse"
            }
          }
        }
      }
    },
    "/api/v1/admin/Pricebooks/SetMarketFilter": {
      "post": {
        "tags": ["Pricebooks"],
        "summary": "Sets market filter to current session.",
        "operationId": "Pricebooks_SetMarketFilter",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Filter",
            "required": true,
            "type": "string"
          }
        ],
        "responses": { "204": { "description": "No Content" } }
      }
    },
    "/api/v1/admin/Pricebooks/GetPricebookSettingsInitData": {
      "get": {
        "tags": ["Pricebooks"],
        "summary": "Gets pricebook settings data.",
        "operationId": "Pricebooks_GetPricebookSettingsInitData",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.Admin.Pricebooks.PricebookSettingsVM"
            }
          }
        }
      }
    },
    "/api/v1/admin/Pricebooks/GetPricebooksPerMarketInitData": {
      "get": {
        "tags": ["Pricebooks"],
        "summary": "Gets all pricebooks in particular market",
        "operationId": "Pricebooks_GetPricebooksPerMarketInitData",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "marketId",
            "in": "query",
            "description": "market id as in database",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.Admin.Pricebooks.PricebooksPerMarketResponse"
            }
          }
        }
      }
    },
    "/api/v1/admin/Pricebooks/GetFilteredPricebooksPerMarket": {
      "post": {
        "tags": ["Pricebooks"],
        "summary": "Gets filtered and sorted pricebooks in particular market.",
        "operationId": "Pricebooks_GetFilteredPricebooksPerMarket",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "marketId",
            "in": "query",
            "description": "Market Id.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "filter",
            "in": "body",
            "description": "Filtering and sorting criteria.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Webcom.API.Admin.Pricebooks.History.FilterDataRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.Admin.Pricebooks.PricebooksPerMarketResponse"
            }
          }
        }
      }
    },
    "/api/v1/admin/Pricebooks/DeletePricebook": {
      "post": {
        "tags": ["Pricebooks"],
        "summary": "Deletes pricebook by id.",
        "operationId": "Pricebooks_DeletePricebook",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Pricebook id.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Webcom.API.StatusVm" }
          }
        }
      }
    },
    "/api/v1/admin/Pricebooks/GetPricebookEntriesInitData": {
      "get": {
        "tags": ["Pricebooks"],
        "summary": "Gets the first page of pricebook entries for the specified pricebook.",
        "operationId": "Pricebooks_GetPricebookEntriesInitData",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "pricebookId",
            "in": "query",
            "description": "Pricebook id.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.Admin.Pricebooks.PricebookEntriesResponse"
            }
          }
        }
      }
    },
    "/api/v1/admin/Pricebooks/GetFilteredPricebookEntries": {
      "post": {
        "tags": ["Pricebooks"],
        "summary": "Gets pricebook entries for the specified pricebook which satisfy filtering, paging and sorting criteria.",
        "operationId": "Pricebooks_GetFilteredPricebookEntries",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "pricebookId",
            "in": "query",
            "description": "Pricebook id.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "filter",
            "in": "body",
            "description": "Filter - contains filtering, sorting and paging parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Webcom.API.Admin.Pricebooks.History.FilterDataRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.Admin.Pricebooks.PricebookEntriesResponse"
            }
          }
        }
      }
    },
    "/api/v1/admin/Pricebooks/SavePricebookSettings": {
      "post": {
        "tags": ["Pricebooks"],
        "summary": "Saves pricebook settings",
        "operationId": "Pricebooks_SavePricebookSettings",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "pricebookSettings",
            "in": "body",
            "description": "Pricebook settings",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Webcom.API.Admin.Pricebooks.PricebookSettingsVM"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Webcom.API.StatusVm" }
          }
        }
      }
    },
    "/api/v1/admin/Pricebooks/GetHistoryData": {
      "post": {
        "tags": ["Pricebooks"],
        "summary": "Gets the history data.",
        "operationId": "Pricebooks_GetHistoryData",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "filter",
            "in": "body",
            "description": "The filter.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Webcom.API.Admin.Pricebooks.History.FilterDataRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.Admin.Pricebooks.History.PricebookHistoryResponse"
            }
          }
        }
      }
    },
    "/api/v1/admin/Pricebooks/GetHistoryInitData": {
      "get": {
        "tags": ["Pricebooks"],
        "summary": "Gets the initialize history data.",
        "operationId": "Pricebooks_GetHistoryInitData",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.Admin.Pricebooks.History.PricebookHistoryResponse"
            }
          }
        }
      }
    },
    "/api/v1/admin/Pricebooks/GetPricebookDefinitionInitData": {
      "get": {
        "tags": ["Pricebooks"],
        "summary": "Gets the definition of pricebook with specified id.",
        "operationId": "Pricebooks_GetPricebookDefinitionInitData",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "marketId",
            "in": "query",
            "description": "The market id.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pricebookId",
            "in": "query",
            "description": "The pricebook id.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.Admin.Pricebooks.PricebookDefinitionResponse"
            }
          }
        }
      }
    },
    "/api/v1/admin/Pricebooks/SavePricebookDefinition": {
      "post": {
        "tags": ["Pricebooks"],
        "summary": "Saves pricebook definition",
        "operationId": "Pricebooks_SavePricebookDefinition",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "pricebookDefinitionVM",
            "in": "body",
            "description": "Pricebook definition VM",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Webcom.API.Admin.Pricebooks.PricebookDefinitionVM"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.Admin.Pricebooks.SavePricebookDefinitionResponse"
            }
          }
        }
      }
    },
    "/api/v1/admin/Pricebooks/SavePricebookEntry": {
      "post": {
        "tags": ["Pricebooks"],
        "summary": "Saves or edits pricebook entry.",
        "operationId": "Pricebooks_SavePricebookEntry",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "pricebookId",
            "in": "query",
            "description": "Pricebook Id.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pricebookEntryVM",
            "in": "body",
            "description": "Pricebook entry data.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Webcom.API.Admin.Pricebooks.PricebookEntryVM"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.Admin.Pricebooks.SavePricebookEntryResponse"
            }
          }
        }
      }
    },
    "/api/v1/admin/Pricebooks/DeletePricebookEntry": {
      "post": {
        "tags": ["Pricebooks"],
        "summary": "Deletes pricebook entry specified by entryId from pricebook specified by pricebook Id.",
        "operationId": "Pricebooks_DeletePricebookEntry",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "pricebookId",
            "in": "query",
            "description": "Pricebook id.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "entryId",
            "in": "query",
            "description": "Entry id.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Webcom.API.StatusVm" }
          }
        }
      }
    },
    "/api/v1/admin/Pricebooks/GetCustomFields": {
      "get": {
        "tags": ["Pricebooks"],
        "summary": "Gets custom fields for provided field type id",
        "operationId": "Pricebooks_GetCustomFields",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "fieldTypeId",
            "in": "query",
            "description": "Field type id (user,billTo,shipTo,endUser)",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Webcom.API.IdNamePair" }
            }
          }
        }
      }
    },
    "/api/v1/admin/Pricebooks/ExportAllPricebookEntries": {
      "get": {
        "tags": ["Pricebooks"],
        "summary": "Exports all specified pricebook entries into Excel file",
        "operationId": "Pricebooks_ExportAllPricebookEntries",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "pricebookId",
            "in": "query",
            "description": "Pricebook Id.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.Admin.Pricebooks.ExportEntriesResponse"
            }
          }
        }
      }
    },
    "/api/v1/admin/Pricebooks/ExportListedPricebookEntries": {
      "post": {
        "tags": ["Pricebooks"],
        "summary": "Exports listed pricebook entries into Excel file",
        "operationId": "Pricebooks_ExportListedPricebookEntries",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "pricebookId",
            "in": "query",
            "description": "Pricebook Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "selectedEntryIds",
            "in": "body",
            "description": "Selected entry IDs",
            "required": true,
            "schema": {
              "type": "array",
              "items": { "format": "int32", "type": "integer" }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.Admin.Pricebooks.ExportEntriesResponse"
            }
          }
        }
      }
    },
    "/api/v1/admin/Pricebooks/ImportPricebookEntries": {
      "post": {
        "tags": ["Pricebooks"],
        "summary": "Import pricebook entries from Excel file",
        "operationId": "Pricebooks_ImportPricebookEntries",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "pricebookId",
            "in": "query",
            "description": "Pricebook Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Webcom.API.StatusVm" }
          }
        }
      }
    },
    "/api/v1/admin/Pricebooks/DeleteAllEntries": {
      "post": {
        "tags": ["Pricebooks"],
        "summary": "Deletes all entries of specified pricebook",
        "operationId": "Pricebooks_DeleteAllEntries",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "pricebookId",
            "in": "query",
            "description": "Pricebook Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Webcom.API.StatusVm" }
          }
        }
      }
    },
    "/api/v1/admin/Pricebooks/GenerateSecretKey": {
      "get": {
        "tags": ["Pricebooks"],
        "summary": "Generates the secret key suitable for SHA-256.",
        "operationId": "Pricebooks_GenerateSecretKey",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "string" } }
        }
      }
    },
    "/api/v1/admin/Pricebooks/GetFileResponseMessage": {
      "get": {
        "tags": ["Pricebooks"],
        "summary": "Gets the file response message.",
        "operationId": "Pricebooks_GetFileResponseMessage",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "fileName",
            "in": "query",
            "description": "Name of the file.",
            "required": true,
            "type": "string"
          },
          {
            "name": "content._buffer",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "content._origin",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._position",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._length",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._capacity",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._expandable",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content._writable",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content._exposable",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content._isOpen",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content.__identity",
            "in": "query",
            "required": false,
            "type": "object"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/api/rd/v1/ProductDetails/GetInitData": {
      "get": {
        "tags": ["ProductDetails"],
        "summary": "Gets the initialize data.",
        "operationId": "ProductDetails_GetInitData",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "productId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.ProductDetails.ProductDetailsResponse"
            }
          }
        }
      }
    },
    "/api/rd/v1/ProductDetails/GetFileResponseMessage": {
      "get": {
        "tags": ["ProductDetails"],
        "summary": "Gets the file response message.",
        "operationId": "ProductDetails_GetFileResponseMessage",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "fileName",
            "in": "query",
            "description": "Name of the file.",
            "required": true,
            "type": "string"
          },
          {
            "name": "content._buffer",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "content._origin",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._position",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._length",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._capacity",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._expandable",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content._writable",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content._exposable",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content._isOpen",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content.__identity",
            "in": "query",
            "required": false,
            "type": "object"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/api/v1/admin/files/ProductImage": {
      "get": {
        "tags": ["ProductImage"],
        "operationId": "ProductImage_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "type": "array", "items": { "type": "string" } }
          }
        }
      },
      "put": {
        "tags": ["ProductImage"],
        "summary": "Updates files",
        "operationId": "ProductImage_Put",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      },
      "post": {
        "tags": ["ProductImage"],
        "summary": "Creates new files",
        "operationId": "ProductImage_Post",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/api/v1/admin/files/ProductImage/{id}": {
      "get": {
        "tags": ["ProductImage"],
        "summary": "Gets specified file",
        "operationId": "ProductImage_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "File name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      },
      "put": {
        "tags": ["ProductImage"],
        "summary": "Updates specified file",
        "operationId": "ProductImage_Put",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Name of the file to update",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      },
      "delete": {
        "tags": ["ProductImage"],
        "summary": "Deletes specified file",
        "operationId": "ProductImage_Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "File name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/setup/api/v1/admin/files/ProductImage": {
      "get": {
        "tags": ["ProductImage"],
        "operationId": "ProductImage_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "type": "array", "items": { "type": "string" } }
          }
        }
      },
      "put": {
        "tags": ["ProductImage"],
        "summary": "Updates files",
        "operationId": "ProductImage_Put",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      },
      "post": {
        "tags": ["ProductImage"],
        "summary": "Creates new files",
        "operationId": "ProductImage_Post",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/setup/api/v1/admin/files/ProductImage/{id}": {
      "get": {
        "tags": ["ProductImage"],
        "summary": "Gets specified file",
        "operationId": "ProductImage_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "File name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      },
      "put": {
        "tags": ["ProductImage"],
        "summary": "Updates specified file",
        "operationId": "ProductImage_Put",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Name of the file to update",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      },
      "delete": {
        "tags": ["ProductImage"],
        "summary": "Deletes specified file",
        "operationId": "ProductImage_Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "File name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/setup/api/v1/admin/products": {
      "get": {
        "tags": ["Products"],
        "summary": "Gets filtered, paged and sorted products with total number of products",
        "operationId": "Products_GetProducts",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.Common.Models.PagedDataVM[Webcom.API.SetupSPA.Products.VM.ProductsTableRowVM]"
            }
          }
        }
      },
      "post": {
        "tags": ["Products"],
        "summary": "Saves product",
        "operationId": "Products_SaveProduct",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "productVM",
            "in": "body",
            "description": "Product",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Webcom.API.SetupSPA.Products.VM.ProductVM"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.SetupSPA.Common.UpdateInfoVM"
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/products/{ProductSystemId}/versions": {
      "get": {
        "tags": ["Products"],
        "summary": "Gets filtered, paged and sorted products with total number of products",
        "operationId": "Products_GetProductVersions",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "ProductSystemId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.Common.Models.PagedDataVM[Webcom.API.SetupSPA.Products.VM.ProductsVersionRowVM]"
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/products/Version/{productSystemId}/{productVersionId}": {
      "post": {
        "tags": ["Products"],
        "summary": "Creates new product version",
        "operationId": "Products_SaveProductVersion",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "productVersion",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Webcom.API.SetupSPA.Products.VM.ProductVersionSimpleVM"
            }
          },
          {
            "name": "productSystemId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "productVersionId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.SetupSPA.Products.VM.ProductsVersionRowVM"
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/products/version/upgradeAlias/isAvailable/{productVersionId}": {
      "get": {
        "tags": ["Products"],
        "summary": "Checks if product version has alias and has available upgrades",
        "operationId": "Products_IsAliasUpgradeAvailable",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "productVersionId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "boolean" } }
        }
      }
    },
    "/setup/api/v1/admin/products/version/upgradeAlias/{productVersionId}": {
      "post": {
        "tags": ["Products"],
        "summary": "",
        "operationId": "Products_UpgradeAliasToNewProductVersion",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "productVersionId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": { "204": { "description": "No Content" } }
      }
    },
    "/setup/api/v1/admin/products/Version/{productId}": {
      "delete": {
        "tags": ["Products"],
        "summary": "Gets filtered, paged and sorted products with total number of products",
        "operationId": "Products_DeleteProductVersion",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": { "204": { "description": "No Content" } }
      }
    },
    "/setup/api/v1/admin/products/Version/NextVersionNumber/{productSystemId}": {
      "get": {
        "tags": ["Products"],
        "summary": "Gets filtered, paged and sorted products with total number of products",
        "operationId": "Products_GetNextVersionNumber4ProductId",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "productSystemId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "format": "int32", "type": "integer" }
          }
        }
      }
    },
    "/setup/api/v1/admin/products/{productId}/Version/ProductSystemId": {
      "get": {
        "tags": ["Products"],
        "summary": "Get Product system id",
        "operationId": "Products_GetProductSystemId",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "string" } }
        }
      }
    },
    "/setup/api/v1/admin/products/{productId}/attributes/available": {
      "get": {
        "tags": ["Products"],
        "summary": "Gets filtered, paged and sorted products with total number of products",
        "operationId": "Products_GetAttributes",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.Common.Models.PagedDataVM[Webcom.API.SetupSPA.Attributes.VM.AttributeRowVM]"
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/products/{productId}/attributes": {
      "get": {
        "tags": ["Products"],
        "summary": "Gets paged and filtered attributes for product",
        "operationId": "Products_GetProductAttributes",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.Common.Models.PagedDataVM[Webcom.API.SetupSPA.Products.VM.ProductAttributeRowVM]"
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/products/{productId}/attributes/{productAttributeId}/isRequired/{isRequired}": {
      "post": {
        "tags": ["Products"],
        "summary": "Updates is required field for product attribute",
        "operationId": "Products_UpdateIsRequiredAttribute",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "productAttributeId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "isRequired",
            "in": "path",
            "description": "",
            "required": true,
            "type": "boolean"
          }
        ],
        "responses": { "204": { "description": "No Content" } }
      }
    },
    "/setup/api/v1/admin/products/{productId}/attributes/{productAttributeId}/isLineItem/{isLineItem}": {
      "post": {
        "tags": ["Products"],
        "summary": "Updates is line item for product attribute",
        "operationId": "Products_UpdateIsLineItemAttribute",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "productAttributeId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "isLineItem",
            "in": "path",
            "description": "",
            "required": true,
            "type": "boolean"
          }
        ],
        "responses": { "204": { "description": "No Content" } }
      }
    },
    "/setup/api/v1/admin/products/{productId}/aliases/{aliasId}/attributes": {
      "get": {
        "tags": ["Products"],
        "summary": "Gets paged and filtered attributes for product alias",
        "operationId": "Products_GetProductAliasAttributes",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "aliasId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.Common.Models.PagedDataVM[Webcom.API.SetupSPA.Products.VM.ProductAliasAttributeRowVM]"
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/products/{id}": {
      "get": {
        "tags": ["Products"],
        "summary": "Gets product with provided id",
        "operationId": "Products_GetProduct",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Product id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.SetupSPA.Products.VM.ProductVM"
            }
          }
        }
      },
      "delete": {
        "tags": ["Products"],
        "summary": "Deletes the product with provided id.",
        "operationId": "Products_DeleteProduct",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": { "204": { "description": "No Content" } }
      }
    },
    "/setup/api/v1/admin/products/{productId}/aliases/{aliasId}": {
      "get": {
        "tags": ["Products"],
        "summary": "Gets product alias with provided id",
        "operationId": "Products_GetProductAlias",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "Alias product ID",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "aliasId",
            "in": "path",
            "description": "Alias ID",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.SetupSPA.Products.VM.ProductAliasVM"
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/products/isAlias/{productId}": {
      "get": {
        "tags": ["Products"],
        "summary": "Is product with provided id alias",
        "operationId": "Products_IsProductAlias",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "Product id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "boolean" } }
        }
      }
    },
    "/setup/api/v1/admin/products/aliases/{productAliasId}/attributes/{productAttributeId}": {
      "get": {
        "tags": ["Products"],
        "summary": "Gets product alias attribute id",
        "operationId": "Products_GetProductAliasAttribute",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "productAliasId",
            "in": "path",
            "description": "Product alias id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "productAttributeId",
            "in": "path",
            "description": "Product attribute id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.SetupSPA.Products.VM.ProductAliasAttributeVM"
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/products/aliases/{productAliasId}/attributes": {
      "post": {
        "tags": ["Products"],
        "summary": "Saves attribute for product alias with provided id",
        "operationId": "Products_SaveProductAliasAttribute",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "productAliasId",
            "in": "path",
            "description": "Product alias id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "productAliasAttribute",
            "in": "body",
            "description": "Product alias attribute",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Webcom.API.SetupSPA.Products.VM.ProductAliasAttributeVM"
            }
          }
        ],
        "responses": { "204": { "description": "No Content" } }
      }
    },
    "/setup/api/v1/admin/products/attributes/{productAttributeId}/values": {
      "get": {
        "tags": ["Products"],
        "summary": "Gets product attribute values lookup list",
        "operationId": "Products_GetProductAttributeValues",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "productAttributeId",
            "in": "path",
            "description": "Product attribute id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Webcom.API.SetupSPA.Common.LookupVM"
              }
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/products/bySystemId/{systemId}": {
      "get": {
        "tags": ["Products"],
        "summary": "Gets product with provided systemId",
        "operationId": "Products_GetProductNameBySystemId",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "systemId",
            "in": "path",
            "description": "Product systemId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "string" } }
        }
      }
    },
    "/setup/api/v1/admin/products/definition/lookup": {
      "get": {
        "tags": ["Products"],
        "summary": "Gets product defn",
        "operationId": "Products_GetProductDefinitionLookup",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "displayTypeId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "productId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.SetupSPA.Products.VM.ProducDefinitionLookupVM"
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/products/{productId}/attributes/{standardAttributeCode}/lookup": {
      "get": {
        "tags": ["Products"],
        "summary": "Gets attributes lookup for product with provided id and attribute with provided standard attribute code",
        "operationId": "Products_GetAttributesLookup",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "Product id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "standardAttributeCode",
            "in": "path",
            "description": "Standard attribute code",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.SetupSPA.Products.VM.AttributeInstanceLookupVM"
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/products/{productId}/attributes/{standardAttributeCode}": {
      "get": {
        "tags": ["Products"],
        "summary": "Gets product attribute with provided id",
        "operationId": "Products_GetProductAttribute",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "Product id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "standardAttributeCode",
            "in": "path",
            "description": "Standard attribute code",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.SetupSPA.Products.VM.AttributeInstanceVM"
            }
          }
        }
      },
      "delete": {
        "tags": ["Products"],
        "summary": "Deletes the product attribute with provided id.",
        "operationId": "Products_DeleteProductAttribute",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "Product id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "standardAttributeCode",
            "in": "path",
            "description": "standardAttributeCode",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": { "204": { "description": "No Content" } }
      }
    },
    "/setup/api/v1/admin/products/{productId}/attributes/{standardAttributeCodes}": {
      "post": {
        "tags": ["Products"],
        "summary": "Adds attributes with provided standard attribute codes as csv string to product with provided id",
        "operationId": "Products_AddAttributesToProduct",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "Product id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "standardAttributeCodes",
            "in": "path",
            "description": "Standard attribute codes as csv string",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.SetupSPA.Common.UpdateInfoVM"
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/products/productAttributes": {
      "post": {
        "tags": ["Products"],
        "summary": "Saves product attribute",
        "operationId": "Products_SaveProductAttribute",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "attribute",
            "in": "body",
            "description": "Attribute instance",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Webcom.API.SetupSPA.Products.VM.AttributeInstanceVM"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.SetupSPA.Common.UpdateInfoVM"
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/products/{productId}/attributes/attributeValueRefProduct": {
      "get": {
        "tags": ["Products"],
        "summary": "Gets product with price data for displaying in attribute values table if attribute value has ref product with custom pricing",
        "operationId": "Products_GetProductForAttributeValueRef",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "Product id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.SetupSPA.Products.VM.AttributeValueProductRefVM"
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/products/rules/advanced/{ruleId}": {
      "get": {
        "tags": ["Products"],
        "summary": "Gets advanced rule with provided id",
        "operationId": "Products_GetAdvancedRule",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "ruleId",
            "in": "path",
            "description": "Advanced rule id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.SetupSPA.Products.VM.AdvancedRuleVM"
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/products/{productId}/rules/advanced": {
      "post": {
        "tags": ["Products"],
        "summary": "Saves advanced rule for product with provided id",
        "operationId": "Products_SaveAdvancedRule",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "Product id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "rule",
            "in": "body",
            "description": "Advanced rule",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Webcom.API.SetupSPA.Products.VM.AdvancedRuleVM"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "format": "int32", "type": "integer" }
          }
        }
      }
    },
    "/setup/api/v1/admin/products/productAttributes/{productAttributeId}/trigger": {
      "get": {
        "tags": ["Products"],
        "summary": "Gets attribute trigger definition for product attribute with provided id",
        "operationId": "Products_GetAttributeTriggerDefinition",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "productAttributeId",
            "in": "path",
            "description": "Product attribute id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.SetupSPA.Products.VM.AttributeTriggerDefinitionVM"
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/products/{productId}/productAttributes/trigger": {
      "post": {
        "tags": ["Products"],
        "summary": "Saves attribute triggers and definition",
        "operationId": "Products_AddOrUpdateProductAttributeTrigger",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Webcom.API.SetupSPA.Products.VM.AttributeTriggerDefinitionVM"
            }
          },
          {
            "name": "productId",
            "in": "path",
            "description": "Product to which Attribute trigger belongs to",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.SetupSPA.Common.UpdateInfoVM"
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/products/validationMessages/{messageId}": {
      "get": {
        "tags": ["Products"],
        "summary": "Gets validation message with provided id",
        "operationId": "Products_GetValidationMessage",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "messageId",
            "in": "path",
            "description": "Validation message id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.SetupSPA.Products.VM.ProductValidationMessageVM"
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/products/{productId}/validationMessages": {
      "post": {
        "tags": ["Products"],
        "summary": "Gets validation message for product with provided id",
        "operationId": "Products_SaveValidationMessage",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "Product id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "message",
            "in": "body",
            "description": "Validation message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Webcom.API.SetupSPA.Products.VM.ProductValidationMessageVM"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "format": "int32", "type": "integer" }
          }
        }
      }
    },
    "/setup/api/v1/admin/products/SystemEventScripts/global": {
      "get": {
        "tags": ["Products"],
        "summary": "Gets global system event scripts",
        "operationId": "Products_GetGlobalScripts",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Webcom.API.SetupSPA.Common.LookupVM[System.Int32]"
              }
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/products/productScripts/{scriptId}": {
      "get": {
        "tags": ["Products"],
        "summary": "Gets product script with provided id",
        "operationId": "Products_GetProductScript",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "scriptId",
            "in": "path",
            "description": "Product script id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.SetupSPA.Products.VM.ProductScriptVM"
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/products/productScripts/events": {
      "get": {
        "tags": ["Products"],
        "summary": "Gets product system event lookups",
        "operationId": "Products_GetProductEvents",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Webcom.API.SetupSPA.Common.LookupVM"
              }
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/products/productScripts/events/name": {
      "get": {
        "tags": ["Products"],
        "summary": "Get Product event names",
        "operationId": "Products_GetProductEventsNames",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Webcom.API.SetupSPA.Common.LookupVM[System.String]"
              }
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/products/{productId}/productScripts/eventHandlers/{eventId}": {
      "get": {
        "tags": ["Products"],
        "summary": "Gets event handler scripts attached to event with provided id",
        "operationId": "Products_GetScriptsByEventId",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "Product id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "eventId",
            "in": "path",
            "description": "Event id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Webcom.API.SetupSPA.Products.VM.EventHandlerScriptVM"
              }
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/products/{productId}/productScripts/eventHandlers": {
      "get": {
        "tags": ["Products"],
        "summary": "Gets event handler scripts for provided system event ids as csv string",
        "operationId": "Products_GetScriptsByEventIds",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "Product id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "csvIds",
            "in": "query",
            "description": "System event ids as CSV",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Webcom.API.SetupSPA.Products.VM.EventHandlerScriptVM"
              }
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/products/productScripts/events/infoMessage/{eventId}": {
      "get": {
        "tags": ["Products"],
        "summary": "Gets info message for event",
        "operationId": "Products_GetEventInfoMessage",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "eventId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "string" } }
        }
      }
    },
    "/setup/api/v1/admin/products/productScript": {
      "post": {
        "tags": ["Products"],
        "summary": "Save product script",
        "operationId": "Products_SaveProductScript",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "forceProxyGeneration",
            "in": "query",
            "description": "",
            "required": true,
            "type": "boolean"
          },
          {
            "name": "script",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Webcom.API.SetupSPA.Products.VM.ProductScriptVM"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.SetupSPA.Common.UpdateInfoVM"
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/products/{productId}/productScripts/{scriptId}/events/{eventIds}": {
      "delete": {
        "tags": ["Products"],
        "summary": "Detaches script with provided id from product with provided id for events with provided ids",
        "operationId": "Products_DetachProductScriptFromEvents",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "Product id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "scriptId",
            "in": "path",
            "description": "Script id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "eventIds",
            "in": "path",
            "description": "Event ids",
            "required": true,
            "type": "string"
          }
        ],
        "responses": { "204": { "description": "No Content" } }
      }
    },
    "/setup/api/v1/admin/products/{productId}/eventHandlers": {
      "post": {
        "tags": ["Products"],
        "summary": "Saves event handlers for product with provided id",
        "operationId": "Products_SaveProductEventHandlers",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "Product id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "eventHandlers",
            "in": "body",
            "description": "Event handlers to save",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Webcom.API.SetupSPA.Products.VM.EventHandlerScriptVM"
              }
            }
          }
        ],
        "responses": { "204": { "description": "No Content" } }
      }
    },
    "/setup/api/v1/admin/products/productScript/history/{scriptId}": {
      "get": {
        "tags": ["Products"],
        "summary": "Gets a script history",
        "operationId": "Products_GetProductScriptHistory",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "scriptId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.Common.Models.PagedDataVM[Webcom.API.SetupSPA.Products.VM.ScriptHistoryRecordVM]"
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/products/productScript/{scriptId}/history/{scriptRecordId}": {
      "get": {
        "tags": ["Products"],
        "summary": "Gets script record which represents a details of some history record",
        "operationId": "Products_GetScriptRecordDetails",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "scriptId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "scriptRecordId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.SetupSPA.Products.VM.ScriptHistoryRecordVM"
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/products/productScript/{scriptId}/history/compare": {
      "get": {
        "tags": ["Products"],
        "summary": "Gets list of script records details for comparing a script versions",
        "operationId": "Products_GetScriptRecordsDetailsCompare",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "scriptId",
            "in": "path",
            "description": "Global script id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "originalRecordId",
            "in": "query",
            "description": "Original script record id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "compareRecordId",
            "in": "query",
            "description": "Comapre script record id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Webcom.API.SetupSPA.Products.VM.ScriptHistoryRecordVM"
              }
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/products/productAttributes/hasABSCategories/{productAttributeId}": {
      "get": {
        "tags": ["Products"],
        "summary": "Checks whether product attribute with provided id has ABS categories",
        "operationId": "Products_HasABSCategories",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "productAttributeId",
            "in": "path",
            "description": "Product attribute id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "boolean" } }
        }
      }
    },
    "/setup/api/v1/admin/products/lookup": {
      "get": {
        "tags": ["Products"],
        "summary": "Gets product lookups",
        "operationId": "Products_GetProductsLookups",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "description": "Query (product name or system id)",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Webcom.API.SetupSPA.Common.LookupVM"
              }
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/products/aliases": {
      "post": {
        "tags": ["Products"],
        "summary": "Saves product alias",
        "operationId": "Products_SaveProductAlias",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "productAliasVM",
            "in": "body",
            "description": "Product alias",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Webcom.API.SetupSPA.Products.VM.ProductAliasVM"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "format": "int32", "type": "integer" }
          }
        }
      }
    },
    "/setup/api/v1/admin/products/{originalProductId}": {
      "post": {
        "tags": ["Products"],
        "summary": "Creates new product as a copy of product with provided id and applies data from provided product.",
        "operationId": "Products_CopyProduct",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "originalProductId",
            "in": "path",
            "description": "Original product id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "productVM",
            "in": "body",
            "description": "Product",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Webcom.API.SetupSPA.Products.VM.ProductVM"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.SetupSPA.Common.UpdateInfoVM"
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/products/aliases/{originalAliasId}": {
      "post": {
        "tags": ["Products"],
        "summary": "Creates new alias as a copy of alias with provided id and applies data from provided alias.",
        "operationId": "Products_CopyProductAlias",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "originalAliasId",
            "in": "path",
            "description": "Original alias id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "alias",
            "in": "body",
            "description": "Alias",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Webcom.API.SetupSPA.Products.VM.ProductAliasVM"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "format": "int32", "type": "integer" }
          }
        }
      }
    },
    "/setup/api/v1/admin/products/AttributeValuesList": {
      "post": {
        "tags": ["Products"],
        "summary": "Saves attribute values list",
        "operationId": "Products_SaveAttributeValuesList",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "attributeValuesListVM",
            "in": "body",
            "description": "Attribute values list VM",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Webcom.API.SetupSPA.Products.VM.AttributeValuesListVM"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Webcom.API.SetupSPA.Products.VM.AttributeValueInstanceVM"
              }
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/products/shippings": {
      "get": {
        "tags": ["Products"],
        "summary": "Gets available shippings costs",
        "operationId": "Products_GetShippingLookups",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Webcom.API.SetupSPA.Common.LookupVM"
              }
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/products/AttributeValuesList/Product": {
      "post": {
        "tags": ["Products"],
        "summary": "Saves attribute values list for product",
        "operationId": "Products_SaveAttributeValuesListProduct",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "attributeValuesListVM",
            "in": "body",
            "description": "Attribute values list VM",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Webcom.API.SetupSPA.Products.VM.AttributeValuesListVM"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Webcom.API.SetupSPA.Products.VM.AttributeValueInstanceVM"
              }
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/products/LineItemInfoCustomColumnCount": {
      "get": {
        "tags": ["Products"],
        "summary": "Gets count of line item info custom columns",
        "operationId": "Products_GetLineItemInfoCustomColumnCount",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "format": "int32", "type": "integer" }
          }
        }
      }
    },
    "/setup/api/v1/admin/products/{productId}/layout": {
      "get": {
        "tags": ["Products"],
        "summary": "Gets layout for product with provided id",
        "operationId": "Products_GetProductLayout",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "Product id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.SetupSPA.Products.VM.ProductLayoutVM"
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/products/{wizardId}/layout/tabs/templates": {
      "get": {
        "tags": ["Products"],
        "summary": "Gets tab template lookups",
        "operationId": "Products_GetTabTemplates",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "wizardId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "enum": [1, 2, 3, 4, 5]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Webcom.API.SetupSPA.Common.LookupVM"
              }
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/products/{productId}/scripts/{scriptId}": {
      "delete": {
        "tags": ["Products"],
        "summary": "Deletes product's script",
        "operationId": "Products_DeleteProductScript",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "Id of the product script belongs to",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "scriptId",
            "in": "path",
            "description": "Script Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": { "204": { "description": "No Content" } }
      }
    },
    "/setup/api/v1/admin/products/layout/tabs/templates": {
      "get": {
        "tags": ["Products"],
        "summary": "Gets tab responsive template lookups",
        "operationId": "Products_GetTabResponsiveTemplates",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Webcom.API.SetupSPA.Common.LookupVM"
              }
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/products/layout/responder/templates": {
      "get": {
        "tags": ["Products"],
        "summary": "Gets responder responsive template lookups",
        "operationId": "Products_GetResponderResponsiveTemplates",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Webcom.API.SetupSPA.Common.LookupVM"
              }
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/products/{productId}/layout/attributes": {
      "get": {
        "tags": ["Products"],
        "summary": "Returns all product attributes that can be added to configurator layout",
        "operationId": "Products_GetProductLayoutAttributes",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "Product id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Webcom.API.SetupSPA.Products.VM.ConfiguratorAttributeVM"
              }
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/products/{productId}/layout/configurator/attributes/{attributeIds}": {
      "get": {
        "tags": ["Products"],
        "summary": "Gets configurator attributes for product with provided id and standard attribute codes provided as csv string",
        "operationId": "Products_GetProductConfiguratorAttributes",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "Product id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "attributeIds",
            "in": "path",
            "description": "Attribute ids csv string",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Webcom.API.SetupSPA.Products.VM.ConfiguratorAttributeVM"
              }
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/products/{productId}/layout/responder/attributes/{attributeIds}": {
      "get": {
        "tags": ["Products"],
        "summary": "Gets responder attributes for product with provided id and standard attribute codes provided as csv string",
        "operationId": "Products_GetProductResponderAttributes",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "Product id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "attributeIds",
            "in": "path",
            "description": "Attribute ids csv string",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Webcom.API.SetupSPA.Products.VM.ResponderAttributeVM"
              }
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/products/{productId}/attributesForProduct": {
      "get": {
        "tags": ["Products"],
        "summary": "Retrieves list of attribute names for product",
        "operationId": "Products_GetProductAttributesLookup",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "Product attributes belongs to",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Webcom.API.SetupSPA.Common.LookupVM"
              }
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/products/productType": {
      "post": {
        "tags": ["Products"],
        "summary": "Saves Product type",
        "operationId": "Products_SaveProductType",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "productType",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Webcom.API.SetupSPA.Products.VM.ProductTypeLightVM"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "format": "int32", "type": "integer" }
          }
        }
      }
    },
    "/setup/api/v1/admin/products/Attributes/{productAttributeId}/configuration": {
      "post": {
        "tags": ["Products"],
        "summary": "Update attribute configuration",
        "operationId": "Products_UpdateAttributeConfiguration",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "productAttributeId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "attributeConfigControlId",
            "in": "body",
            "description": "",
            "required": true,
            "schema": { "format": "int32", "type": "integer" }
          }
        ],
        "responses": { "204": { "description": "No Content" } }
      }
    },
    "/setup/api/v1/admin/products/{productIds}/valueCodeAndDisplayValue": {
      "get": {
        "tags": ["Products"],
        "summary": "Checks if products have Value Code and Display Value",
        "operationId": "Products_CheckProductsValueCodeAndDisplayValue",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "productIds",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "name": "attributeName",
            "in": "query",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "string" } }
        }
      }
    },
    "/setup/api/v1/admin/products/containerTransferSettings/{containerId}": {
      "get": {
        "tags": ["Products"],
        "summary": "Gets Container transfer settings for data table",
        "operationId": "Products_GetContainerTransferSettings",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "containerId",
            "in": "path",
            "description": "Container id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.Common.Models.PagedDataVM[Webcom.API.SetupSPA.Products.VM.ContainerTransferSettingVM]"
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/products/attributes/{standardAttributeCode}/usesProducts": {
      "get": {
        "tags": ["Products"],
        "summary": "Checks if an attribute with the type of Container uses Products",
        "operationId": "Products_CheckIfContainerAttributeUsesProducts",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "standardAttributeCode",
            "in": "path",
            "description": "Standard attribute code",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "boolean" } }
        }
      }
    },
    "/setup/api/v1/admin/products/{productId}/containerAttributes": {
      "get": {
        "tags": ["Products"],
        "summary": "Gets filtered, paged and sorted attributes with total number of attributes\r\nthat can be pushed to container product attributes\r\nfor a given product Id",
        "operationId": "Products_GetProductAttributesForContainer",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "Product Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "csvExcludeAttributeIds",
            "in": "query",
            "description": "Comma separated attribute ids that are already selected for given product",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.Common.Models.PagedDataVM[Webcom.API.SetupSPA.Attributes.VM.AttributeRowVM]"
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/products/{productId}/containerTransferSettings/{containerId}": {
      "get": {
        "tags": ["Products"],
        "summary": "Gets container transfer settings for each given attribute id",
        "operationId": "Products_GetContainerTransferSettingsByAttributeIds",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "Product Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "containerId",
            "in": "path",
            "description": "Container id (product attribute id)",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "csvAttributeIds",
            "in": "query",
            "description": "Comma separated attribute ids",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Webcom.API.SetupSPA.Products.VM.ContainerTransferSettingVM"
              }
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/products/tab/{tabName}": {
      "post": {
        "tags": ["Products"],
        "summary": "Create new Tab",
        "operationId": "Products_Save",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "tabName",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.SetupSPA.Common.LookupVM"
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/products/{productId}/simpleRules": {
      "get": {
        "tags": ["Products"],
        "summary": "Gets paged, filtered and sorted Product Simple Rules for a given Product Id",
        "operationId": "Products_GetProductSimpleRules",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "Product id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.Common.Models.PagedDataVM[Webcom.API.SetupSPA.Products.VM.ProductSimpleRulesRowVM]"
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/products/{productId}/formulaRules": {
      "get": {
        "tags": ["Products"],
        "summary": "Gets paged, filtered and sorted Product Formula (Scripting) Rules for a given Product Id",
        "operationId": "Products_GetProductFormulaRules",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "Product id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.Common.Models.PagedDataVM[Webcom.API.SetupSPA.Products.VM.ProductFormulaRulesRowVM]"
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/products/{productId}/triggers": {
      "get": {
        "tags": ["Products"],
        "summary": "Gets paged, filtered and sorted Product Attribute Triggers for a given Product Id",
        "operationId": "Products_GetProductAttributeTriggers",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "Product id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.Common.Models.PagedDataVM[Webcom.API.SetupSPA.Products.VM.ProductAttributeTriggersRowVM]"
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/products/{productId}/Triggers/{attributeId}/{type}": {
      "delete": {
        "tags": ["Products"],
        "summary": "Removes Attribute trigger",
        "operationId": "Products_DeleteTriggerForAttribute",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "Owner of the attribute",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "attributeId",
            "in": "path",
            "description": "Attribute Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "type",
            "in": "path",
            "description": "Type of trigger",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.SetupSPA.Common.UpdateInfoVM"
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/products/{productId}/FormulaRules/{ruleId}": {
      "delete": {
        "tags": ["Products"],
        "summary": "Removes Formula Rule",
        "operationId": "Products_DeleteFormulaRule",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "Product id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "ruleId",
            "in": "path",
            "description": "Rule Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": { "204": { "description": "No Content" } }
      }
    },
    "/setup/api/v1/admin/products/{productId}/FormulaRulesRankings": {
      "get": {
        "tags": ["Products"],
        "summary": "Returns ranked Formula rules for product",
        "operationId": "Products_GetFormulaRulesRanking",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "Owner",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Webcom.API.SetupSPA.Common.RankingItemVM"
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Products"],
        "summary": "Updates Formula rules ranks for product",
        "operationId": "Products_UpdateFormulaRulesRanking",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "items",
            "in": "body",
            "description": "Records with updated rank",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Webcom.API.SetupSPA.Common.RankingItemVM"
              }
            }
          },
          {
            "name": "productId",
            "in": "path",
            "description": "Owner",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": { "204": { "description": "No Content" } }
      }
    },
    "/setup/api/v1/admin/products/rules/simple/{ruleId}": {
      "get": {
        "tags": ["Products"],
        "summary": "Gets simple rule with provided id",
        "operationId": "Products_GetSimpleRule",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "ruleId",
            "in": "path",
            "description": "Simple rule id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.SetupSPA.Products.VM.SimpleRuleVM"
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/products/rules/simple/attributeValues/{productId}": {
      "get": {
        "tags": ["Products"],
        "summary": "Get attribute values in lookup shape for conditions and dependance",
        "operationId": "Products_GetSimpleRuleAttributeValueLookups",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Webcom.API.SetupSPA.Attributes.VM.AttributeValueLookupVM"
              }
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/products/rules/simple": {
      "post": {
        "tags": ["Products"],
        "summary": "Saves a simple rule",
        "operationId": "Products_SaveSimpleRule",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "simpleRule",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Webcom.API.SetupSPA.Products.VM.SimpleRuleVM"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.SetupSPA.Common.UpdateInfoVM"
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/products/rules/simple/ruleTypes": {
      "get": {
        "tags": ["Products"],
        "summary": "Get rule types",
        "operationId": "Products_GetRuleTypes",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Webcom.API.SetupSPA.Common.LookupVM"
              }
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/products/{productId}/SimpleRulesRankings": {
      "get": {
        "tags": ["Products"],
        "summary": "Returns ranked Simple rules for product",
        "operationId": "Products_GetSimpleRulesRanking",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "Owner",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Webcom.API.SetupSPA.Common.RankingItemVM"
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Products"],
        "summary": "Updates Simple rules ranks for product",
        "operationId": "Products_UpdateSimpleRulesRanking",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "items",
            "in": "body",
            "description": "Records with updated rank",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Webcom.API.SetupSPA.Common.RankingItemVM"
              }
            }
          },
          {
            "name": "productId",
            "in": "path",
            "description": "Owner",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": { "204": { "description": "No Content" } }
      }
    },
    "/setup/api/v1/admin/products/{productId}/SimpleRules/{ruleId}": {
      "delete": {
        "tags": ["Products"],
        "summary": "Removes Simple Rule",
        "operationId": "Products_DeleteSimpleRule",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "ruleId",
            "in": "path",
            "description": "Rule Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": { "204": { "description": "No Content" } }
      }
    },
    "/setup/api/v1/admin/products/{productId}/Messages": {
      "get": {
        "tags": ["Products"],
        "summary": "Gets product messages",
        "operationId": "Products_GetProductMessages",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "Product id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.Common.Models.PagedDataVM[Webcom.API.SetupSPA.Products.VM.ProductMessagesRowVM]"
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/products/Messages/{id}": {
      "delete": {
        "tags": ["Products"],
        "summary": "Deletes Product Message by Id",
        "operationId": "Products_DeleteProductMessage",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": { "204": { "description": "No Content" } }
      }
    },
    "/setup/api/v1/admin/products/{productId}/scripts": {
      "get": {
        "tags": ["Products"],
        "summary": "Gets paged and filtered scripts for product",
        "operationId": "Products_GetProductScripts",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.Common.Models.PagedDataVM[Webcom.API.SetupSPA.Products.VM.ProductScriptRowVM]"
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/products/{productId}/MessagesRankings": {
      "get": {
        "tags": ["Products"],
        "operationId": "Products_GetMessagesRanking",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "Owner",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Webcom.API.SetupSPA.Common.RankingItemVM"
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Products"],
        "summary": "Updates Messages ranks for product",
        "operationId": "Products_UpdateMessagesRanking",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "items",
            "in": "body",
            "description": "Records with updated rank",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Webcom.API.SetupSPA.Common.RankingItemVM"
              }
            }
          },
          {
            "name": "productId",
            "in": "path",
            "description": "Owner",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": { "204": { "description": "No Content" } }
      }
    },
    "/setup/api/v1/admin/products/SystemId": {
      "get": {
        "tags": ["Products"],
        "summary": "Gets system id",
        "operationId": "Products_GetSystemId",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "string" } }
        }
      }
    },
    "/setup/api/v1/admin/products/ProductType/SystemId": {
      "get": {
        "tags": ["Products"],
        "summary": "Gets system id for product type",
        "operationId": "Products_GetSystemIdForProductType",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "string" } }
        }
      }
    },
    "/api/v1/admin/files/ProductTemplates": {
      "get": {
        "tags": ["ProductTemplates"],
        "operationId": "ProductTemplates_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "type": "array", "items": { "type": "string" } }
          }
        }
      },
      "put": {
        "tags": ["ProductTemplates"],
        "summary": "Updates files",
        "operationId": "ProductTemplates_Put",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      },
      "post": {
        "tags": ["ProductTemplates"],
        "summary": "Creates new files",
        "operationId": "ProductTemplates_Post",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/api/v1/admin/files/ProductTemplates/{id}": {
      "get": {
        "tags": ["ProductTemplates"],
        "summary": "Gets specified file",
        "operationId": "ProductTemplates_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "File name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      },
      "put": {
        "tags": ["ProductTemplates"],
        "summary": "Updates specified file",
        "operationId": "ProductTemplates_Put",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Name of the file to update",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      },
      "delete": {
        "tags": ["ProductTemplates"],
        "summary": "Deletes specified file",
        "operationId": "ProductTemplates_Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "File name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/setup/api/v1/admin/files/ProductTemplates": {
      "get": {
        "tags": ["ProductTemplates"],
        "operationId": "ProductTemplates_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "type": "array", "items": { "type": "string" } }
          }
        }
      },
      "put": {
        "tags": ["ProductTemplates"],
        "summary": "Updates files",
        "operationId": "ProductTemplates_Put",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      },
      "post": {
        "tags": ["ProductTemplates"],
        "summary": "Creates new files",
        "operationId": "ProductTemplates_Post",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/setup/api/v1/admin/files/ProductTemplates/{id}": {
      "get": {
        "tags": ["ProductTemplates"],
        "summary": "Gets specified file",
        "operationId": "ProductTemplates_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "File name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      },
      "put": {
        "tags": ["ProductTemplates"],
        "summary": "Updates specified file",
        "operationId": "ProductTemplates_Put",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Name of the file to update",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      },
      "delete": {
        "tags": ["ProductTemplates"],
        "summary": "Deletes specified file",
        "operationId": "ProductTemplates_Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "File name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/api/v1/admin/ProxyUser/GetInitData": {
      "get": {
        "tags": ["ProxyUser"],
        "operationId": "ProxyUser_GetInitData",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.Admin.ProxyUser.ProxyUserResponse"
            }
          }
        }
      }
    },
    "/api/v1/admin/ProxyUser/GetUsersForTenant": {
      "post": {
        "tags": ["ProxyUser"],
        "operationId": "ProxyUser_GetUsersForTenant",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "domainName",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Webcom.API.Admin.ProxyUser.VM.UserVM"
              }
            }
          }
        }
      }
    },
    "/api/v1/admin/ProxyUser/LoginAsProxyUser": {
      "post": {
        "tags": ["ProxyUser"],
        "operationId": "ProxyUser_LoginAsProxyUser",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "domainName",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "string" } }
        }
      }
    },
    "/api/v1/admin/ProxyUser/GetFileResponseMessage": {
      "get": {
        "tags": ["ProxyUser"],
        "summary": "Gets the file response message.",
        "operationId": "ProxyUser_GetFileResponseMessage",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "fileName",
            "in": "query",
            "description": "Name of the file.",
            "required": true,
            "type": "string"
          },
          {
            "name": "content._buffer",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "content._origin",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._position",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._length",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._capacity",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._expandable",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content._writable",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content._exposable",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content._isOpen",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content.__identity",
            "in": "query",
            "required": false,
            "type": "object"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/api/v1/Quote/Get": {
      "get": {
        "tags": ["Quote"],
        "summary": "Gets data for the active revision of a quote given by quote number or quote ID",
        "operationId": "Quote_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "quoteNumber",
            "in": "query",
            "description": "Quote composite number",
            "required": false,
            "type": "string"
          },
          {
            "name": "quoteId",
            "in": "query",
            "description": "Quote ID",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "includeTables",
            "in": "query",
            "description": "Indicates whether quote tables should be included in response. True by default.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "includeCustomers",
            "in": "query",
            "description": "Indicates whether customers should be included in response. True by default.",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/api/v1/admin/files/QuoteActionImage": {
      "get": {
        "tags": ["QuoteActionImage"],
        "operationId": "QuoteActionImage_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "type": "array", "items": { "type": "string" } }
          }
        }
      },
      "put": {
        "tags": ["QuoteActionImage"],
        "summary": "Updates files",
        "operationId": "QuoteActionImage_Put",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      },
      "post": {
        "tags": ["QuoteActionImage"],
        "summary": "Creates new files",
        "operationId": "QuoteActionImage_Post",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/api/v1/admin/files/QuoteActionImage/{id}": {
      "get": {
        "tags": ["QuoteActionImage"],
        "summary": "Gets specified file",
        "operationId": "QuoteActionImage_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "File name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      },
      "put": {
        "tags": ["QuoteActionImage"],
        "summary": "Updates specified file",
        "operationId": "QuoteActionImage_Put",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Name of the file to update",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      },
      "delete": {
        "tags": ["QuoteActionImage"],
        "summary": "Deletes specified file",
        "operationId": "QuoteActionImage_Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "File name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/setup/api/v1/admin/files/QuoteActionImage": {
      "get": {
        "tags": ["QuoteActionImage"],
        "operationId": "QuoteActionImage_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "type": "array", "items": { "type": "string" } }
          }
        }
      },
      "put": {
        "tags": ["QuoteActionImage"],
        "summary": "Updates files",
        "operationId": "QuoteActionImage_Put",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      },
      "post": {
        "tags": ["QuoteActionImage"],
        "summary": "Creates new files",
        "operationId": "QuoteActionImage_Post",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/setup/api/v1/admin/files/QuoteActionImage/{id}": {
      "get": {
        "tags": ["QuoteActionImage"],
        "summary": "Gets specified file",
        "operationId": "QuoteActionImage_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "File name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      },
      "put": {
        "tags": ["QuoteActionImage"],
        "summary": "Updates specified file",
        "operationId": "QuoteActionImage_Put",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Name of the file to update",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      },
      "delete": {
        "tags": ["QuoteActionImage"],
        "summary": "Deletes specified file",
        "operationId": "QuoteActionImage_Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "File name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/setup/api/v1/admin/quoteFields": {
      "get": {
        "tags": ["QuoteField"],
        "summary": "Gets list of quote fields with base info",
        "operationId": "QuoteField_GetQuoteFields",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Webcom.API.SetupSPA.QuoteFields.VM.QuoteFieldLightVM"
              }
            }
          }
        }
      },
      "post": {
        "tags": ["QuoteField"],
        "summary": "Saves provided quote fields",
        "operationId": "QuoteField_SaveQuoteFields",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "quoteFields",
            "in": "body",
            "description": "Quote fields",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Webcom.API.SetupSPA.QuoteFields.VM.QuoteFieldVM"
              }
            }
          }
        ],
        "responses": { "204": { "description": "No Content" } }
      }
    },
    "/setup/api/v1/admin/quoteFields/{fieldId}": {
      "get": {
        "tags": ["QuoteField"],
        "summary": "Gets full info for quote field with provided id",
        "operationId": "QuoteField_GetQuoteField",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "fieldId",
            "in": "path",
            "description": "Quote field id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.SetupSPA.QuoteFields.VM.QuoteFieldVM"
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/quoteFields/{fieldId}/availableCalculations": {
      "get": {
        "tags": ["QuoteField"],
        "summary": "Gets available calculations for quote field with provided id",
        "operationId": "QuoteField_GetAvailableCalculations",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "fieldId",
            "in": "path",
            "description": "Quote field id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Webcom.API.SetupSPA.QuoteFields.VM.QuoteFieldCalculationVM"
              }
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/quoteFields/addUpdateItemCalculations": {
      "get": {
        "tags": ["QuoteField"],
        "summary": "Gets available calculations for add/update item event",
        "operationId": "QuoteField_GetAvailableAddUpdateItemCalculations",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Webcom.API.SetupSPA.QuoteFields.VM.QuoteFieldCalculationVM"
              }
            }
          }
        }
      },
      "post": {
        "tags": ["QuoteField"],
        "summary": "Saves calculations that will be executed on add/update item event",
        "operationId": "QuoteField_SaveSelectedAddUpdateItemCalculations",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "calculations",
            "in": "body",
            "description": "Quote calculations",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Webcom.Configurator.Core.QuoteV2.QuoteFields.QuoteFieldCalculation"
              }
            }
          }
        ],
        "responses": { "204": { "description": "No Content" } }
      }
    },
    "/setup/api/v1/admin/quoteFields/addUpdateItemCalculations/selected": {
      "get": {
        "tags": ["QuoteField"],
        "summary": "Gets selected calculations for add/update item event",
        "operationId": "QuoteField_GetSelectedAddUpdateItemCalculations",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Webcom.API.SetupSPA.QuoteFields.VM.QuoteFieldCalculationVM"
              }
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/quoteFields/calculations/scripts/{calculationScriptId}/history": {
      "get": {
        "tags": ["QuoteField"],
        "summary": "Gets calculation script history",
        "operationId": "QuoteField_GetCalculationScriptHistory",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "calculationScriptId",
            "in": "path",
            "description": "Calculation script id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.Common.Models.PagedDataVM[Webcom.API.SetupSPA.QuoteFields.VM.QuoteFieldCalculationScriptHistoryRecordVM]"
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/quoteFields/calculations/scripts/{calculationScriptId}/history/compare": {
      "get": {
        "tags": ["QuoteField"],
        "summary": "Gets calculation script history records details for comparing script versions",
        "operationId": "QuoteField_GetCalculationScriptRecordsDetailsCompare",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "calculationScriptId",
            "in": "path",
            "description": "Calculation script id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "originalRecordId",
            "in": "query",
            "description": "Original script history record id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "compareRecordId",
            "in": "query",
            "description": "Compare script history record id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Webcom.API.SetupSPA.QuoteFields.VM.QuoteFieldCalculationScriptHistoryRecordVM"
              }
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/quoteFields/calculations/scripts/{calculationScriptId}/history/{calculationScriptRecordId}": {
      "get": {
        "tags": ["QuoteField"],
        "summary": "Gets calculation script history record details",
        "operationId": "QuoteField_GetCalculationScriptHistroyRecordDetails",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "calculationScriptId",
            "in": "path",
            "description": "Calculation script id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "calculationScriptRecordId",
            "in": "path",
            "description": "Calculation script history record id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.SetupSPA.QuoteFields.VM.QuoteFieldCalculationScriptHistoryRecordVM"
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/quoteFields/customField": {
      "post": {
        "tags": ["QuoteField"],
        "summary": "Saves provided custom field",
        "operationId": "QuoteField_SaveCustomField",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "customField",
            "in": "body",
            "description": "Custom field",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Webcom.API.SetupSPA.QuoteFields.VM.CustomFieldVM"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "format": "int32", "type": "integer" }
          }
        }
      }
    },
    "/setup/api/v1/admin/quoteFields/customField/{customFieldId}": {
      "get": {
        "tags": ["QuoteField"],
        "summary": "Gets quote fields with base info for custom field with provided id",
        "operationId": "QuoteField_GetCustomFieldQuoteFields",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "customFieldId",
            "in": "path",
            "description": "Custom field id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Webcom.API.SetupSPA.QuoteFields.VM.QuoteFieldLightVM"
              }
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/quoteFields/{fieldId}/permissions/{isViewByStatus}": {
      "get": {
        "tags": ["QuoteField"],
        "summary": "Gets visibility and editing permissions (by status or permission group) for field with provided id",
        "operationId": "QuoteField_GetQuoteFieldPermissions",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "fieldId",
            "in": "path",
            "description": "Quote field id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "isViewByStatus",
            "in": "path",
            "description": "Are editing permissions viewed by status or permission group",
            "required": true,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.SetupSPA.QuoteFields.VM.QuoteFieldPermissionVM"
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/quoteFields/visibilityPermissions": {
      "get": {
        "tags": ["QuoteField"],
        "summary": "Gets quote fields with visibility permissions (field id and list of permissions)",
        "operationId": "QuoteField_GetQuoteFieldsWithVisibilityPermissions",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Webcom.API.SetupSPA.QuoteFields.VM.QuoteFieldVM"
              }
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/quoteFields/editingPermissions": {
      "get": {
        "tags": ["QuoteField"],
        "summary": "Gets quote field with editing permissions (field id and list of permissions)",
        "operationId": "QuoteField_GetQuoteFieldsWithEditingPermissions",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Webcom.API.SetupSPA.QuoteFields.VM.QuoteFieldVM"
              }
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/quoteFields/calculation/{calculationId}": {
      "get": {
        "tags": ["QuoteField"],
        "summary": "Gets quote field calculation",
        "operationId": "QuoteField_GetQuoteFieldCalculation",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "calculationId",
            "in": "path",
            "description": "Quote field calculation id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.SetupSPA.QuoteFields.VM.QuoteFieldCalculationVM"
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/quoteFields/calculation": {
      "post": {
        "tags": ["QuoteField"],
        "summary": "Saves quote field calculation",
        "operationId": "QuoteField_SaveQuoteFieldCalculation",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "calculation",
            "in": "body",
            "description": "Quote field calculation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Webcom.API.SetupSPA.QuoteFields.VM.QuoteFieldCalculationVM"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "format": "int32", "type": "integer" }
          }
        }
      }
    },
    "/setup/api/v1/admin/quoteFields/calculations/distribution": {
      "get": {
        "tags": ["QuoteField"],
        "summary": "Gets distribution calculations",
        "operationId": "QuoteField_GetDistributionCalculations",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.Common.Models.PagedDataVM[Webcom.API.SetupSPA.QuoteFields.VM.DistributionCalculationTableRowVM]"
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/quoteFields/calculations/{calculationId}/distribution/{name}": {
      "delete": {
        "tags": ["QuoteField"],
        "summary": "Deletes distribution calculation if it's not used",
        "operationId": "QuoteField_DeleteDistributionCalculation",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "calculationId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of calculation",
            "required": true,
            "type": "string"
          }
        ],
        "responses": { "204": { "description": "No Content" } }
      }
    },
    "/setup/api/v1/admin/quoteFields/calculation/{calculationId}/{isActive}": {
      "post": {
        "tags": ["QuoteField"],
        "summary": "Saves quote field calculation active state",
        "operationId": "QuoteField_SaveQuoteFieldCalculationActiveState",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "calculationId",
            "in": "path",
            "description": "Quote field calculation id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "isActive",
            "in": "path",
            "description": "Is active state",
            "required": true,
            "type": "boolean"
          }
        ],
        "responses": { "204": { "description": "No Content" } }
      }
    },
    "/setup/api/v1/admin/quoteFields/calculation/sectioncalculation": {
      "get": {
        "tags": ["QuoteField"],
        "summary": "Gets sections total custom calculation",
        "operationId": "QuoteField_GetSectionsTotalCustomCalculation",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.SetupSPA.QuoteFields.VM.QuoteFieldCalculationVM"
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/quoteFields/aggregateType": {
      "get": {
        "tags": ["QuoteField"],
        "operationId": "QuoteField_GetAggregateTypes",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Webcom.API.SetupSPA.Common.LookupVM[System.Int32]"
              }
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/quoteFields/totalCalculationType": {
      "get": {
        "tags": ["QuoteField"],
        "operationId": "QuoteField_GetTotalCalculationTypes",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Webcom.API.SetupSPA.Common.LookupVM[System.Int32]"
              }
            }
          }
        }
      }
    },
    "/api/rd/v1/QuoteLanding/GuestView": {
      "get": {
        "tags": ["QuoteLanding"],
        "operationId": "QuoteLanding_GuestView",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "quoteNumber",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Landing.QuoteRedirectResponse"
            }
          }
        }
      }
    },
    "/api/rd/v1/QuoteLanding/GetFileResponseMessage": {
      "get": {
        "tags": ["QuoteLanding"],
        "summary": "Gets the file response message.",
        "operationId": "QuoteLanding_GetFileResponseMessage",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "fileName",
            "in": "query",
            "description": "Name of the file.",
            "required": true,
            "type": "string"
          },
          {
            "name": "content._buffer",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "content._origin",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._position",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._length",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._capacity",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._expandable",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content._writable",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content._exposable",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content._isOpen",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content.__identity",
            "in": "query",
            "required": false,
            "type": "object"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/api/rd/v1/QuoteList/GetInitData": {
      "get": {
        "tags": ["QuoteList"],
        "summary": "Gets the metadata for the quote list.",
        "operationId": "QuoteList_GetInitData",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "tabId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/api/rd/v1/QuoteList/GetFilterSuggestions": {
      "get": {
        "tags": ["QuoteList"],
        "summary": "Gets the filter suggestions.",
        "operationId": "QuoteList_GetFilterSuggestions",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request.searchString",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "request.columns",
            "in": "query",
            "required": false,
            "type": "array",
            "items": { "type": "string" },
            "collectionFormat": "multi"
          },
          {
            "name": "request.criteria",
            "in": "query",
            "required": false,
            "type": "array",
            "items": { "type": "array", "items": { "type": "string" } },
            "collectionFormat": "multi"
          },
          {
            "name": "request.skip",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "request.take",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "request.orderBy",
            "in": "query",
            "required": false,
            "type": "array",
            "items": { "type": "string" },
            "collectionFormat": "multi"
          },
          {
            "name": "request.usePaging",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "request.tabId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "request.loadDelegatedApproversQuotes",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/api/rd/v1/QuoteList/GetData": {
      "get": {
        "tags": ["QuoteList"],
        "summary": "Gets the data.",
        "operationId": "QuoteList_GetData",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request.searchString",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "request.columns",
            "in": "query",
            "required": false,
            "type": "array",
            "items": { "type": "string" },
            "collectionFormat": "multi"
          },
          {
            "name": "request.criteria",
            "in": "query",
            "required": false,
            "type": "array",
            "items": { "type": "array", "items": { "type": "string" } },
            "collectionFormat": "multi"
          },
          {
            "name": "request.skip",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "request.take",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "request.orderBy",
            "in": "query",
            "required": false,
            "type": "array",
            "items": { "type": "string" },
            "collectionFormat": "multi"
          },
          {
            "name": "request.usePaging",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "request.tabId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "request.loadDelegatedApproversQuotes",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/api/rd/v1/QuoteList/ChangeStatus": {
      "post": {
        "tags": ["QuoteList"],
        "summary": "Changes the status.",
        "operationId": "QuoteList_ChangeStatus",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.QuoteList.ChangeStatusRequest"
            }
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/api/rd/v1/QuoteList/ExecuteAction": {
      "post": {
        "tags": ["QuoteList"],
        "summary": "Executes the action.",
        "operationId": "QuoteList_ExecuteAction",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.QuoteList.ExecuteActionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Quote.Common.Workflow.ActionExecutionArguments"
            }
          }
        }
      }
    },
    "/api/rd/v1/QuoteList/LoadQuoteListFilters": {
      "get": {
        "tags": ["QuoteList"],
        "summary": "Gets the filter list object as serialized string.",
        "operationId": "QuoteList_LoadQuoteListFilters",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/api/rd/v1/QuoteList/SaveQuoteListFilters": {
      "post": {
        "tags": ["QuoteList"],
        "summary": "Saves the filter list object as serialized string.",
        "operationId": "QuoteList_SaveQuoteListFilters",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "filters",
            "in": "body",
            "description": "Serialized filters.",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/api/rd/v1/QuoteList/GetMinAndMaxForColumn": {
      "get": {
        "tags": ["QuoteList"],
        "summary": "Returns min and max value for given column and tab.",
        "operationId": "QuoteList_GetMinAndMaxForColumn",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "column",
            "in": "query",
            "description": "Column name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "tabId",
            "in": "query",
            "description": "Id of tab.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/api/rd/v1/QuoteList/GetUserTypesForReassign": {
      "post": {
        "tags": ["QuoteList"],
        "summary": "Gets the user types for reassign.",
        "operationId": "QuoteList_GetUserTypesForReassign",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Webcom.API.IdNamePair" }
            }
          }
        }
      }
    },
    "/api/rd/v1/QuoteList/GetUsersForReassign": {
      "post": {
        "tags": ["QuoteList"],
        "summary": "Gets the users for reassign.",
        "operationId": "QuoteList_GetUsersForReassign",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "userTypeId",
            "in": "query",
            "description": "The user type identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Webcom.API.IdNamePair" }
            }
          }
        }
      }
    },
    "/api/rd/v1/QuoteList/Reassign": {
      "post": {
        "tags": ["QuoteList"],
        "summary": "Reassigns the specified new user identifier.",
        "operationId": "QuoteList_Reassign",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "newUserId",
            "in": "query",
            "description": "The new user identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "cryptedOwnerId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "cryptedCartId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "selectedTab",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Webcom.API.StatusVm" }
          }
        }
      }
    },
    "/api/rd/v1/QuoteList/GetFileResponseMessage": {
      "get": {
        "tags": ["QuoteList"],
        "summary": "Gets the file response message.",
        "operationId": "QuoteList_GetFileResponseMessage",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "fileName",
            "in": "query",
            "description": "Name of the file.",
            "required": true,
            "type": "string"
          },
          {
            "name": "content._buffer",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "content._origin",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._position",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._length",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._capacity",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._expandable",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content._writable",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content._exposable",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content._isOpen",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content.__identity",
            "in": "query",
            "required": false,
            "type": "object"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/api/v1/quotes/{quoteId}/revisions": {
      "get": {
        "tags": ["Quotes"],
        "summary": "Gets Quote's revisions",
        "operationId": "Quotes_GetQuoteRevisions",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "quoteId",
            "in": "path",
            "description": "Quote ID",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "List of quote's revisions",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Webcom.API.Public.Quote.VM.QuoteRevisionVM"
              }
            }
          }
        }
      }
    },
    "/api/v1/quotes/{quoteId}/documents": {
      "get": {
        "tags": ["Quotes"],
        "summary": "Gets Quote's generated documents",
        "operationId": "Quotes_GetGeneratedDocuments",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "quoteId",
            "in": "path",
            "description": "Quote ID",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "List of generated documents",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Webcom.API.Public.Quote.VM.GeneratedDocumentInfoVM"
              }
            }
          }
        }
      }
    },
    "/api/v1/quotes/{quoteId}/documents/{documentId}/file": {
      "get": {
        "tags": ["Quotes"],
        "summary": "Gets prepared document for download",
        "operationId": "Quotes_DownloadFile",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "quoteId",
            "in": "path",
            "description": "Quote ID",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "documentId",
            "in": "path",
            "description": "Document ID",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": { "200": { "description": "Download a generated file" } }
      }
    },
    "/api/v1/quotes/{quoteId}/actions/{actionId}/invoke": {
      "post": {
        "tags": ["Quotes"],
        "summary": "Executes the action.",
        "operationId": "Quotes_ExecuteAction",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "quoteId",
            "in": "path",
            "description": "The quote identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "actionId",
            "in": "path",
            "description": "The action identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": { "type": "object" }
          }
        ],
        "responses": {
          "200": {
            "description": "Actions (New revision action and New active revision action) returns New Quote Id other return empty response",
            "schema": {
              "$ref": "#/definitions/Webcom.API.Public.Quote.VM.NewQuoteVMResponse"
            }
          }
        }
      }
    },
    "/api/v1/quotes/{quoteId}/actions": {
      "get": {
        "tags": ["Quotes"],
        "summary": "Get available actions for the quote.",
        "operationId": "Quotes_GetAvailableActions",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "quoteId",
            "in": "path",
            "description": "The quote identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "List of available actions",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Webcom.API.Public.Quote.VM.WorkflowActionVM"
              }
            }
          }
        }
      }
    },
    "/api/v1/quotes/{quoteId}/customFields": {
      "patch": {
        "tags": ["Quotes"],
        "summary": "Updates quote custom field",
        "operationId": "Quotes_UpdateCustomField",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "quoteId",
            "in": "path",
            "description": "The quote ID.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "customFields",
            "in": "body",
            "description": "List of custom fields.",
            "required": true,
            "schema": { "type": "array", "items": { "type": "object" } }
          }
        ],
        "responses": { "200": { "description": "Update custom field" } }
      }
    },
    "/api/v1/quotes": {
      "post": {
        "tags": ["Quotes"],
        "summary": "Creates new quote.",
        "operationId": "Quotes_CreateNewQuote",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "quoteVMRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Webcom.API.Public.Quote.VM.QuoteVMRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Id of created quote",
            "schema": {
              "$ref": "#/definitions/Webcom.API.Public.Quote.VM.QuoteVMResponse"
            }
          }
        }
      }
    },
    "/api/v1/quotes/{quoteId}/comments": {
      "get": {
        "tags": ["Quotes"],
        "summary": "Get collaboration comments for the quote.",
        "operationId": "Quotes_GetQuoteCollaborationComments",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "quoteId",
            "in": "path",
            "description": "The quote identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "List of quote's comments",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Webcom.API.Public.Quote.VM.QuoteCommentVM"
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Quotes"],
        "summary": "Post collaboration comments for the quote.",
        "operationId": "Quotes_PostQuoteCollaborationComments",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "quoteId",
            "in": "path",
            "description": "The quote identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "comments",
            "in": "body",
            "description": "List of quote comment objects",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Webcom.API.Public.Quote.VM.QuoteCommentVM"
              }
            }
          }
        ],
        "responses": {
          "200": { "description": "Save quote's collaboration comments" }
        }
      }
    },
    "/api/v1/quotes/{quoteId}/items/{itemId}/comments": {
      "get": {
        "tags": ["Quotes"],
        "summary": "Gets the quote item comments.",
        "operationId": "Quotes_GetQuoteItemComments",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "quoteId",
            "in": "path",
            "description": "The quote identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "itemId",
            "in": "path",
            "description": "The item identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "List of quote's item comments",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Webcom.API.Public.Quote.VM.QuoteCommentVM"
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Quotes"],
        "summary": "Posts quote item comments.",
        "operationId": "Quotes_PostQuoteItemComments",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "quoteId",
            "in": "path",
            "description": "The quote identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "itemId",
            "in": "path",
            "description": "The item identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "comments",
            "in": "body",
            "description": "The list of comments.",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Webcom.API.Public.Quote.VM.QuoteCommentVM"
              }
            }
          }
        ],
        "responses": { "200": { "description": "Save quote's item comments" } }
      }
    },
    "/api/v1/quotes/{quoteId}": {
      "patch": {
        "tags": ["Quotes"],
        "summary": "Patch Quote",
        "operationId": "Quotes_UpdateQuote",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "quoteId",
            "in": "path",
            "description": "The quote identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "quoteFields",
            "in": "body",
            "description": "Quote fields to patch",
            "required": true,
            "schema": {
              "type": "object",
              "additionalProperties": { "type": "object" }
            }
          }
        ],
        "responses": { "200": { "description": "Update quote" } }
      }
    },
    "/api/v1/quotes/{quoteId}/items": {
      "post": {
        "tags": ["Quotes"],
        "summary": "Add items to quote",
        "operationId": "Quotes_AddItemsToQuote",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "quoteId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "items",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Webcom.API.Public.Quote.VM.QuoteItemRequestVM"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of created quote's items",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Webcom.Quote.Common.DTO.RFQ.QuoteItemResponse"
              }
            }
          }
        }
      }
    },
    "/api/v1/quotes/{quoteId}/items/{itemId}": {
      "delete": {
        "tags": ["Quotes"],
        "summary": "Delete Quote Item",
        "operationId": "Quotes_DeleteItem",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "quoteId",
            "in": "path",
            "description": "The quote identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "itemId",
            "in": "path",
            "description": "The item identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": { "200": { "description": "Delete quote's item" } }
      },
      "patch": {
        "tags": ["Quotes"],
        "summary": "Update quote Item",
        "operationId": "Quotes_UpdateItem",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "quoteId",
            "in": "path",
            "description": "The quote identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "itemId",
            "in": "path",
            "description": "The item identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "itemFields",
            "in": "body",
            "description": "Item fields",
            "required": true,
            "schema": {
              "type": "object",
              "additionalProperties": { "type": "string" }
            }
          }
        ],
        "responses": { "200": { "description": "Update quote's item" } }
      }
    },
    "/api/v1/admin/QuoteTabPermissions/GetListInitData": {
      "get": {
        "tags": ["QuoteTabPermissions"],
        "summary": "Gets the initialize data.",
        "operationId": "QuoteTabPermissions_GetListInitData",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.Admin.QuoteTabPermissions.QuoteTabPermissionsResponse"
            }
          }
        }
      }
    },
    "/api/v1/admin/QuoteTabPermissions/DeletePermission": {
      "post": {
        "tags": ["QuoteTabPermissions"],
        "summary": "Deletes the quote tab permission with specified identifier.",
        "operationId": "QuoteTabPermissions_DeletePermission",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "permissionId",
            "in": "query",
            "description": "The permission id.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": { "204": { "description": "No Content" } }
      }
    },
    "/api/v1/admin/QuoteTabPermissions/GetPermission": {
      "get": {
        "tags": ["QuoteTabPermissions"],
        "summary": "Gets the quote tab permission with specified id.",
        "operationId": "QuoteTabPermissions_GetPermission",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "permissionId",
            "in": "query",
            "description": "The permission id.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.Admin.QuoteTabPermissions.QuoteTabPermissionResponse"
            }
          }
        }
      }
    },
    "/api/v1/admin/QuoteTabPermissions/SavePermission": {
      "post": {
        "tags": ["QuoteTabPermissions"],
        "summary": "Saves the quote tab permission.",
        "operationId": "QuoteTabPermissions_SavePermission",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "permission",
            "in": "body",
            "description": "The permission request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Webcom.API.Admin.QuoteTabPermissions.QuoteTabPermissionVm"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Webcom.API.StatusVm" }
          }
        }
      }
    },
    "/api/v1/admin/QuoteTabPermissions/GenerateSecretKey": {
      "get": {
        "tags": ["QuoteTabPermissions"],
        "summary": "Generates the secret key suitable for SHA-256.",
        "operationId": "QuoteTabPermissions_GenerateSecretKey",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "string" } }
        }
      }
    },
    "/api/v1/admin/QuoteTabPermissions/GetFileResponseMessage": {
      "get": {
        "tags": ["QuoteTabPermissions"],
        "summary": "Gets the file response message.",
        "operationId": "QuoteTabPermissions_GetFileResponseMessage",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "fileName",
            "in": "query",
            "description": "Name of the file.",
            "required": true,
            "type": "string"
          },
          {
            "name": "content._buffer",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "content._origin",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._position",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._length",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._capacity",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._expandable",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content._writable",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content._exposable",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content._isOpen",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content.__identity",
            "in": "query",
            "required": false,
            "type": "object"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/api/rd/v1/RecentlyVisitedObjects/Get": {
      "get": {
        "tags": ["RecentlyVisitedObjects"],
        "summary": "Gets the recently visited objects.",
        "operationId": "RecentlyVisitedObjects_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Webcom.API.RD.RecentlyVisitedObjects.VM.RecentlyVisitedObjectVM"
              }
            }
          }
        }
      }
    },
    "/api/rd/v1/RecentlyVisitedObjects/ExecuteAction": {
      "post": {
        "tags": ["RecentlyVisitedObjects"],
        "summary": "Executes the action.",
        "operationId": "RecentlyVisitedObjects_ExecuteAction",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "The identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "string" } }
        }
      }
    },
    "/api/rd/v1/RecentlyVisitedObjects/GetFileResponseMessage": {
      "get": {
        "tags": ["RecentlyVisitedObjects"],
        "summary": "Gets the file response message.",
        "operationId": "RecentlyVisitedObjects_GetFileResponseMessage",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "fileName",
            "in": "query",
            "description": "Name of the file.",
            "required": true,
            "type": "string"
          },
          {
            "name": "content._buffer",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "content._origin",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._position",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._length",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._capacity",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._expandable",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content._writable",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content._exposable",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content._isOpen",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content.__identity",
            "in": "query",
            "required": false,
            "type": "object"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/api/rd/v1/Recommendations/GetData": {
      "get": {
        "tags": ["Recommendations"],
        "operationId": "Recommendations_GetData",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "isInDisplayMode",
            "in": "query",
            "required": true,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Cart.RecommendationsResponse"
            }
          }
        }
      }
    },
    "/api/rd/v1/Recommendations/Decline": {
      "post": {
        "tags": ["Recommendations"],
        "operationId": "Recommendations_Decline",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "item",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Webcom.Configurator.Predictive.DeclineRecommendationItem"
            }
          }
        ],
        "responses": { "204": { "description": "No Content" } }
      }
    },
    "/api/rd/v1/Recommendations/ChangeDiscount": {
      "post": {
        "tags": ["Recommendations"],
        "operationId": "Recommendations_ChangeDiscount",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "changeDiscountRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Cart.ChangeDiscountRequestVM"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Cart.ChangeDiscountResponseVM"
            }
          }
        }
      }
    },
    "/api/rd/v1/Recommendations/AddProduct": {
      "post": {
        "tags": ["Recommendations"],
        "operationId": "Recommendations_AddProduct",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "addProductRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Cart.AddProductRequestVM"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Cart.AddProductResponseVM"
            }
          }
        }
      }
    },
    "/api/rd/v1/Recommendations/GetFileResponseMessage": {
      "get": {
        "tags": ["Recommendations"],
        "summary": "Gets the file response message.",
        "operationId": "Recommendations_GetFileResponseMessage",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "fileName",
            "in": "query",
            "description": "Name of the file.",
            "required": true,
            "type": "string"
          },
          {
            "name": "content._buffer",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "content._origin",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._position",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._length",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._capacity",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._expandable",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content._writable",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content._exposable",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content._isOpen",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content.__identity",
            "in": "query",
            "required": false,
            "type": "object"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/api/rd/v1/Revisions/GetInitData": {
      "get": {
        "tags": ["Revisions"],
        "summary": "Gets the revisions init data.",
        "operationId": "Revisions_GetInitData",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "cryptedOwnerId",
            "in": "query",
            "description": "Encrypted owner id.",
            "required": true,
            "type": "string"
          },
          {
            "name": "cryptedQuoteId",
            "in": "query",
            "description": "Encrypted quote id.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/api/rd/v1/Revisions/GetRevisions": {
      "get": {
        "tags": ["Revisions"],
        "summary": "Gets the revisions list.",
        "operationId": "Revisions_GetRevisions",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "cryptedOwnerId",
            "in": "query",
            "description": "Encrypted owner id.",
            "required": true,
            "type": "string"
          },
          {
            "name": "cryptedQuoteId",
            "in": "query",
            "description": "Encrypted quote id.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/api/rd/v1/Revisions/ExecuteAction": {
      "post": {
        "tags": ["Revisions"],
        "summary": "Executes the action.",
        "operationId": "Revisions_ExecuteAction",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Revisions.ExecuteActionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Quote.Common.Workflow.ActionExecutionArguments"
            }
          }
        }
      }
    },
    "/api/rd/v1/Revisions/UpdateRevisions": {
      "post": {
        "tags": ["Revisions"],
        "summary": "Updates list of revisions in database.",
        "operationId": "Revisions_UpdateRevisions",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "revisions",
            "in": "body",
            "description": "List of revisions to be updated.",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Webcom.Configurator.Core.QuoteV2.Revisions.QuoteRevision"
              }
            }
          },
          {
            "name": "cryptedOwnerId",
            "in": "query",
            "description": "Encrypted owner id.",
            "required": true,
            "type": "string"
          },
          {
            "name": "cryptedQuoteId",
            "in": "query",
            "description": "Encrypted quote id.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/api/rd/v1/Revisions/GetCurrentRevision": {
      "get": {
        "tags": ["Revisions"],
        "summary": "Gets current revision object.",
        "operationId": "Revisions_GetCurrentRevision",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/api/rd/v1/Revisions/RenameRevision": {
      "get": {
        "tags": ["Revisions"],
        "summary": "Updates name of revision in database.",
        "operationId": "Revisions_RenameRevision",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "cryptedOwnerId",
            "in": "query",
            "description": "Encrypted owner id.",
            "required": true,
            "type": "string"
          },
          {
            "name": "cryptedQuoteId",
            "in": "query",
            "description": "Encrypted quote id.",
            "required": true,
            "type": "string"
          },
          {
            "name": "newName",
            "in": "query",
            "description": "New name of reivision.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/api/rd/v1/Revisions/GetFileResponseMessage": {
      "get": {
        "tags": ["Revisions"],
        "summary": "Gets the file response message.",
        "operationId": "Revisions_GetFileResponseMessage",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "fileName",
            "in": "query",
            "description": "Name of the file.",
            "required": true,
            "type": "string"
          },
          {
            "name": "content._buffer",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "content._origin",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._position",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._length",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._capacity",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._expandable",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content._writable",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content._exposable",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content._isOpen",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content.__identity",
            "in": "query",
            "required": false,
            "type": "object"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/api/rd/v1/SapCRMLanding/ProceedToQuote": {
      "get": {
        "tags": ["SapCRMLanding"],
        "operationId": "SapCRMLanding_ProceedToQuote",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "quoteId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "opportunityId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "destination",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "categoryId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "productId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "info",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Landing.QuoteRedirectResponse"
            }
          }
        }
      }
    },
    "/api/rd/v1/SapCRMLanding/CheckLogin": {
      "post": {
        "tags": ["SapCRMLanding"],
        "operationId": "SapCRMLanding_CheckLogin",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.Landing.QuoteRedirectResponse"
            }
          }
        }
      }
    },
    "/api/rd/v1/SapCRMLanding/GetFileResponseMessage": {
      "get": {
        "tags": ["SapCRMLanding"],
        "summary": "Gets the file response message.",
        "operationId": "SapCRMLanding_GetFileResponseMessage",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "fileName",
            "in": "query",
            "description": "Name of the file.",
            "required": true,
            "type": "string"
          },
          {
            "name": "content._buffer",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "content._origin",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._position",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._length",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._capacity",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._expandable",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content._writable",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content._exposable",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content._isOpen",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content.__identity",
            "in": "query",
            "required": false,
            "type": "object"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/api/v1/admin/SAPProvider/GetCommerceSettings": {
      "get": {
        "tags": ["SAPProvider"],
        "summary": "Gets SAP commerce details",
        "operationId": "SAPProvider_GetCommerceSettings",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.Admin.Providers.SAPCommerceSettingsVM"
            }
          }
        }
      }
    },
    "/api/v1/admin/SAPProvider/GetUsers": {
      "get": {
        "tags": ["SAPProvider"],
        "summary": "Gets the users.",
        "operationId": "SAPProvider_GetUsers",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "description": "The query.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Webcom.API.Admin.Providers.CommerceUserVM"
              }
            }
          }
        }
      }
    },
    "/api/v1/admin/SAPProvider/GetCommonSettings": {
      "get": {
        "tags": ["SAPProvider"],
        "summary": "Gets SAP general settings details",
        "operationId": "SAPProvider_GetCommonSettings",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.Admin.Providers.SAPCommonSettingsVM"
            }
          }
        }
      }
    },
    "/api/v1/admin/SAPProvider/GetC4CSettings": {
      "get": {
        "tags": ["SAPProvider"],
        "summary": "Gets C4C specific settings",
        "operationId": "SAPProvider_GetC4CSettings",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.Admin.Providers.SAPC4CSettingsVM"
            }
          }
        }
      }
    },
    "/api/v1/admin/SAPProvider/GetC4CObsoleteSettings": {
      "get": {
        "tags": ["SAPProvider"],
        "summary": "Gets C4C obsolete specific settings",
        "operationId": "SAPProvider_GetC4CObsoleteSettings",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.Admin.Providers.SAPC4CSettingsVM"
            }
          }
        }
      }
    },
    "/api/v1/admin/SAPProvider/GetS4Settings": {
      "get": {
        "tags": ["SAPProvider"],
        "summary": "Gets S/4 specific settings",
        "operationId": "SAPProvider_GetS4Settings",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.Admin.Providers.SAPS4SettingsVM"
            }
          }
        }
      }
    },
    "/api/v1/admin/SAPProvider/SaveCommerceSettings": {
      "post": {
        "tags": ["SAPProvider"],
        "summary": "Save commerce settings",
        "operationId": "SAPProvider_SaveCommerceSettings",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "description": "SAP commerce settings to be saved",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Webcom.API.Admin.Providers.SAPCommerceSettingsVM"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.Admin.Providers.SaveCommerceSettingsVM"
            }
          }
        }
      }
    },
    "/api/v1/admin/SAPProvider/SaveCommonSettings": {
      "post": {
        "tags": ["SAPProvider"],
        "summary": "Save SAP general settings details",
        "operationId": "SAPProvider_SaveCommonSettings",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "description": "SAP general settings to be saved.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Webcom.API.Admin.Providers.SAPCommonSettingsVM"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Webcom.API.StatusVm" }
          }
        }
      }
    },
    "/api/v1/admin/SAPProvider/SaveC4CSettings": {
      "post": {
        "tags": ["SAPProvider"],
        "summary": "Saves SAP C4C specific settings",
        "operationId": "SAPProvider_SaveC4CSettings",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "description": "SAP C4C specific settings to be saved.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Webcom.API.Admin.Providers.SAPC4CSettingsVM"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Webcom.API.StatusVm" }
          }
        }
      }
    },
    "/api/v1/admin/SAPProvider/SaveC4CObsoleteSettings": {
      "post": {
        "tags": ["SAPProvider"],
        "summary": "Saves SAP C4C obsolete specific settings",
        "operationId": "SAPProvider_SaveC4CObsoleteSettings",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "description": "SAP C4C obsolete specific settings to be saved.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Webcom.API.Admin.Providers.SAPC4CSettingsVM"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Webcom.API.StatusVm" }
          }
        }
      }
    },
    "/api/v1/admin/SAPProvider/SaveS4Settings": {
      "post": {
        "tags": ["SAPProvider"],
        "summary": "Saves SAP S/4 specific settings",
        "operationId": "SAPProvider_SaveS4Settings",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "description": "SAP S/4 specific settings to be saved.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Webcom.API.Admin.Providers.SAPS4SettingsVM"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Webcom.API.StatusVm" }
          }
        }
      }
    },
    "/api/v1/admin/SAPProvider/GetInitData": {
      "get": {
        "tags": ["SAPProvider"],
        "summary": "Gets initialized data for sap provider page",
        "operationId": "SAPProvider_GetInitData",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.Admin.Providers.SAPProviderVM"
            }
          }
        }
      }
    },
    "/api/v1/admin/SAPProvider/GenerateSecretKey": {
      "get": {
        "tags": ["SAPProvider"],
        "summary": "Generates the secret key suitable for SHA-256.",
        "operationId": "SAPProvider_GenerateSecretKey",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "string" } }
        }
      }
    },
    "/api/v1/admin/SAPProvider/GetFileResponseMessage": {
      "get": {
        "tags": ["SAPProvider"],
        "summary": "Gets the file response message.",
        "operationId": "SAPProvider_GetFileResponseMessage",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "fileName",
            "in": "query",
            "description": "Name of the file.",
            "required": true,
            "type": "string"
          },
          {
            "name": "content._buffer",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "content._origin",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._position",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._length",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._capacity",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._expandable",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content._writable",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content._exposable",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content._isOpen",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content.__identity",
            "in": "query",
            "required": false,
            "type": "object"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/setup/api/v1/admin/sb/ratePlansByProduct": {
      "get": {
        "tags": ["SBApi"],
        "summary": "Get all rate plans by product ID",
        "operationId": "SBApi_GetRatePlansByProduct",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Webcom.API.Public.SB.VM.RatePlanVM"
              }
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/sbprovider": {
      "get": {
        "tags": ["SBProvider"],
        "summary": "Web API GET - get details about SAP SB Subscription Billing Provider parameters",
        "operationId": "SBProvider_GetProviderDetails",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.SetupSPA.Providers.SB.VM.SBProviderDetailsVM"
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/sbprovider/save": {
      "post": {
        "tags": ["SBProvider"],
        "summary": "Web API POST - set parameters through JSON file",
        "operationId": "SBProvider_PostProviderDetails",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "sbDetails",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Webcom.API.SetupSPA.Providers.SB.VM.SBProviderDetailsVM"
            }
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/setup/api/v1/admin/sbprovider/integrationEnabled/{state}": {
      "patch": {
        "tags": ["SBProvider"],
        "summary": "Web API PATCH - sets if the integration SAP Subscription Billing is enabled or disabled",
        "operationId": "SBProvider_PatchEnableIntegration",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "state",
            "in": "path",
            "description": "enable/disable",
            "required": true,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/api/rd/v1/SBProviderRD/GetProviderDetails": {
      "get": {
        "tags": ["SBProviderRD"],
        "summary": "Gets provider details.",
        "operationId": "SBProviderRD_GetProviderDetails",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.SBProviderRD.VM.SBProviderDetailsVM"
            }
          }
        }
      }
    },
    "/api/rd/v1/SBProviderRD/UpdateProviderDetails": {
      "post": {
        "tags": ["SBProviderRD"],
        "summary": "Saves provider settings.",
        "operationId": "SBProviderRD_UpdateProviderDetails",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "sbDetails",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.SBProviderRD.VM.SBProviderDetailsVM"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Webcom.API.StatusVm" }
          }
        }
      }
    },
    "/api/rd/v1/SBProviderRD/GetFileResponseMessage": {
      "get": {
        "tags": ["SBProviderRD"],
        "summary": "Gets the file response message.",
        "operationId": "SBProviderRD_GetFileResponseMessage",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "fileName",
            "in": "query",
            "description": "Name of the file.",
            "required": true,
            "type": "string"
          },
          {
            "name": "content._buffer",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "content._origin",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._position",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._length",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._capacity",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._expandable",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content._writable",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content._exposable",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content._isOpen",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content.__identity",
            "in": "query",
            "required": false,
            "type": "object"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/api/v1/admin/Scripting/CheckSyntax": {
      "post": {
        "tags": ["Scripting"],
        "summary": "Checks the syntax of provided script.",
        "operationId": "Scripting_CheckSyntax",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Webcom.API.Admin.Scripting.CheckSyntaxRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Webcom.API.StatusVm" }
          }
        }
      }
    },
    "/api/v1/admin/Scripting/GenerateSecretKey": {
      "get": {
        "tags": ["Scripting"],
        "summary": "Generates the secret key suitable for SHA-256.",
        "operationId": "Scripting_GenerateSecretKey",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "string" } }
        }
      }
    },
    "/api/v1/admin/Scripting/GetFileResponseMessage": {
      "get": {
        "tags": ["Scripting"],
        "summary": "Gets the file response message.",
        "operationId": "Scripting_GetFileResponseMessage",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "fileName",
            "in": "query",
            "description": "Name of the file.",
            "required": true,
            "type": "string"
          },
          {
            "name": "content._buffer",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "content._origin",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._position",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._length",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._capacity",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._expandable",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content._writable",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content._exposable",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content._isOpen",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content.__identity",
            "in": "query",
            "required": false,
            "type": "object"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/setup/api/v1/admin/segregationOfDuties/menuLinkGroups": {
      "get": {
        "tags": ["SegregationOfDuties"],
        "summary": "Get all menu link info groups",
        "operationId": "SegregationOfDuties_GetMenuLinks",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.SetupSPA.SegregationOfDuties.VM.MenuLinkInfoGroupsVM"
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/segregationOfDuties/applied/{areSegregationSettingsApplied}": {
      "post": {
        "tags": ["SegregationOfDuties"],
        "summary": "Sets apply segregation settings state",
        "operationId": "SegregationOfDuties_SetApplySegregationSettings",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "areSegregationSettingsApplied",
            "in": "path",
            "description": "Flag stating whether segregation settings are applied",
            "required": true,
            "type": "boolean"
          }
        ],
        "responses": { "204": { "description": "No Content" } }
      }
    },
    "/setup/api/v1/admin/segregationOfDuties/rightsPreference/{isEditingRightPreferred}": {
      "post": {
        "tags": ["SegregationOfDuties"],
        "summary": "Sets permissive rights prevail state",
        "operationId": "SegregationOfDuties_SetRightsPreference",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "isEditingRightPreferred",
            "in": "path",
            "description": "",
            "required": true,
            "type": "boolean"
          }
        ],
        "responses": { "204": { "description": "No Content" } }
      }
    },
    "/setup/api/v1/admin/segregationOfDuties/{permissionId}": {
      "get": {
        "tags": ["SegregationOfDuties"],
        "summary": "Gets visible menu link info ids for permission group with provided id",
        "operationId": "SegregationOfDuties_GetVisibleMenuLinkInfos",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "permissionId",
            "in": "path",
            "description": "Permission id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Webcom.API.SetupSPA.SegregationOfDuties.VM.MenuLinkInfoPermissionVM"
              }
            }
          }
        }
      },
      "post": {
        "tags": ["SegregationOfDuties"],
        "summary": "Saves visible menu info links for permission group with provided id",
        "operationId": "SegregationOfDuties_Save",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "permissionId",
            "in": "path",
            "description": "Permission id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "models",
            "in": "body",
            "description": "Visible menu link info ids",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Webcom.API.SetupSPA.SegregationOfDuties.VM.MenuLinkInfoPermissionVM"
              }
            }
          }
        ],
        "responses": { "204": { "description": "No Content" } }
      }
    },
    "/setup/api/v1/admin/segregationOfDuties/subitems/{permissionId}/{menuLinkInfoId}": {
      "get": {
        "tags": ["SegregationOfDuties"],
        "summary": "Gets submenu items where itemsId contains their id list for menu link by menu link id (example for menu link \"Custom Tables\" this returns custom tables)",
        "operationId": "SegregationOfDuties_GetMenuLinkSubItems",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "permissionId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "menuLinkInfoId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Webcom.API.SetupSPA.SegregationOfDuties.VM.SegregationMenuListBoxItemVM"
              }
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/segregationOfDuties/adminSegregationUsers": {
      "get": {
        "tags": ["SegregationOfDuties"],
        "summary": "Gets segregation admins",
        "operationId": "SegregationOfDuties_GetSegregationAdmins",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "format": "int32", "type": "integer" }
            }
          }
        }
      },
      "post": {
        "tags": ["SegregationOfDuties"],
        "summary": "Sets admin segregation users state",
        "operationId": "SegregationOfDuties_SaveSegregationAdmins",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "segregationAdminIds",
            "in": "body",
            "description": "List of segregation admin ids",
            "required": true,
            "schema": {
              "type": "array",
              "items": { "format": "int32", "type": "integer" }
            }
          }
        ],
        "responses": { "204": { "description": "No Content" } }
      }
    },
    "/setup/api/v1/admin/segregationOfDuties/isReadOnlySection/{urlKey}": {
      "get": {
        "tags": ["SegregationOfDuties"],
        "summary": "Gets information if user is a part of any permission group that has read only access to users section",
        "operationId": "SegregationOfDuties_IsReadOnlySection",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          { "name": "urlKey", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "boolean" } }
        }
      }
    },
    "/setup/api/v1/admin/segregationOfDuties/id/{key}": {
      "get": {
        "tags": ["SegregationOfDuties"],
        "summary": "",
        "operationId": "SegregationOfDuties_GetMenuKeyById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "format": "int32", "type": "integer" }
          }
        }
      }
    },
    "/api/rd/v1/SegregationOfDutiesRD/GetSetupLinksVisibility": {
      "get": {
        "tags": ["SegregationOfDutiesRD"],
        "summary": "Get visibility info for setup links on user side",
        "operationId": "SegregationOfDutiesRD_GetSetupLinksVisibility",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.SegregationOfDuties.VM.SetupLinksVisibilityVM"
            }
          }
        }
      }
    },
    "/api/rd/v1/SegregationOfDutiesRD/GetFileResponseMessage": {
      "get": {
        "tags": ["SegregationOfDutiesRD"],
        "summary": "Gets the file response message.",
        "operationId": "SegregationOfDutiesRD_GetFileResponseMessage",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "fileName",
            "in": "query",
            "description": "Name of the file.",
            "required": true,
            "type": "string"
          },
          {
            "name": "content._buffer",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "content._origin",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._position",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._length",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._capacity",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._expandable",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content._writable",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content._exposable",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content._isOpen",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content.__identity",
            "in": "query",
            "required": false,
            "type": "object"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/api/scim/v1/ServiceProviderConfigs": {
      "get": {
        "tags": ["ServiceProviderConfigs"],
        "summary": "Gets service provider configuration details",
        "operationId": "ServiceProviderConfigs_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/setup/api/v1/admin/subscriptionBilling/ratePlanTemplates": {
      "get": {
        "tags": ["SubscriptionBilling"],
        "summary": "Gets filtered, paged and sorted products with total number of products",
        "operationId": "SubscriptionBilling_GetRatePlanTemplates",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.Common.Models.PagedDataVM[Webcom.API.SetupSPA.SubscriptionBilling.VM.RatePlanTemplateVM]"
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/subscriptionBilling/ratePlanTemplate/{uuid}": {
      "get": {
        "tags": ["SubscriptionBilling"],
        "summary": "Gets rate plan template details",
        "operationId": "SubscriptionBilling_GetRatePlanTemplateDetails",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          { "name": "uuid", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.SetupSPA.SubscriptionBilling.VM.RatePlanTemplateVM"
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/subscriptionBilling/ratePlanTemplateByProduct/{productId}": {
      "get": {
        "tags": ["SubscriptionBilling"],
        "summary": "Gets rate plan details for product",
        "operationId": "SubscriptionBilling_GetRatePlanTemplate",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.SetupSPA.SubscriptionBilling.VM.RatePlanTemplateVM"
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/subscriptionBilling/ratePlan/{productId}/{marketId}": {
      "get": {
        "tags": ["SubscriptionBilling"],
        "summary": "Gets rate plan details",
        "operationId": "SubscriptionBilling_GetRatePlan",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "marketId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.SetupSPA.SubscriptionBilling.VM.RatePlanVM"
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/subscriptionBilling/ratePlans/{productId}": {
      "get": {
        "tags": ["SubscriptionBilling"],
        "summary": "Gets the market rate plans.",
        "operationId": "SubscriptionBilling_GetMarketRatePlans",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "The product identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Webcom.API.SetupSPA.SubscriptionBilling.VM.MarketRatePlanVM"
              }
            }
          }
        }
      }
    },
    "/api/v1/admin/TablesOnQuotes/GetQuoteTableInitData": {
      "get": {
        "tags": ["TablesOnQuotes"],
        "summary": "Gets the initialize data.",
        "operationId": "TablesOnQuotes_GetQuoteTableInitData",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "tableId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.Admin.TablesOnQuotes.QuoteTableDefinitionVm"
            }
          }
        }
      }
    },
    "/api/v1/admin/TablesOnQuotes/SaveQuoteTableModelWithPermissions": {
      "post": {
        "tags": ["TablesOnQuotes"],
        "summary": "Saves quote table model with permissions assigned to it",
        "operationId": "TablesOnQuotes_SaveQuoteTableModelWithPermissions",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "tableModel",
            "in": "body",
            "description": "Quote table model",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Webcom.API.Admin.TablesOnQuotes.SaveQuoteTableDefinitionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.Admin.TablesOnQuotes.QuoteTableDefinitionVm"
            }
          }
        }
      }
    },
    "/api/v1/admin/TablesOnQuotes/GetFormatedPermsissionText": {
      "post": {
        "tags": ["TablesOnQuotes"],
        "summary": "Gets formated display text for permissions",
        "operationId": "TablesOnQuotes_GetFormatedPermsissionText",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "item",
            "in": "body",
            "description": "Quote table permission item representation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Webcom.API.Admin.QuoteTable.QuoteTablePermissionItemVm"
            }
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "string" } }
        }
      }
    },
    "/api/v1/admin/TablesOnQuotes/GetQuoteTableColumnList": {
      "get": {
        "tags": ["TablesOnQuotes"],
        "summary": "Gets the list of quote table columns for table identifier",
        "operationId": "TablesOnQuotes_GetQuoteTableColumnList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "tableId",
            "in": "query",
            "description": "Quote table id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.Admin.TablesOnQuotes.DefineColumnModelVm"
            }
          }
        }
      }
    },
    "/api/v1/admin/TablesOnQuotes/GetAllPermissionsAndStatuses": {
      "get": {
        "tags": ["TablesOnQuotes"],
        "summary": "Gets all cpq permissions and statuses .",
        "operationId": "TablesOnQuotes_GetAllPermissionsAndStatuses",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.Admin.TablesOnQuotes.QuoteTablePermissionResponse"
            }
          }
        }
      }
    },
    "/api/v1/admin/TablesOnQuotes/GetQuoteTableGroups": {
      "get": {
        "tags": ["TablesOnQuotes"],
        "summary": "Gets quote table groups",
        "operationId": "TablesOnQuotes_GetQuoteTableGroups",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "tableId",
            "in": "query",
            "description": "Quote table groups",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.Admin.TablesOnQuotes.DefineColumnGroupsModelVm"
            }
          }
        }
      }
    },
    "/api/v1/admin/TablesOnQuotes/SaveQuoteTableColumns": {
      "post": {
        "tags": ["TablesOnQuotes"],
        "summary": "Saves quote table columns",
        "operationId": "TablesOnQuotes_SaveQuoteTableColumns",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "description": "Quote table columns",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Webcom.API.Admin.TablesOnQuotes.DefineColumnModelVm"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.Admin.TablesOnQuotes.DefineColumnModelVm"
            }
          }
        }
      }
    },
    "/api/v1/admin/TablesOnQuotes/DeletePermission": {
      "post": {
        "tags": ["TablesOnQuotes"],
        "summary": "Deletes the quote table permission with specified identifier.",
        "operationId": "TablesOnQuotes_DeletePermission",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "permissionId",
            "in": "query",
            "description": "The permission id.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Webcom.API.StatusVm" }
          }
        }
      }
    },
    "/api/v1/admin/TablesOnQuotes/GetListInitData": {
      "get": {
        "tags": ["TablesOnQuotes"],
        "summary": "Gets the list of quote table definitions.",
        "operationId": "TablesOnQuotes_GetListInitData",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.Admin.TablesOnQuotes.TablesOnQuotesResponse"
            }
          }
        }
      }
    },
    "/api/v1/admin/TablesOnQuotes/DeleteQuoteTable": {
      "post": {
        "tags": ["TablesOnQuotes"],
        "summary": "Deletes the quote table with specified identifier.",
        "operationId": "TablesOnQuotes_DeleteQuoteTable",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "tableId",
            "in": "query",
            "description": "The permission id.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Webcom.API.StatusVm" }
          }
        }
      }
    },
    "/api/v1/admin/TablesOnQuotes/GetQuoteTableTranslations": {
      "get": {
        "tags": ["TablesOnQuotes"],
        "summary": "Gets the list of quote table translations.",
        "operationId": "TablesOnQuotes_GetQuoteTableTranslations",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "tableId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.Admin.TablesOnQuotes.QuoteTableTranslationsVM"
            }
          }
        }
      }
    },
    "/api/v1/admin/TablesOnQuotes/SaveQuoteTableTranslations": {
      "post": {
        "tags": ["TablesOnQuotes"],
        "summary": "Saves quote table translations",
        "operationId": "TablesOnQuotes_SaveQuoteTableTranslations",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "saveQuoteTableTranslationsRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Webcom.API.Admin.SaveQuoteTableTranslationsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Webcom.API.StatusVm" }
          }
        }
      }
    },
    "/api/v1/admin/TablesOnQuotes/GetInitDataForActionsTab": {
      "get": {
        "tags": ["TablesOnQuotes"],
        "summary": "Gets the initialize data for actions tab.",
        "operationId": "TablesOnQuotes_GetInitDataForActionsTab",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "tableId",
            "in": "query",
            "description": "The table identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.Admin.TablesOnQuotes.QuoteTableActionsDataVm"
            }
          }
        }
      }
    },
    "/api/v1/admin/TablesOnQuotes/SaveQuoteTableActions": {
      "post": {
        "tags": ["TablesOnQuotes"],
        "summary": "Saves the quote table actions.",
        "operationId": "TablesOnQuotes_SaveQuoteTableActions",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Webcom.API.Admin.TablesOnQuotes.SaveQuoteTableActionsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.Admin.TablesOnQuotes.QuoteTableActionsDataVm"
            }
          }
        }
      }
    },
    "/api/v1/admin/TablesOnQuotes/GenerateSecretKey": {
      "get": {
        "tags": ["TablesOnQuotes"],
        "summary": "Generates the secret key suitable for SHA-256.",
        "operationId": "TablesOnQuotes_GenerateSecretKey",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "string" } }
        }
      }
    },
    "/api/v1/admin/TablesOnQuotes/GetFileResponseMessage": {
      "get": {
        "tags": ["TablesOnQuotes"],
        "summary": "Gets the file response message.",
        "operationId": "TablesOnQuotes_GetFileResponseMessage",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "fileName",
            "in": "query",
            "description": "Name of the file.",
            "required": true,
            "type": "string"
          },
          {
            "name": "content._buffer",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "content._origin",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._position",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._length",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._capacity",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._expandable",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content._writable",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content._exposable",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content._isOpen",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content.__identity",
            "in": "query",
            "required": false,
            "type": "object"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/api/v1/admin/files/Temp": {
      "get": {
        "tags": ["Temp"],
        "operationId": "Temp_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "type": "array", "items": { "type": "string" } }
          }
        }
      },
      "put": {
        "tags": ["Temp"],
        "summary": "Updates files",
        "operationId": "Temp_Put",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      },
      "post": {
        "tags": ["Temp"],
        "operationId": "Temp_Post",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/api/v1/admin/files/Temp/{id}": {
      "get": {
        "tags": ["Temp"],
        "summary": "Gets specified file",
        "operationId": "Temp_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "File name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      },
      "put": {
        "tags": ["Temp"],
        "summary": "Updates specified file",
        "operationId": "Temp_Put",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Name of the file to update",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      },
      "delete": {
        "tags": ["Temp"],
        "summary": "Deletes specified file",
        "operationId": "Temp_Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "File name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/setup/api/v1/admin/files/Temp": {
      "get": {
        "tags": ["Temp"],
        "operationId": "Temp_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "type": "array", "items": { "type": "string" } }
          }
        }
      },
      "put": {
        "tags": ["Temp"],
        "summary": "Updates files",
        "operationId": "Temp_Put",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      },
      "post": {
        "tags": ["Temp"],
        "operationId": "Temp_Post",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/setup/api/v1/admin/files/Temp/{id}": {
      "get": {
        "tags": ["Temp"],
        "summary": "Gets specified file",
        "operationId": "Temp_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "File name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      },
      "put": {
        "tags": ["Temp"],
        "summary": "Updates specified file",
        "operationId": "Temp_Put",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Name of the file to update",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      },
      "delete": {
        "tags": ["Temp"],
        "summary": "Deletes specified file",
        "operationId": "Temp_Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "File name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/setup/api/v1/admin/tenant": {
      "get": {
        "tags": ["Tenant"],
        "summary": "Gets infor about tenant settings",
        "operationId": "Tenant_GetTenantInfo",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.SetupSPA.Tenant.VM.TenantVM"
            }
          }
        }
      }
    },
    "/api/v1/TenantResourceConsumption/GetResourceConsumptionInfoForAllTenants": {
      "get": {
        "tags": ["TenantResourceConsumption"],
        "summary": "Gets the resource consumption information for each tenant on current installation. It can be consumed only from default tenant.",
        "operationId": "TenantResourceConsumption_GetResourceConsumptionInfoForAllTenants",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Webcom.API.Internal.TenantUsage.TenantResourceConsumptionResponse"
              }
            }
          }
        }
      }
    },
    "/api/v1/TenantResourceConsumption/ExecuteWeeklySchedulerForAllTenants": {
      "get": {
        "tags": ["TenantResourceConsumption"],
        "summary": "Executes the weekly scheduler for all tenants.",
        "operationId": "TenantResourceConsumption_ExecuteWeeklySchedulerForAllTenants",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Webcom.API.StatusVm" }
          }
        }
      }
    },
    "/api/v1/TenantResourceConsumption/ExecuteMonthlySchedulerForAllTenants": {
      "get": {
        "tags": ["TenantResourceConsumption"],
        "summary": "Executes the monthly scheduler for all tenants.",
        "operationId": "TenantResourceConsumption_ExecuteMonthlySchedulerForAllTenants",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Webcom.API.StatusVm" }
          }
        }
      }
    },
    "/api/v1/TenantResourceConsumption/GetResourceConsumptionInfo": {
      "get": {
        "tags": ["TenantResourceConsumption"],
        "summary": "Gets the resource consumption information for specific tenant on current installation.",
        "operationId": "TenantResourceConsumption_GetResourceConsumptionInfo",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "tenantName",
            "in": "query",
            "description": "Name of the tenant.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.Internal.TenantUsage.TenantResourceConsumptionResponse"
            }
          }
        }
      }
    },
    "/api/v1/TenantResourceConsumption/GetResourceConsumptionInfoForCurrentTenant": {
      "get": {
        "tags": ["TenantResourceConsumption"],
        "summary": "Gets the resource consumption information for current tenant.",
        "operationId": "TenantResourceConsumption_GetResourceConsumptionInfoForCurrentTenant",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.Internal.TenantUsage.TenantResourceConsumptionResponse"
            }
          }
        }
      }
    },
    "/api/v1/TenantResourceConsumption/GetUserActivityData": {
      "get": {
        "tags": ["TenantResourceConsumption"],
        "summary": "Gets the user activity data.",
        "operationId": "TenantResourceConsumption_GetUserActivityData",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "filter.currentPage",
            "in": "query",
            "description": "Gets or sets the current page.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "filter.itemsPerPage",
            "in": "query",
            "description": "Gets or sets the items per page.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "filter.sortMethod",
            "in": "query",
            "description": "Gets or sets the sort method.",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.orderByColumn",
            "in": "query",
            "description": "Gets or sets the order by column.",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.search",
            "in": "query",
            "description": "Gets or sets the search.",
            "required": false,
            "type": "object"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.Internal.TenantUsage.UserActivityResponse"
            }
          }
        }
      }
    },
    "/api/v1/TenantResourceConsumption/GetBusinessPerformance": {
      "get": {
        "tags": ["TenantResourceConsumption"],
        "summary": "Gets the business performance.",
        "operationId": "TenantResourceConsumption_GetBusinessPerformance",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.Internal.TenantUsage.BusinessPerformanceResponse"
            }
          }
        }
      }
    },
    "/api/v1/TenantResourceConsumption/GetBusinessPerformanceFilterData": {
      "get": {
        "tags": ["TenantResourceConsumption"],
        "summary": "Gets the business performance filter data.",
        "operationId": "TenantResourceConsumption_GetBusinessPerformanceFilterData",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "filter.currentPage",
            "in": "query",
            "description": "Gets or sets the current page.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "filter.itemsPerPage",
            "in": "query",
            "description": "Gets or sets the items per page.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "filter.sortMethod",
            "in": "query",
            "description": "Gets or sets the sort method.",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.orderByColumn",
            "in": "query",
            "description": "Gets or sets the order by column.",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.search",
            "in": "query",
            "description": "Gets or sets the search.",
            "required": false,
            "type": "object"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.Internal.TenantUsage.BusinessPerformanceResponse"
            }
          }
        }
      }
    },
    "/api/v1/TenantResourceConsumption/GetSystemPerformance": {
      "get": {
        "tags": ["TenantResourceConsumption"],
        "summary": "Gets the system performance.",
        "operationId": "TenantResourceConsumption_GetSystemPerformance",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.Internal.TenantUsage.SystemPerformanceResponse"
            }
          }
        }
      }
    },
    "/api/v1/TenantResourceConsumption/GetFileResponseMessage": {
      "get": {
        "tags": ["TenantResourceConsumption"],
        "summary": "Gets the file response message.",
        "operationId": "TenantResourceConsumption_GetFileResponseMessage",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "fileName",
            "in": "query",
            "description": "Name of the file.",
            "required": true,
            "type": "string"
          },
          {
            "name": "content._buffer",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "content._origin",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._position",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._length",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._capacity",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._expandable",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content._writable",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content._exposable",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content._isOpen",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content.__identity",
            "in": "query",
            "required": false,
            "type": "object"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/setup/api/v1/admin/translations/translate": {
      "post": {
        "tags": ["Translation"],
        "summary": "Get a values from current dictionary for keys param",
        "operationId": "Translation_Translate",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "keys",
            "in": "body",
            "description": "Dictionary keys",
            "required": true,
            "schema": { "type": "array", "items": { "type": "string" } }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Webcom.API.NameValuePair" }
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/users/{id}": {
      "get": {
        "tags": ["User"],
        "summary": "Gets user with provided id",
        "operationId": "User_GetUser",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.SetupSPA.Users.VM.UserVM"
            }
          }
        }
      },
      "delete": {
        "tags": ["User"],
        "summary": "Deletes the user with provided id.",
        "operationId": "User_DeleteUser",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": { "204": { "description": "No Content" } }
      }
    },
    "/setup/api/v1/admin/users": {
      "get": {
        "tags": ["User"],
        "summary": "Gets filtered, paged and sorted users with total number of users.",
        "operationId": "User_GetUsers",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.Common.Models.PagedDataVM[Webcom.API.SetupSPA.Users.VM.UserTableRowVM]"
            }
          }
        }
      },
      "post": {
        "tags": ["User"],
        "summary": "Saves the user.",
        "operationId": "User_SaveUser",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "User VM",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Webcom.API.SetupSPA.Users.VM.UserVM"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "format": "int32", "type": "integer" }
          }
        }
      }
    },
    "/setup/api/v1/admin/users/current/data": {
      "get": {
        "tags": ["User"],
        "summary": "Gets info about current, logged in user",
        "operationId": "User_GetCurrentUser",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.SetupSPA.Users.VM.AppUserVM"
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/users/getWalkMeConfiguration": {
      "get": {
        "tags": ["User"],
        "summary": "Gets Setup js configuration for walkme",
        "operationId": "User_GetWalkMeConfiguration",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "string" } }
        }
      }
    },
    "/setup/api/v1/admin/users/names": {
      "get": {
        "tags": ["User"],
        "summary": "Gets names of users with provided ids.",
        "operationId": "User_GetUserNames",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "userIds",
            "in": "query",
            "description": "User ids",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/System.Collections.Generic.KeyValuePair[System.Int32,System.String]"
              }
            }
          }
        }
      },
      "post": {
        "tags": ["User"],
        "summary": "Gets names of users with provided ids.",
        "operationId": "User_GetUserNamesPostMehthod",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "userIds",
            "in": "body",
            "description": "User ids",
            "required": true,
            "schema": {
              "type": "array",
              "items": { "format": "int32", "type": "integer" }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/System.Collections.Generic.KeyValuePair[System.Int32,System.String]"
              }
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/users/admins/names": {
      "get": {
        "tags": ["User"],
        "summary": "Get id/names of active and non-blocked admin users",
        "operationId": "User_GetAdminUserNames",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/System.Collections.Generic.KeyValuePair[System.Int32,System.String]"
              }
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/users/lookups/brands": {
      "get": {
        "tags": ["User"],
        "summary": "Gets branding lookups",
        "operationId": "User_GetBrandingLookups",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Webcom.API.SetupSPA.Common.LookupVM"
              }
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/users/lookups/companies": {
      "get": {
        "tags": ["User"],
        "summary": "Gets company lookups",
        "operationId": "User_GetCompanyLookups",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "description": "Search criteria",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Webcom.API.SetupSPA.Common.LookupVM"
              }
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/users/tabs/general/default": {
      "get": {
        "tags": ["User"],
        "summary": "Get default values for general tab",
        "operationId": "User_UserGeneralDefault",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.SetupSPA.Users.VM.UserGeneralDefaultLookupVM"
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/users/address": {
      "get": {
        "tags": ["User"],
        "summary": "Get user address lookup",
        "operationId": "User_UserAddressLookup",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.SetupSPA.Users.VM.UserAddressLookupVM"
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/users/tabs/dateAndMarket": {
      "get": {
        "tags": ["User"],
        "summary": "Get date and market lookup",
        "operationId": "User_DateAndMarketLookup",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.SetupSPA.Users.DateAndMarketLookupVM"
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/users/tabs/additionalSettings/{marketId}": {
      "get": {
        "tags": ["User"],
        "summary": "Get lookup for additional setting tab",
        "operationId": "User_UserAdditionalSettingsLookup",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "marketId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.SetupSPA.Users.VM.UserAdditionalSettingsLookupVM"
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/users/tabs/pricebooks/{marketId}": {
      "get": {
        "tags": ["User"],
        "summary": "Gets pricebook lookups by marketId",
        "operationId": "User_GetPricebooksByMarketId",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "marketId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Webcom.API.SetupSPA.Common.LookupVM"
              }
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/users/customFields": {
      "get": {
        "tags": ["User"],
        "summary": "Get user custom fields",
        "operationId": "User_GetUserCustomFields",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Webcom.API.SetupSPA.Users.VM.UserCustomFieldVM"
              }
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/users/shouldSendEmailToUser": {
      "get": {
        "tags": ["User"],
        "summary": "Should email be sent to user",
        "operationId": "User_ShouldSendEmailToUser",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "boolean" } }
        }
      }
    },
    "/setup/api/v1/admin/users/blockedUsers": {
      "get": {
        "tags": ["User"],
        "summary": "Get blocked users ids",
        "operationId": "User_GetBlockedUsersIds",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "format": "int32", "type": "integer" }
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/users/{id}/permissionGroup": {
      "post": {
        "tags": ["User"],
        "summary": "Adds user to permission groups",
        "operationId": "User_AddUserToPermissionGroups",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "permissionGroupSystemIds",
            "in": "body",
            "description": "",
            "required": true,
            "schema": { "type": "array", "items": { "type": "string" } }
          }
        ],
        "responses": { "204": { "description": "No Content" } }
      },
      "delete": {
        "tags": ["User"],
        "summary": "Deletes user from permission groups",
        "operationId": "User_DeleteUserFromPermssionGroups",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "permissionGroupSystemIds",
            "in": "body",
            "description": "",
            "required": true,
            "schema": { "type": "array", "items": { "type": "string" } }
          }
        ],
        "responses": { "204": { "description": "No Content" } }
      }
    },
    "/setup/api/v1/admin/userCustomFields": {
      "get": {
        "tags": ["UserCustomField"],
        "summary": "Get user custom fields",
        "operationId": "UserCustomField_GetUserCustomFieldsTable",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.Common.Models.PagedDataVM[Webcom.API.SetupSPA.Users.VM.UserCustomFieldTableRowVM]"
            }
          }
        }
      },
      "post": {
        "tags": ["UserCustomField"],
        "summary": "Save User custom field",
        "operationId": "UserCustomField_Save",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "customField",
            "in": "body",
            "description": "Custom field",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Webcom.API.SetupSPA.Users.UserCustomFieldDefnVM"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "format": "int32", "type": "integer" }
          }
        }
      }
    },
    "/setup/api/v1/admin/userCustomFields/{userCustomFieldDefnId}": {
      "get": {
        "tags": ["UserCustomField"],
        "summary": "Get user custom field definition by provided id",
        "operationId": "UserCustomField_GetUserCustomFieldDefn",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "userCustomFieldDefnId",
            "in": "path",
            "description": "User custom field id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.SetupSPA.Users.UserCustomFieldDefnVM"
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/userCustomFields/ranks": {
      "get": {
        "tags": ["UserCustomField"],
        "operationId": "UserCustomField_GetCustomFieldsRanks",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Webcom.API.SetupSPA.Users.VM.UserCustomFieldTableRowVM"
              }
            }
          }
        }
      },
      "post": {
        "tags": ["UserCustomField"],
        "operationId": "UserCustomField_SaveUserCustomFieldsRanks",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "customFieldsRanks",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/System.Collections.Generic.KeyValuePair[System.Int32,System.Int32]"
              }
            }
          }
        ],
        "responses": { "204": { "description": "No Content" } }
      }
    },
    "/setup/api/v1/admin/userCustomFields/types": {
      "get": {
        "tags": ["UserCustomField"],
        "summary": "Gets user custom field types",
        "operationId": "UserCustomField_GetUserCustomFieldTypes",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Webcom.API.SetupSPA.Common.LookupVM"
              }
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/userCustomFields/attributes": {
      "get": {
        "tags": ["UserCustomField"],
        "summary": "Get user custom field attributes",
        "operationId": "UserCustomField_CustomFieldAttributes",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Webcom.API.SetupSPA.Common.LookupVM"
              }
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/userCustomFields/{id}": {
      "delete": {
        "tags": ["UserCustomField"],
        "summary": "Deletes user custom field with provided id",
        "operationId": "UserCustomField_DeleteUserCustomField",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User custom field id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": { "204": { "description": "No Content" } }
      }
    },
    "/setup/api/v1/admin/userCustomFields/names": {
      "get": {
        "tags": ["UserCustomField"],
        "operationId": "UserCustomField_GetCustomFieldNames",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "type": "array", "items": { "type": "string" } }
          }
        }
      }
    },
    "/setup/api/v1/admin/userCustomFields/translations": {
      "post": {
        "tags": ["UserCustomField"],
        "summary": "Save User custom field",
        "operationId": "UserCustomField_SaveTranslations",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "customField",
            "in": "body",
            "description": "Custom field",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Webcom.API.SetupSPA.Users.UserCustomFieldDefnVM"
            }
          }
        ],
        "responses": { "204": { "description": "No Content" } }
      }
    },
    "/api/rd/v1/UserPersonalization/GetInitData": {
      "get": {
        "tags": ["UserPersonalization"],
        "summary": "Gets inital view model in JSON format",
        "operationId": "UserPersonalization_GetInitData",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.UserPersonalization.UserPersonalizationVM"
            }
          }
        }
      }
    },
    "/api/rd/v1/UserPersonalization/GetUsers": {
      "get": {
        "tags": ["UserPersonalization"],
        "summary": "Gets the users.",
        "operationId": "UserPersonalization_GetUsers",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "description": "The query.",
            "required": true,
            "type": "string"
          },
          {
            "name": "includeCurrentUser",
            "in": "query",
            "description": "if set to true [include current user].",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Webcom.API.RD.UserPersonalization.VM.UserVM"
              }
            }
          }
        }
      }
    },
    "/api/rd/v1/UserPersonalization/GetModifyPasswordInitData": {
      "get": {
        "tags": ["UserPersonalization"],
        "summary": "Gets init view model for modify password scenario",
        "operationId": "UserPersonalization_GetModifyPasswordInitData",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.UserPersonalization.ModifyPasswordInitVM"
            }
          }
        }
      }
    },
    "/api/rd/v1/UserPersonalization/GetModifyPersonalInitData": {
      "get": {
        "tags": ["UserPersonalization"],
        "summary": "Gets init view model for modify password scenario",
        "operationId": "UserPersonalization_GetModifyPersonalInitData",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.UserPersonalization.ModifyDetailsInitVM"
            }
          }
        }
      }
    },
    "/api/rd/v1/UserPersonalization/ChangedDateFormat": {
      "post": {
        "tags": ["UserPersonalization"],
        "summary": "Handles on date format change events\r\nby formatting effective date, date for grant access to admin and support",
        "operationId": "UserPersonalization_ChangedDateFormat",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "Format change request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.UserPersonalization.ChangedDateFormatRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "type": "array", "items": { "type": "string" } }
          }
        }
      }
    },
    "/api/rd/v1/UserPersonalization/ChangedSelectedCountry": {
      "post": {
        "tags": ["UserPersonalization"],
        "summary": "Handles on selected country changed events",
        "operationId": "UserPersonalization_ChangedSelectedCountry",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "Get states for selected country request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.UserPersonalization.GetStatesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Webcom.API.NameValuePair" }
            }
          }
        }
      }
    },
    "/api/rd/v1/UserPersonalization/SaveUserPersonalization": {
      "post": {
        "tags": ["UserPersonalization"],
        "summary": "Saves user personalization details and return result",
        "operationId": "UserPersonalization_SaveUserPersonalization",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "description": "Data to be saved",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.UserPersonalization.SavePersonalizationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.UserPersonalization.SavePersonalizationResponse"
            }
          }
        }
      }
    },
    "/api/rd/v1/UserPersonalization/SaveChangedPassword": {
      "post": {
        "tags": ["UserPersonalization"],
        "summary": "Saving user's new password",
        "operationId": "UserPersonalization_SaveChangedPassword",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "Save new password request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.UserPersonalization.SaveChangedPasswordRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.UserPersonalization.SaveChangedPasswordResponse"
            }
          }
        }
      }
    },
    "/api/rd/v1/UserPersonalization/SaveDetails": {
      "post": {
        "tags": ["UserPersonalization"],
        "summary": "Saves user personal details changes",
        "operationId": "UserPersonalization_SaveDetails",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "requrest",
            "in": "body",
            "description": "User details to be changed",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.UserPersonalization.SaveDetailsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.RD.UserPersonalization.SaveDetailsResponse"
            }
          }
        }
      }
    },
    "/api/rd/v1/UserPersonalization/ToggleResponsiveDesign": {
      "post": {
        "tags": ["UserPersonalization"],
        "summary": "Toggles the responsive design.",
        "operationId": "UserPersonalization_ToggleResponsiveDesign",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Webcom.API.StatusVm" }
          }
        }
      }
    },
    "/api/rd/v1/UserPersonalization/GetMarketPricebooks": {
      "get": {
        "tags": ["UserPersonalization"],
        "summary": "Gets visible pricebooks of the provided market",
        "operationId": "UserPersonalization_GetMarketPricebooks",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "marketId",
            "in": "query",
            "description": "Market id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Webcom.API.IdNamePair" }
            }
          }
        }
      }
    },
    "/api/rd/v1/UserPersonalization/GetFileResponseMessage": {
      "get": {
        "tags": ["UserPersonalization"],
        "summary": "Gets the file response message.",
        "operationId": "UserPersonalization_GetFileResponseMessage",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "fileName",
            "in": "query",
            "description": "Name of the file.",
            "required": true,
            "type": "string"
          },
          {
            "name": "content._buffer",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "content._origin",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._position",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._length",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._capacity",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._expandable",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content._writable",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content._exposable",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content._isOpen",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content.__identity",
            "in": "query",
            "required": false,
            "type": "object"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/api/scim/v1/Users/{uid}": {
      "get": {
        "tags": ["Users"],
        "summary": "Retrieves user depend on a provided user id",
        "operationId": "Users_RetreiveUser",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "description": "User unique identifier",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      },
      "put": {
        "tags": ["Users"],
        "summary": "Performs a full update. Consumers must retrieve the entire user (in JSON or XML format) and PUT \r\nthe desired modifications as the operation overwrites all previously stored data. \r\nSince this performs a full update, Consumers MAY send read-only attributes of the retrieved \r\nresource and Service Provider MUST ignore any read-only attributes that are present in \r\nthe payload of a PUT request. Unless otherwise specified a successful PUT operation returns a 200 OK \r\nresponse code and the entire Resource within the response body, \r\nenabling the Consumer to correlate the Consumer's and Provider's views of the updated Resource.",
        "operationId": "Users_PutUser",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "description": "User unique identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "user",
            "in": "body",
            "description": "User to be updated",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Webcom.Common.Provisioning.Entities.User"
            }
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      },
      "delete": {
        "tags": ["Users"],
        "summary": "Deletes user on service provider on consumers request \r\ndepend on a provided user's identifier in json format",
        "operationId": "Users_DeleteUser",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "description": "User unique identifier",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/api/scim/v1/Users": {
      "get": {
        "tags": ["Users"],
        "summary": "Retrieves list of the users that mathes requested criteria\r\nAvailable http parameters : \r\n    \"attributes\" - List of attributes to be returned\r\n    \"filter\" -\r\n        Filtering is OPTIONAL. Consumers may request a subset of Resources by specifying the 'filter' URL query parameter containing a filter expression.\r\n        The attribute and operator values must be identical for a match. he operators supported in the expression are listed in the following table :\r\n            eq -\tequal \t\r\n            co -\tcontains \t\r\n            sw -\tstarts with \r\n            pr -\tpresent (has value) \t\r\n            gt -\tgreater than \t\r\n            ge -\tgreater than or equal \t\r\n            lt -\tless than \t\r\n            le -\tless than or equal \r\n    \"sortBy\"&gt;The sortBy parameter specifies the attribute whose value SHALL be used to order the returned responses.\r\n    \"sortOrder\"&gt;The order in which the sortBy parameter is applied. \r\n    \"startIndex\"&gt;Pagination parameter. The 1-based index of the first search result.\r\n    \"count\"&gt;Pagination parameter. Non-negative Integer. Specifies the desired maximum number of search results per page; e.g., 10.",
        "operationId": "Users_ListUsers",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      },
      "post": {
        "tags": ["Users"],
        "summary": "Creates user depend on the data provided on the POST body request",
        "operationId": "Users_CreateUser",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "User to be created",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Webcom.Common.Provisioning.Entities.User"
            }
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/api/v1/admin/UsersPermissionGroups/GetPermission": {
      "get": {
        "tags": ["UsersPermissionGroups"],
        "summary": "Gets permission data",
        "operationId": "UsersPermissionGroups_GetPermission",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "itemId",
            "in": "query",
            "description": "Id of permission, 0 if new permission",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "actionType",
            "in": "query",
            "description": "Action for permisison, new or copy",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.Admin.UsersPermissionGroups.UsersPermissionGroupsResponse"
            }
          }
        }
      }
    },
    "/api/v1/admin/UsersPermissionGroups/SavePermission": {
      "post": {
        "tags": ["UsersPermissionGroups"],
        "summary": "Saves Users permission group",
        "operationId": "UsersPermissionGroups_SavePermission",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "permission",
            "in": "body",
            "description": "The permission request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Webcom.API.Admin.UsersPermissionGroups.UsersPermissionGroupsVm"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Webcom.API.StatusVm" }
          }
        }
      }
    },
    "/api/v1/admin/UsersPermissionGroups/GetUsers": {
      "get": {
        "tags": ["UsersPermissionGroups"],
        "summary": "Searches all users and returns users that contain specified query string",
        "operationId": "UsersPermissionGroups_GetUsers",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "description": "Search text",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Webcom.API.Admin.UsersPermissionGroups.UserPermissionUserVm"
              }
            }
          }
        }
      }
    },
    "/api/v1/admin/UsersPermissionGroups/GetUsersBelongingToGroup": {
      "get": {
        "tags": ["UsersPermissionGroups"],
        "summary": "Displays list of users that belong to specified permisison group. Does not include user total count.",
        "operationId": "UsersPermissionGroups_GetUsersBelongingToGroup",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "permissionId",
            "in": "query",
            "description": "Id of permission",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Current page for pagination",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "size",
            "in": "query",
            "description": "Page size for displaying",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.Admin.UsersPermissionGroups.UserListPaginationVM"
            }
          }
        }
      },
      "post": {
        "tags": ["UsersPermissionGroups"],
        "summary": "Displays list of users that belong to specified permisison group. Does not include user total count.",
        "operationId": "UsersPermissionGroups_GetUsersBelongingToGroup",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "permission",
            "in": "body",
            "description": "Object containing list of permissions, page and page size",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Webcom.API.Admin.UsersPermissionGroups.UserPermissionListVM"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.Admin.UsersPermissionGroups.UserListPaginationVM"
            }
          }
        }
      }
    },
    "/api/v1/admin/UsersPermissionGroups/GetUsersBelongingToGroupInitial": {
      "get": {
        "tags": ["UsersPermissionGroups"],
        "summary": "Displays list of users that belong to specified permisison group. Includes total count of users.",
        "operationId": "UsersPermissionGroups_GetUsersBelongingToGroupInitial",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "permissionId",
            "in": "query",
            "description": "Id of permission",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Current page for pagination",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "size",
            "in": "query",
            "description": "Page size for displaying",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.Admin.UsersPermissionGroups.UserListPaginationVM"
            }
          }
        }
      },
      "post": {
        "tags": ["UsersPermissionGroups"],
        "summary": "Displays list of users that belong to specified permisison group. Includes total count of users.",
        "operationId": "UsersPermissionGroups_GetUsersBelongingToGroupInitial",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "permission",
            "in": "body",
            "description": "Object containing list of permissions, page and page size",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Webcom.API.Admin.UsersPermissionGroups.UserPermissionListVM"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.Admin.UsersPermissionGroups.UserListPaginationVM"
            }
          }
        }
      }
    },
    "/api/v1/admin/UsersPermissionGroups/GenerateSecretKey": {
      "get": {
        "tags": ["UsersPermissionGroups"],
        "summary": "Generates the secret key suitable for SHA-256.",
        "operationId": "UsersPermissionGroups_GenerateSecretKey",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "string" } }
        }
      }
    },
    "/api/v1/admin/UsersPermissionGroups/GetFileResponseMessage": {
      "get": {
        "tags": ["UsersPermissionGroups"],
        "summary": "Gets the file response message.",
        "operationId": "UsersPermissionGroups_GetFileResponseMessage",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "fileName",
            "in": "query",
            "description": "Name of the file.",
            "required": true,
            "type": "string"
          },
          {
            "name": "content._buffer",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "content._origin",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._position",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._length",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._capacity",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._expandable",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content._writable",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content._exposable",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content._isOpen",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content.__identity",
            "in": "query",
            "required": false,
            "type": "object"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/setup/api/v1/admin/userTypes": {
      "get": {
        "tags": ["UserType"],
        "summary": "Gets filtered, paged and sorted user types with total number of user types.",
        "operationId": "UserType_GetUserTypes",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.Common.Models.PagedDataVM[Webcom.API.SetupSPA.Users.VM.UserTypeTableRowVM]"
            }
          }
        }
      },
      "post": {
        "tags": ["UserType"],
        "summary": "Saves the user type.",
        "operationId": "UserType_SaveUserType",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "userType",
            "in": "body",
            "description": "UserType VM",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Webcom.API.SetupSPA.Users.VM.UserTypeVM"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "format": "int32", "type": "integer" }
          }
        }
      }
    },
    "/setup/api/v1/admin/userTypes/{id}": {
      "get": {
        "tags": ["UserType"],
        "summary": "Gets user type by id",
        "operationId": "UserType_GetUserTypeById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.SetupSPA.Users.VM.UserTypeVM"
            }
          }
        }
      },
      "delete": {
        "tags": ["UserType"],
        "summary": "Deletes user type with provided id.",
        "operationId": "UserType_DeleteUserType",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User type id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": { "204": { "description": "No Content" } }
      }
    },
    "/setup/api/v1/admin/userTypes/CatalogueViews": {
      "get": {
        "tags": ["UserType"],
        "summary": "Gets catalogue views",
        "operationId": "UserType_GetObsoleteCatalogueViews",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Webcom.API.SetupSPA.Common.LookupVM"
              }
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/userTypes/SystemId": {
      "get": {
        "tags": ["UserType"],
        "summary": "Gets system id",
        "operationId": "UserType_GetSystemId",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "string" } }
        }
      }
    },
    "/setup/api/v1/admin/userTypes/ui/lookups/pages": {
      "get": {
        "tags": ["UserType"],
        "summary": "Gets page lookups for user type ui design",
        "operationId": "UserType_GetPageLookups",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Webcom.API.SetupSPA.Common.LookupVM"
              }
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/userTypes/ui/lookups/templates/{pageId}": {
      "get": {
        "tags": ["UserType"],
        "summary": "Gets template lookups for page",
        "operationId": "UserType_GetTemplateLookups",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "pageId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Webcom.API.SetupSPA.Common.LookupVM"
              }
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/userTypes/ui/lookups/customTemplates/{templateId}": {
      "get": {
        "tags": ["UserType"],
        "summary": "Gets custom template lookups for page",
        "operationId": "UserType_GetCustomTemplateLookups",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "templateId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Webcom.API.SetupSPA.Common.LookupVM"
              }
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/userTypes/ui/customTemplates/{userTypeId}": {
      "get": {
        "tags": ["UserType"],
        "summary": "Gets custom templates for data table",
        "operationId": "UserType_GetCustomTemplates",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "userTypeId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.Common.Models.PagedDataVM[Webcom.MVC.Customizations.CustomResponsiveTemplatesSummary]"
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/userTypes/ui/customTemplate/{customTemplateId}": {
      "get": {
        "tags": ["UserType"],
        "operationId": "UserType_GetCustomTemplate",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "customTemplateId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.MVC.Customizations.CustomResponsiveTemplatesSummary"
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/viewExportPII/users/{id}/quotes": {
      "get": {
        "tags": ["ViewExportPII"],
        "summary": "Gets paged quotes linked with user, with provided id",
        "operationId": "ViewExportPII_GetQuotesForUserPaged",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.Common.Models.PagedDataVM[Webcom.API.SetupSPA.ViewExportPII.VM.QuoteVM]"
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/viewExportPII/customers/{id}/quotes": {
      "get": {
        "tags": ["ViewExportPII"],
        "summary": "Gets quotes linked with customer, with provided id",
        "operationId": "ViewExportPII_GetQuotesForCustomer",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.Common.Models.PagedDataVM[Webcom.API.SetupSPA.ViewExportPII.VM.QuoteVM]"
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/viewExportPII/users/{id}/quoteCustomFields": {
      "get": {
        "tags": ["ViewExportPII"],
        "summary": "Gets paged attributes linked with user, with provided id",
        "operationId": "ViewExportPII_GetQuoteCustomFieldsForUser",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.Common.Models.PagedDataVM[Webcom.API.SetupSPA.ViewExportPII.VM.QuoteCustomFieldVM]"
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/viewExportPII/customers/{id}/quoteCustomFields": {
      "get": {
        "tags": ["ViewExportPII"],
        "summary": "Gets attributes linked with customer, with provided id",
        "operationId": "ViewExportPII_GetQuoteCustomFieldsForCustomer",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.Common.Models.PagedDataVM[Webcom.API.SetupSPA.ViewExportPII.VM.QuoteCustomFieldVM]"
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/viewExportPII/users/{id}/customTables": {
      "get": {
        "tags": ["ViewExportPII"],
        "summary": "",
        "operationId": "ViewExportPII_GetCustomTablesForUser",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.Common.Models.PagedDataVM[Webcom.API.SetupSPA.ViewExportPII.VM.CustomTableRecordVM]"
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/viewExportPII/customers/{id}/customTables": {
      "get": {
        "tags": ["ViewExportPII"],
        "summary": "",
        "operationId": "ViewExportPII_GetCustomTablesForCustomers",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.Common.Models.PagedDataVM[Webcom.API.SetupSPA.ViewExportPII.VM.CustomTableRecordVM]"
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/viewExportPII/users/{id}/quoteTables": {
      "get": {
        "tags": ["ViewExportPII"],
        "summary": "",
        "operationId": "ViewExportPII_GetQuoteTablesForUser",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.Common.Models.PagedDataVM[Webcom.API.SetupSPA.ViewExportPII.VM.QuoteTableVM]"
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/viewExportPII/customers/{id}/quoteTables": {
      "get": {
        "tags": ["ViewExportPII"],
        "summary": "",
        "operationId": "ViewExportPII_GetQuoteTablesForCustomer",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.Common.Models.PagedDataVM[Webcom.API.SetupSPA.ViewExportPII.VM.QuoteTableVM]"
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/viewExportPII/users/{id}/quoteItemCustomFieldTables": {
      "get": {
        "tags": ["ViewExportPII"],
        "summary": "",
        "operationId": "ViewExportPII_GetQuoteItemCustomFieldTablesForUser",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.Common.Models.PagedDataVM[Webcom.API.SetupSPA.ViewExportPII.VM.QuoteItemCustomFieldVM]"
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/viewExportPII/customers/{id}/quoteItemCustomFieldTables": {
      "get": {
        "tags": ["ViewExportPII"],
        "summary": "",
        "operationId": "ViewExportPII_GetQuoteItemCustomFieldTablesForCustomer",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.Common.Models.PagedDataVM[Webcom.API.SetupSPA.ViewExportPII.VM.QuoteItemCustomFieldVM]"
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/viewExportPII/users/{id}/userCustomFields": {
      "get": {
        "tags": ["ViewExportPII"],
        "summary": "User custom fields on another users",
        "operationId": "ViewExportPII_GetUserCustomFieldsForUser",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.Common.Models.PagedDataVM[Webcom.API.SetupSPA.ViewExportPII.VM.UserCustomFieldPIIVM]"
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/viewExportPII/customers/{id}/userCustomFields": {
      "get": {
        "tags": ["ViewExportPII"],
        "summary": "User custom fields for customer",
        "operationId": "ViewExportPII_GetUserCustomFieldsForCustomer",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.Common.Models.PagedDataVM[Webcom.API.SetupSPA.ViewExportPII.VM.UserCustomFieldPIIVM]"
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/viewExportPII/users/{id}/customerCustomFields": {
      "get": {
        "tags": ["ViewExportPII"],
        "summary": "Customer custom fields on another users",
        "operationId": "ViewExportPII_GetCustomerCustomFieldsForUser",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.Common.Models.PagedDataVM[Webcom.API.SetupSPA.ViewExportPII.VM.CustomerCustomFieldPIIVM]"
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/viewExportPII/customers/{id}/customerCustomFields": {
      "get": {
        "tags": ["ViewExportPII"],
        "summary": "User custom fields for customer",
        "operationId": "ViewExportPII_GetCustomerCustomFieldsForCustomer",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.Common.Models.PagedDataVM[Webcom.API.SetupSPA.ViewExportPII.VM.CustomerCustomFieldPIIVM]"
            }
          }
        }
      }
    },
    "/setup/api/v1/admin/viewExportPII/log": {
      "post": {
        "tags": ["ViewExportPII"],
        "summary": "Logs PII search in admin audit trail",
        "operationId": "ViewExportPII_LogSearch",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "person",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Webcom.API.SetupSPA.ViewExportPII.VM.SubjectBeingSearchedForVM"
            }
          }
        ],
        "responses": { "204": { "description": "No Content" } }
      }
    },
    "/setup/api/v1/admin/viewExportPII/exportData": {
      "post": {
        "tags": ["ViewExportPII"],
        "summary": "Gets file for download",
        "operationId": "ViewExportPII_ExportDataTables",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "exportInfo",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Webcom.API.SetupSPA.ViewExportPII.VM.ExportTablesInfoVM"
            }
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/api/v1/ViewProposal/ExecuteViewProposalAction": {
      "post": {
        "tags": ["ViewProposal"],
        "summary": "Executes the view proposal action.",
        "operationId": "ViewProposal_ExecuteViewProposalAction",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "proposalKeyUrl",
            "in": "query",
            "description": "The proposal key URL.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Webcom.API.StatusVm" }
          }
        }
      }
    },
    "/api/v1/ViewProposal/GetFileResponseMessage": {
      "get": {
        "tags": ["ViewProposal"],
        "summary": "Gets the file response message.",
        "operationId": "ViewProposal_GetFileResponseMessage",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "fileName",
            "in": "query",
            "description": "Name of the file.",
            "required": true,
            "type": "string"
          },
          {
            "name": "content._buffer",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "content._origin",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._position",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._length",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._capacity",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content._expandable",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content._writable",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content._exposable",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content._isOpen",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content.__identity",
            "in": "query",
            "required": false,
            "type": "object"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/setup/api/v1/admin/wsdlManagement": {
      "get": {
        "tags": ["WsdlManagement"],
        "summary": "Gets the paged records of mapped WSDL settings.",
        "operationId": "WsdlManagement_GetPagedRecords",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.Common.Models.PagedDataVM[Webcom.API.SetupSPA.Wsdl.WsdlSettingsVM]"
            }
          }
        }
      },
      "post": {
        "tags": ["WsdlManagement"],
        "summary": "Create new WSDL mapping, fails if there is already mapped url",
        "operationId": "WsdlManagement_Save",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "wsdlSettings",
            "in": "body",
            "description": "The WSDL settings.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Webcom.API.SetupSPA.Wsdl.WsdlSettingsVM"
            }
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "boolean" } }
        }
      }
    },
    "/setup/api/v1/admin/wsdlManagement/{id}": {
      "get": {
        "tags": ["WsdlManagement"],
        "summary": "Gets the mapped WSDL settings.",
        "operationId": "WsdlManagement_GetWsdlSettings",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.SetupSPA.Wsdl.WsdlSettingsVM"
            }
          }
        }
      },
      "delete": {
        "tags": ["WsdlManagement"],
        "summary": "Deletes WSDL settings by id.",
        "operationId": "WsdlManagement_Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "boolean" } }
        }
      }
    },
    "/setup/api/v1/admin/wsdlManagement/{id}/file": {
      "get": {
        "tags": ["WsdlManagement"],
        "summary": "Downloads WSDL file by settings id.",
        "operationId": "WsdlManagement_Download",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webcom.API.SetupSPA.WsdlManagement.VM.WsdlFileVM"
            }
          }
        }
      }
    },
    "/api/v1/admin/files/Xslt": {
      "get": {
        "tags": ["Xslt"],
        "operationId": "Xslt_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          { "name": "type", "in": "query", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "type": "array", "items": { "type": "string" } }
          }
        }
      },
      "put": {
        "tags": ["Xslt"],
        "summary": "Updates files",
        "operationId": "Xslt_Put",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      },
      "post": {
        "tags": ["Xslt"],
        "operationId": "Xslt_Post",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          { "name": "type", "in": "query", "required": true, "type": "string" }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/api/v1/admin/files/Xslt/{id}": {
      "get": {
        "tags": ["Xslt"],
        "operationId": "Xslt_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          { "name": "type", "in": "query", "required": true, "type": "string" },
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      },
      "put": {
        "tags": ["Xslt"],
        "summary": "Updates specified file",
        "operationId": "Xslt_Put",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Name of the file to update",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      },
      "delete": {
        "tags": ["Xslt"],
        "operationId": "Xslt_Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          { "name": "type", "in": "query", "required": true, "type": "string" },
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/setup/api/v1/admin/files/Xslt": {
      "get": {
        "tags": ["Xslt"],
        "operationId": "Xslt_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          { "name": "type", "in": "query", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "type": "array", "items": { "type": "string" } }
          }
        }
      },
      "put": {
        "tags": ["Xslt"],
        "summary": "Updates files",
        "operationId": "Xslt_Put",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      },
      "post": {
        "tags": ["Xslt"],
        "operationId": "Xslt_Post",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          { "name": "type", "in": "query", "required": true, "type": "string" }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/setup/api/v1/admin/files/Xslt/{id}": {
      "get": {
        "tags": ["Xslt"],
        "operationId": "Xslt_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          { "name": "type", "in": "query", "required": true, "type": "string" },
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      },
      "put": {
        "tags": ["Xslt"],
        "summary": "Updates specified file",
        "operationId": "Xslt_Put",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Name of the file to update",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      },
      "delete": {
        "tags": ["Xslt"],
        "operationId": "Xslt_Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          { "name": "type", "in": "query", "required": true, "type": "string" },
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    }
  },
  "definitions": {
    "System.IO.MemoryStream": {
      "type": "object",
      "properties": {
        "_buffer": { "format": "byte", "type": "string" },
        "_origin": { "format": "int32", "type": "integer" },
        "_position": { "format": "int32", "type": "integer" },
        "_length": { "format": "int32", "type": "integer" },
        "_capacity": { "format": "int32", "type": "integer" },
        "_expandable": { "type": "boolean" },
        "_writable": { "type": "boolean" },
        "_exposable": { "type": "boolean" },
        "_isOpen": { "type": "boolean" },
        "__identity": { "type": "object" }
      }
    },
    "Webcom.API.RD.ApprovalHistory.ApprovalHistoryResponse": {
      "description": "Class ApprovalHistoryResponse.",
      "type": "object",
      "properties": {
        "SortMethod": {
          "description": "Gets or sets the sort method.",
          "type": "string"
        },
        "CartCompositeNumber": {
          "description": "Gets or sets the cart composite number.",
          "type": "string"
        },
        "DelegatedApprovers": {
          "description": "Gets or sets the delegated approvers.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.RD.ApprovalHistory.DelegatedApproverVM"
          }
        },
        "ColumnsList": {
          "description": "Gets or sets the columns list.",
          "type": "array",
          "items": { "$ref": "#/definitions/Webcom.API.NameValuePair" }
        },
        "Responsibilities": {
          "description": "Gets or sets the responsibilities.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.RD.ApprovalHistory.ResponsibilityVM"
          }
        },
        "IsQuoteListAvailable": {
          "description": "Get or set if user has access to quote list",
          "type": "boolean"
        },
        "Pager": {
          "$ref": "#/definitions/Webcom.API.Common.Models.PagerVM",
          "description": "Gets or sets the pager."
        }
      }
    },
    "Webcom.API.RD.ApprovalHistory.DelegatedApproverVM": {
      "description": "Class DelegatedApproverVM.",
      "type": "object",
      "properties": {
        "ApproverName": {
          "description": "Gets or sets the name of the approver.",
          "type": "string"
        },
        "DelegatedApproverName": {
          "description": "Gets or sets the name of the delegated approver.",
          "type": "string"
        }
      }
    },
    "Webcom.API.NameValuePair": {
      "type": "object",
      "properties": {
        "Name": { "type": "string" },
        "Value": { "type": "string" }
      }
    },
    "Webcom.API.RD.ApprovalHistory.ResponsibilityVM": {
      "description": "Class ResponsibilityVM.",
      "type": "object",
      "properties": {
        "ApproverName": {
          "description": "Gets or sets the name of the approver.",
          "type": "string"
        },
        "SentBy": {
          "description": "Gets or sets the sent by.",
          "type": "string"
        },
        "DateSubmitted": {
          "description": "Gets or sets the date submitted.",
          "type": "string"
        },
        "DateResolved": {
          "description": "Gets or sets the date resolved.",
          "type": "string"
        },
        "ConditionName": {
          "description": "Gets or sets the name of the condition.",
          "type": "string"
        },
        "ViolationReason": {
          "description": "Gets or sets the violation reason.",
          "type": "string"
        },
        "Status": {
          "description": "Gets or sets the status.",
          "type": "string"
        },
        "ActualApprover": {
          "description": "Gets or sets the actual approver.",
          "type": "string"
        },
        "Comment": {
          "description": "Gets or sets the comment.",
          "type": "string"
        },
        "PendingApproverBlocked": {
          "description": "Gets or sets whether the approver for a pending rule is blocked from deletion",
          "type": "boolean"
        },
        "PendingSubmitterBlocked": {
          "description": "Gets or sets whether the submitter for a pending rule is blocked from deletion",
          "type": "boolean"
        }
      }
    },
    "Webcom.API.Common.Models.PagerVM": {
      "description": "Class PagerVM.",
      "type": "object",
      "properties": {
        "CurrentPage": {
          "format": "int32",
          "description": "Gets or sets the current page.",
          "type": "integer"
        },
        "ItemsPerPage": {
          "format": "int32",
          "description": "Gets or sets the items per page.",
          "type": "integer"
        },
        "TotalNumberOfItems": {
          "format": "int32",
          "description": "Gets or sets the total number of items.",
          "type": "integer"
        }
      }
    },
    "Webcom.API.RD.ApprovalHistory.ApprovalHistoryRequest": {
      "description": "Class FilterVM.",
      "type": "object",
      "properties": {
        "CurrentPage": {
          "format": "int32",
          "description": "Gets or sets the current page.",
          "type": "integer"
        },
        "ItemsPerPage": {
          "format": "int32",
          "description": "Gets or sets the items per page.",
          "type": "integer"
        },
        "SortMethod": {
          "description": "Gets or sets the sort method.",
          "type": "string"
        },
        "OrderByColumn": {
          "description": "Gets or sets the order by column.",
          "type": "string"
        },
        "Search": {
          "description": "Gets or sets the search.",
          "type": "object",
          "additionalProperties": { "type": "string" }
        }
      }
    },
    "Webcom.API.RD.Approvals.ApprovalResponse": {
      "description": "Class ApprovalResponse.",
      "type": "object",
      "properties": {
        "ErrorInfo": {
          "description": "Gets or sets the error information.",
          "type": "string"
        },
        "SuccessInfo": {
          "description": "Gets or sets the success information.",
          "type": "string"
        },
        "Message": {
          "description": "Gets or sets the message.",
          "type": "string"
        },
        "RedirectionUrl": {
          "description": "Gets or sets the redirection URL.",
          "type": "string"
        },
        "VisitorId": {
          "format": "int32",
          "description": "Gets or sets the visitor identifier.",
          "type": "integer"
        },
        "OwnerId": {
          "format": "int32",
          "description": "Gets or sets the owner identifier.",
          "type": "integer"
        },
        "IsUserDelegatedApprover": {
          "description": "Gets or sets a value indicating whether this instance is user delegated approver.",
          "type": "boolean"
        },
        "IsApprovalNeeded": {
          "description": "Gets or sets a value indicating whether this instance is approval needed.",
          "type": "boolean"
        },
        "AllowSubmittersComment": {
          "description": "Gets or sets a value indicating whether [allow submitters comment].",
          "type": "boolean"
        },
        "AreActionsVisible": {
          "description": "Gets or sets a value indicating whether [are actions visible].",
          "type": "boolean"
        },
        "IsQuoteApproved": {
          "description": "Gets or sets a value indicating whether this instance is quote approved.",
          "type": "boolean"
        },
        "IsQuoteRejected": {
          "description": "Gets or sets a value indicating whether this instance is quote rejected.",
          "type": "boolean"
        },
        "IsApproveDisabled": {
          "description": "Gets or sets a value indicating whether this instance is approve disabled.",
          "type": "boolean"
        },
        "ApproveActionName": {
          "description": "Gets or sets the name of the approve action.",
          "type": "string"
        },
        "ConditionsTitle": {
          "description": "Gets or sets the conditions title.",
          "type": "string"
        },
        "PendingResponsibilitiesTitle": {
          "description": "Gets or sets the pending responsibilities title.",
          "type": "string"
        },
        "ApprovalHistoryTitle": {
          "description": "Gets or sets the approval history title.",
          "type": "string"
        },
        "Conditions": {
          "description": "Gets or sets the conditions.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.RD.Approvals.ConditionVM"
          }
        },
        "ExpiredConditions": {
          "description": "Gets or sets the expired conditions.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.RD.Approvals.ConditionVM"
          }
        },
        "Actions": {
          "description": "Gets or sets the actions.",
          "type": "array",
          "items": { "$ref": "#/definitions/Webcom.API.IdNamePair" }
        },
        "Responsibilities": {
          "description": "Gets or sets the responsibilities.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.RD.Approvals.ResponsibilityVM"
          }
        },
        "PendingResponsibilities": {
          "description": "Gets or sets the pending responsibilities.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.RD.Approvals.ResponsibilityVM"
          }
        },
        "IsQuoteListAvailable": {
          "description": "Get or set if user has access to quote list",
          "type": "boolean"
        }
      }
    },
    "Webcom.API.RD.Approvals.ConditionVM": {
      "description": "Class ConditionVM.",
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "description": "Gets or sets the identifier.",
          "type": "integer"
        },
        "Name": { "description": "Gets or sets the name.", "type": "string" },
        "GroupId": {
          "format": "int32",
          "description": "Gets or sets the group identifier.",
          "type": "integer"
        },
        "CompanyId": {
          "format": "int32",
          "description": "Gets or sets the company identifier.",
          "type": "integer"
        },
        "ConditionDescription": {
          "description": "Gets or sets the condition description.",
          "type": "string"
        },
        "Comment": {
          "description": "Gets or sets the condition comment.",
          "type": "string"
        },
        "CanChooseApprover": {
          "format": "int32",
          "description": "Gets or sets the can choose approver.",
          "type": "integer"
        },
        "Approvers": {
          "description": "Gets or sets the approvers.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.RD.Approvals.ApproverVM"
          }
        }
      }
    },
    "Webcom.API.IdNamePair": {
      "type": "object",
      "properties": {
        "Id": { "format": "int32", "type": "integer" },
        "Name": { "type": "string" }
      }
    },
    "Webcom.API.RD.Approvals.ResponsibilityVM": {
      "description": "Class ResponsibilityVM.",
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "description": "Gets or sets the identifier.",
          "type": "integer"
        },
        "SubmitCounter": {
          "format": "int32",
          "description": "Gets or sets the submit counter.",
          "type": "integer"
        },
        "MaxSubmitCounter": {
          "format": "int32",
          "description": "Gets or sets the maximum submit counter.",
          "type": "integer"
        },
        "RespId": {
          "format": "int32",
          "description": "Gets or sets the resp identifier.",
          "type": "integer"
        },
        "ApproverId": {
          "format": "int32",
          "description": "Gets or sets the approver identifier.",
          "type": "integer"
        },
        "ApproverName": {
          "description": "Gets or sets the name of the approver.",
          "type": "string"
        },
        "SentBy": {
          "description": "Gets or sets the sent by.",
          "type": "string"
        },
        "DateSubmitted": {
          "description": "Gets or sets the date submitted.",
          "type": "string"
        },
        "ConditionName": {
          "description": "Gets or sets the name of the condition.",
          "type": "string"
        },
        "ConditionDescription": {
          "description": "Gets or sets the condition description.",
          "type": "string"
        },
        "Status": {
          "description": "Gets or sets the status.",
          "type": "string"
        },
        "StatusId": {
          "format": "int32",
          "description": "Gets or sets the status identifier.",
          "type": "integer"
        },
        "StatusImageClass": {
          "description": "Gets or sets the status image class.",
          "type": "string"
        },
        "Comment": {
          "description": "Gets or sets the comment.",
          "type": "string"
        },
        "PerformedBy": {
          "description": "Gets or sets the performed by.",
          "type": "string"
        },
        "ReplacedApproverId": {
          "format": "int32",
          "description": "Gets or sets the replaced approver identifier.",
          "type": "integer"
        },
        "ReCalculatedCondition": {
          "description": "Gets or sets the recalculation condition for parallel approval process.",
          "type": "string"
        },
        "SnapshotFormula": {
          "description": "Gets or sets the snapshot formula for parallel approval process.",
          "type": "string"
        },
        "OutOfOfficeApproverId": {
          "format": "int32",
          "description": "Gets or sets the out of office approver identifier.",
          "type": "integer"
        },
        "IsApproverBlocked": {
          "description": "Gets or sets whether the approver is blocked",
          "type": "boolean"
        },
        "IsSubmitterBlocked": {
          "description": "Gets or sets whether submitter is blocked",
          "type": "boolean"
        }
      }
    },
    "Webcom.API.RD.Approvals.ApproverVM": {
      "description": "Class ApproverVM.",
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "description": "Gets or sets the identifier.",
          "type": "integer"
        },
        "Name": { "description": "Gets or sets the name.", "type": "string" },
        "Country": {
          "description": "Gets or sets the country.",
          "type": "string"
        },
        "Username": {
          "description": "Gets or sets the username.",
          "type": "string"
        },
        "Address1": {
          "description": "Gets or sets the address1.",
          "type": "string"
        },
        "Address2": {
          "description": "Gets or sets the address2.",
          "type": "string"
        },
        "City": { "description": "Gets or sets the city.", "type": "string" },
        "Company": {
          "description": "Gets or sets the company.",
          "type": "string"
        },
        "Email": { "description": "Gets or sets the email.", "type": "string" },
        "Fax": { "description": "Gets or sets the fax.", "type": "string" },
        "FirstName": {
          "description": "Gets or sets the first name.",
          "type": "string"
        },
        "LastName": {
          "description": "Gets or sets the last name.",
          "type": "string"
        },
        "Phone": { "description": "Gets or sets the phone.", "type": "string" },
        "State": { "description": "Gets or sets the state.", "type": "string" },
        "IsBlocked": {
          "description": "Gets or sets whether user is blocked",
          "type": "boolean"
        }
      }
    },
    "Webcom.API.RD.Approvals.ApprovalsLandingResponse": {
      "description": "ApprovalsLandingResponse class",
      "type": "object",
      "properties": {
        "Message": {
          "description": "Gets or sets the message.",
          "type": "string"
        },
        "Success": {
          "description": "Gets or sets a value indicating whether this {Webcom.API.RD.Approvals.ApprovalsLandingResponse} is success.",
          "type": "boolean"
        }
      }
    },
    "Webcom.API.RD.Approvals.ExecuteActionRequest": {
      "description": "Class ExecuteActionVM.",
      "type": "object",
      "properties": {
        "ActionId": { "format": "int32", "type": "integer" },
        "CommentsForApprover": {
          "type": "object",
          "additionalProperties": { "type": "string" }
        },
        "Responses": {
          "type": "object",
          "additionalProperties": { "type": "string" }
        },
        "SelectedApprovers": {
          "type": "object",
          "additionalProperties": { "type": "string" }
        }
      }
    },
    "Webcom.API.Admin.Assets.AssetDefinitionResponse": {
      "description": "Asset definition",
      "type": "object",
      "properties": {
        "StandardFields": {
          "description": "Gets or sets the standard fields.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.Configurator.Core.AssetFieldDefinition"
          }
        },
        "SelectedFields": {
          "description": "Gets or sets the selected fields.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.Configurator.Core.AssetFieldDefinition"
          }
        },
        "ErrorInfo": {
          "description": "Gets or sets the error information.",
          "type": "string"
        },
        "SuccessInfo": {
          "description": "Gets or sets the success information.",
          "type": "string"
        }
      }
    },
    "Webcom.Configurator.Core.AssetFieldDefinition": {
      "type": "object",
      "properties": {
        "Name": { "type": "string" },
        "Label": { "type": "string" },
        "IsCustomField": { "type": "boolean" },
        "ShowInAssetTable": { "type": "boolean" }
      }
    },
    "Webcom.API.RD.Assets.AssetsResponse": {
      "description": "Assets Response",
      "type": "object",
      "properties": {
        "ColumnList": {
          "description": "Gets or sets the column list.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.RD.Assets.AssetsColumnListVM"
          }
        },
        "Assets": {
          "description": "Gets or sets the assets.",
          "type": "array",
          "items": { "$ref": "#/definitions/Webcom.API.RD.Assets.AssetVM" }
        },
        "Pager": {
          "$ref": "#/definitions/Webcom.API.Common.Models.PagerVM",
          "description": "Gets or sets the pager."
        }
      }
    },
    "Webcom.API.RD.Assets.AssetsColumnListVM": {
      "description": "Class AssetsColumnListVM",
      "type": "object",
      "properties": {
        "DisplayName": {
          "description": "Gets or sets the display name.",
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        },
        "FilterValue": {
          "description": "Gets or sets the filter value.",
          "type": "string"
        }
      }
    },
    "Webcom.API.RD.Assets.AssetVM": {
      "description": "Asset View Model",
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "description": "Gets or sets the identifier.",
          "type": "integer"
        },
        "Values": {
          "description": "Gets or sets the values.",
          "type": "array",
          "items": { "type": "string" }
        },
        "CanRenew": {
          "description": "Gets or sets a value indicating whether this instance can renew.",
          "type": "boolean"
        }
      }
    },
    "Webcom.API.RD.Assets.AssetsListRequest": {
      "description": "AssetsListRequest",
      "type": "object",
      "properties": {
        "CurrentPage": {
          "format": "int32",
          "description": "Gets or sets the current page.",
          "type": "integer"
        },
        "ItemsPerPage": {
          "format": "int32",
          "description": "Gets or sets the items per page.",
          "type": "integer"
        },
        "Search": {
          "description": "Gets the search.",
          "type": "object",
          "additionalProperties": { "type": "string" }
        },
        "SortColumn": {
          "description": "Gets or sets the sort column.",
          "type": "string"
        },
        "SortOrder": {
          "description": "Gets or sets the sort order.",
          "type": "string"
        },
        "PerformCount": {
          "description": "Gets or sets a value indicating whether [perform count].",
          "type": "boolean"
        }
      }
    },
    "Webcom.API.StatusVm": {
      "type": "object",
      "properties": {
        "Status": { "type": "string" },
        "ErrorMessage": { "type": "string" }
      }
    },
    "Webcom.API.RedirectResponse": {
      "description": "Class RedirectResponse.",
      "type": "object",
      "properties": {
        "RedirectionUrl": {
          "description": "Gets the redirection URL.",
          "type": "string",
          "readOnly": true
        },
        "Message": {
          "description": "Gets or sets the message.",
          "type": "string"
        }
      }
    },
    "Webcom.API.Common.Models.PagedDataVM[Webcom.API.SetupSPA.Attributes.VM.ContainerAttributeValueRowVM]": {
      "description": "Paged data for provided type",
      "type": "object",
      "properties": {
        "PagedRecords": {
          "description": "List of paged records",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.SetupSPA.Attributes.VM.ContainerAttributeValueRowVM"
          }
        },
        "TotalNumberOfRecords": {
          "format": "int32",
          "description": "Total number of records",
          "type": "integer"
        }
      }
    },
    "Webcom.API.SetupSPA.Attributes.VM.ContainerAttributeValueRowVM": {
      "description": "Container attribute value row VM",
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "description": "Attribute value id",
          "type": "integer"
        },
        "Value": { "description": "Attribute value", "type": "string" },
        "Display": {
          "description": "Attribute display value",
          "type": "string"
        }
      }
    },
    "Webcom.API.SetupSPA.Common.LookupVM[System.String]": {
      "description": "Lookup view model",
      "type": "object",
      "properties": { "Id": { "type": "string" }, "Text": { "type": "string" } }
    },
    "Webcom.API.SetupSPA.Attributes.VM.AttributeVM": {
      "type": "object",
      "properties": {
        "Id": { "format": "int32", "type": "integer" },
        "Name": { "type": "string" },
        "SystemId": { "type": "string" },
        "ExternalId": { "type": "string" },
        "TypeId": { "type": "string" },
        "IsProtected": { "type": "boolean" },
        "IsSensitive": { "type": "boolean" },
        "MeasurementId": { "type": "string" },
        "CustomTableId": { "format": "int32", "type": "integer" },
        "AutoCompleteWhereCondition": { "type": "string" },
        "ShowDistinctValues": { "type": "boolean" },
        "SearchableColumnsCsv": { "type": "string" },
        "DisplayColumnsCsv": { "type": "string" },
        "CustomTableColumns": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.SetupSPA.Attributes.VM.CustomTableColumnVM"
          }
        },
        "ContainerSettings": {
          "$ref": "#/definitions/Webcom.API.SetupSPA.Attributes.VM.ContainerSettingsVM"
        },
        "Values": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.SetupSPA.Attributes.VM.AttributeValueVM"
          }
        }
      }
    },
    "Webcom.API.SetupSPA.Attributes.VM.CustomTableColumnVM": {
      "type": "object",
      "properties": {
        "Id": { "format": "int32", "type": "integer" },
        "Name": { "type": "string" },
        "Display": { "type": "boolean" },
        "DisplayLabel": { "type": "string" },
        "IsSearchable": { "type": "boolean" },
        "UseColumnValueCode": { "type": "boolean" },
        "SearchableRank": { "format": "int32", "type": "integer" },
        "DisplayRank": { "format": "int32", "type": "integer" }
      }
    },
    "Webcom.API.SetupSPA.Attributes.VM.ContainerSettingsVM": {
      "type": "object",
      "properties": {
        "Options": {
          "$ref": "#/definitions/Webcom.API.SetupSPA.Attributes.VM.ContainerOptionsVM"
        },
        "Products": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.SetupSPA.Attributes.VM.ContainerProductVM"
          }
        },
        "Properties": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.SetupSPA.Attributes.VM.ContainerPropertyVM"
          }
        },
        "ValidationRules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.SetupSPA.Attributes.VM.ContainerValidationRuleVM"
          }
        },
        "Columns": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.SetupSPA.Attributes.VM.ContainerColumnVM"
          }
        },
        "PropagateAttributes": {
          "type": "array",
          "items": { "format": "int32", "type": "integer" }
        }
      }
    },
    "Webcom.API.SetupSPA.Attributes.VM.AttributeValueVM": {
      "type": "object",
      "properties": {
        "Id": { "format": "int32", "type": "integer" },
        "SystemId": { "type": "string" },
        "Display": { "type": "string" },
        "Rank": { "format": "int32", "type": "integer" },
        "Value": { "type": "string" },
        "RefProductId": { "format": "int32", "type": "integer" },
        "RefProductDisplayName": { "type": "string" }
      }
    },
    "Webcom.API.SetupSPA.Attributes.VM.ContainerOptionsVM": {
      "type": "object",
      "properties": {
        "AddNewOpensConfig": { "type": "boolean" },
        "CanAddNewRows": { "type": "boolean" },
        "CanCopyRows": { "type": "boolean" },
        "AllowMultipleCopy": { "type": "boolean" },
        "CanDeleteRows": { "type": "boolean" },
        "CanEditRows": { "type": "boolean" },
        "CanReorderRows": { "type": "boolean" },
        "EnabledPaging": { "type": "boolean" },
        "UseAnyProduct": { "type": "boolean" },
        "IsProductSearch": { "type": "boolean" },
        "Max": { "type": "string" },
        "Min": { "type": "string" },
        "PageSize": { "format": "int32", "type": "integer" }
      }
    },
    "Webcom.API.SetupSPA.Attributes.VM.ContainerProductVM": {
      "type": "object",
      "properties": {
        "Id": { "format": "int32", "type": "integer" },
        "AdminProductId": { "format": "int32", "type": "integer" },
        "IsActive": { "type": "boolean" },
        "IsSimple": { "type": "boolean" },
        "Max": { "type": "string" },
        "Min": { "type": "string" },
        "ProductName": { "type": "string" },
        "ProductSystemId": { "type": "string" },
        "ProductTypeName": { "type": "string" }
      }
    },
    "Webcom.API.SetupSPA.Attributes.VM.ContainerPropertyVM": {
      "type": "object",
      "properties": {
        "CalculationFormula": { "type": "string" },
        "CalculationRank": { "format": "int32", "type": "integer" },
        "DataType": {
          "format": "int32",
          "enum": [0, 1, 2, 3],
          "type": "integer"
        },
        "DecimalPlaces": { "format": "int32", "type": "integer" },
        "Name": { "type": "string" },
        "Rank": { "format": "int32", "type": "integer" },
        "IncludeInJson": { "type": "boolean" }
      }
    },
    "Webcom.API.SetupSPA.Attributes.VM.ContainerValidationRuleVM": {
      "type": "object",
      "properties": {
        "Message": { "type": "string" },
        "Name": { "type": "string" },
        "Rank": { "format": "int32", "type": "integer" },
        "ValidationFormula": { "type": "string" }
      }
    },
    "Webcom.API.SetupSPA.Attributes.VM.ContainerColumnVM": {
      "type": "object",
      "properties": {
        "Id": { "format": "int32", "type": "integer" },
        "AttribtueValues": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.SetupSPA.Attributes.VM.ContainerAttributeValueVM"
          }
        },
        "CalculationFormula": { "type": "string" },
        "CalculationRank": { "format": "int32", "type": "integer" },
        "ColumnId": { "format": "int32", "type": "integer" },
        "DataType": {
          "format": "int32",
          "enum": [0, 1, 2, 3],
          "type": "integer"
        },
        "DecimalPlaces": { "format": "int32", "type": "integer" },
        "DisplayRank": { "format": "int32", "type": "integer" },
        "DisplayType": {
          "format": "int32",
          "enum": [0, 1, 2, 3, 4, 5, 7, 9, 10, 11, 12],
          "type": "integer"
        },
        "FooterLabel": { "type": "string" },
        "HeaderLabel": { "type": "string" },
        "Height": { "format": "int32", "type": "integer" },
        "IsProductAttribute": { "type": "boolean" },
        "IsProductPartNumber": { "type": "boolean" },
        "IsAlwaysAvailableOnUI": { "type": "boolean" },
        "Name": { "type": "string" },
        "Permissions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.SetupSPA.Attributes.VM.ContainerPermissionVM"
          }
        },
        "RefAttribute": { "format": "int32", "type": "integer" },
        "SearchableColumnsCsv": { "type": "string" },
        "DisplayColumnsCsv": { "type": "string" },
        "TotalCalculationFormula": { "type": "string" },
        "TotalType": {
          "format": "int32",
          "enum": [0, 1, 2, 3],
          "type": "integer"
        },
        "Width": { "format": "int32", "type": "integer" },
        "IsAutocompleteCustomField": { "type": "boolean" },
        "IsAutocompleteQuoteTableCustomField": { "type": "boolean" },
        "IsProtected": { "type": "boolean" },
        "IsSensitive": { "type": "boolean" },
        "SelectedPermissions": {
          "$ref": "#/definitions/Webcom.API.SetupSPA.Users.SelectedPermissionsCollectionVM"
        },
        "DefaultUserTypePermission": {
          "format": "int32",
          "enum": [0, 1, 2, 3],
          "type": "integer"
        }
      }
    },
    "Webcom.API.SetupSPA.Attributes.VM.ContainerAttributeValueVM": {
      "type": "object",
      "properties": {
        "AttributeValueSystemId": { "type": "string" },
        "Code": { "type": "string" },
        "ColumnId": { "format": "int32", "type": "integer" },
        "Rank": { "format": "int32", "type": "integer" },
        "Display": { "type": "string" },
        "ValueId": { "format": "int32", "type": "integer" }
      }
    },
    "Webcom.API.SetupSPA.Attributes.VM.ContainerPermissionVM": {
      "type": "object",
      "properties": {
        "ColumnId": { "format": "int32", "type": "integer" },
        "UserTypeId": { "format": "int32", "type": "integer" },
        "Value": { "format": "int32", "enum": [0, 1, 2, 3], "type": "integer" }
      }
    },
    "Webcom.API.SetupSPA.Users.SelectedPermissionsCollectionVM": {
      "type": "object",
      "properties": {
        "Editable": {
          "$ref": "#/definitions/Webcom.API.SetupSPA.Users.SelectedPermissionVM"
        },
        "ReadOnly": {
          "$ref": "#/definitions/Webcom.API.SetupSPA.Users.SelectedPermissionVM"
        },
        "Required": {
          "$ref": "#/definitions/Webcom.API.SetupSPA.Users.SelectedPermissionVM"
        },
        "Hidden": {
          "$ref": "#/definitions/Webcom.API.SetupSPA.Users.SelectedPermissionVM"
        }
      }
    },
    "Webcom.API.SetupSPA.Users.SelectedPermissionVM": {
      "type": "object",
      "properties": {
        "Id": { "format": "int32", "type": "integer" },
        "Permissions": {
          "type": "array",
          "items": { "format": "int32", "type": "integer" }
        }
      }
    },
    "Webcom.API.Common.Models.PagedDataVM[Webcom.API.SetupSPA.Attributes.VM.AttributeRowVM]": {
      "description": "Paged data for provided type",
      "type": "object",
      "properties": {
        "PagedRecords": {
          "description": "List of paged records",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.SetupSPA.Attributes.VM.AttributeRowVM"
          }
        },
        "TotalNumberOfRecords": {
          "format": "int32",
          "description": "Total number of records",
          "type": "integer"
        }
      }
    },
    "Webcom.API.SetupSPA.Attributes.VM.AttributeRowVM": {
      "type": "object",
      "properties": {
        "Id": { "format": "int32", "type": "integer" },
        "Name": { "type": "string" },
        "Type": { "type": "string" },
        "ModifiedBy": { "type": "string" },
        "ModifiedDate": { "type": "string" },
        "NumValues": { "format": "int32", "type": "integer" },
        "IsProtected": { "type": "boolean" }
      }
    },
    "Webcom.API.SetupSPA.Common.LookupVM": {
      "type": "object",
      "properties": {
        "Id": { "format": "int32", "type": "integer" },
        "Text": { "type": "string" }
      }
    },
    "Webcom.API.Admin.AttributeTranslationImportExport.AttributeTranslationImportExportResponse": {
      "description": "Class AttributeTranslationImportExportResponse.",
      "type": "object",
      "properties": {
        "Languages": {
          "description": "Gets or sets the languages.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.Admin.AttributeTranslationImportExport.VM.LanguageVM"
          }
        },
        "AttributeTypes": {
          "description": "Gets or sets the attribute types.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.Admin.AttributeTranslationImportExport.VM.AttributeTypeVM"
          }
        }
      }
    },
    "Webcom.API.Admin.AttributeTranslationImportExport.VM.LanguageVM": {
      "description": "Class LanguageVM.",
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "description": "Gets or sets the identifier of language.",
          "type": "integer"
        },
        "Name": {
          "description": "Gets or sets the name of language.",
          "type": "string"
        }
      }
    },
    "Webcom.API.Admin.AttributeTranslationImportExport.VM.AttributeTypeVM": {
      "description": "Class AttributeTypeVM.",
      "type": "object",
      "properties": {
        "Type": {
          "description": "Gets or sets the type of attribute.",
          "type": "string"
        },
        "Label": {
          "description": "Gets or sets the label  of attribute.",
          "type": "string"
        }
      }
    },
    "Webcom.API.Common.Models.PagedDataVM[Webcom.API.SetupSPA.AuditTrail.VM.UserActionVM]": {
      "description": "Paged data for provided type",
      "type": "object",
      "properties": {
        "PagedRecords": {
          "description": "List of paged records",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.SetupSPA.AuditTrail.VM.UserActionVM"
          }
        },
        "TotalNumberOfRecords": {
          "format": "int32",
          "description": "Total number of records",
          "type": "integer"
        }
      }
    },
    "Webcom.API.SetupSPA.AuditTrail.VM.UserActionVM": {
      "type": "object",
      "properties": {
        "Quote": { "type": "string" },
        "QuoteRevision": { "type": "string" },
        "QuoteStatus": { "type": "string" },
        "QuoteItem": { "type": "string" },
        "Product": { "type": "string" },
        "Attribute": { "type": "string" },
        "Page": { "type": "string" },
        "Performer": { "type": "string" },
        "OldValue": { "type": "string" },
        "NewValue": { "type": "string" },
        "Date": { "type": "string" },
        "Action": { "type": "string" },
        "Field": { "type": "string" },
        "ChangeSetSystemId": { "type": "string" },
        "ChangeStep": { "format": "int32", "type": "integer" }
      }
    },
    "Webcom.API.Common.Models.PagedDataVM[Webcom.API.SetupSPA.AuditTrail.VM.AdminAuditTrailVM]": {
      "description": "Paged data for provided type",
      "type": "object",
      "properties": {
        "PagedRecords": {
          "description": "List of paged records",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.SetupSPA.AuditTrail.VM.AdminAuditTrailVM"
          }
        },
        "TotalNumberOfRecords": {
          "format": "int32",
          "description": "Total number of records",
          "type": "integer"
        }
      }
    },
    "Webcom.API.SetupSPA.AuditTrail.VM.AdminAuditTrailVM": {
      "type": "object",
      "properties": {
        "Entity": { "type": "string" },
        "EntityId": { "type": "string" },
        "Performer": { "type": "string" },
        "OldValue": { "type": "string" },
        "NewValue": { "type": "string" },
        "Date": { "type": "string" },
        "Action": { "type": "string" },
        "Field": { "type": "string" },
        "ChangeSetSystemId": { "type": "string" },
        "ChangeStep": { "format": "int32", "type": "integer" }
      }
    },
    "Webcom.API.Common.Models.PagedDataVM[Webcom.API.SetupSPA.AuditTrail.VM.ProductActionVM]": {
      "description": "Paged data for provided type",
      "type": "object",
      "properties": {
        "PagedRecords": {
          "description": "List of paged records",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.SetupSPA.AuditTrail.VM.ProductActionVM"
          }
        },
        "TotalNumberOfRecords": {
          "format": "int32",
          "description": "Total number of records",
          "type": "integer"
        }
      }
    },
    "Webcom.API.SetupSPA.AuditTrail.VM.ProductActionVM": {
      "type": "object",
      "properties": {
        "Product": { "type": "string" },
        "ProductSystemId": { "type": "string" },
        "Attribute": { "type": "string" },
        "AttributeSystemId": { "type": "string" },
        "AttributeValue": { "type": "string" },
        "RuleMessage": { "type": "string" },
        "Performer": { "type": "string" },
        "OldValue": { "type": "string" },
        "NewValue": { "type": "string" },
        "Date": { "type": "string" },
        "Action": { "type": "string" },
        "Field": { "type": "string" },
        "ChangeSetSystemId": { "type": "string" },
        "ChangeStep": { "format": "int32", "type": "integer" }
      }
    },
    "Webcom.API.Common.Models.PagedDataVM[Webcom.API.SetupSPA.AuditTrail.VM.PricebookActionVM]": {
      "description": "Paged data for provided type",
      "type": "object",
      "properties": {
        "PagedRecords": {
          "description": "List of paged records",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.SetupSPA.AuditTrail.VM.PricebookActionVM"
          }
        },
        "TotalNumberOfRecords": {
          "format": "int32",
          "description": "Total number of records",
          "type": "integer"
        }
      }
    },
    "Webcom.API.SetupSPA.AuditTrail.VM.PricebookActionVM": {
      "type": "object",
      "properties": {
        "Pricebook": { "type": "string" },
        "PartNumber": { "type": "string" },
        "Performer": { "type": "string" },
        "OldValue": { "type": "string" },
        "NewValue": { "type": "string" },
        "Date": { "type": "string" },
        "Action": { "type": "string" },
        "Field": { "type": "string" },
        "ChangeSetSystemId": { "type": "string" },
        "ChangeStep": { "format": "int32", "type": "integer" }
      }
    },
    "Webcom.API.Common.Models.PagedDataVM[Webcom.API.SetupSPA.AuditTrail.VM.CustomTableActionVM]": {
      "description": "Paged data for provided type",
      "type": "object",
      "properties": {
        "PagedRecords": {
          "description": "List of paged records",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.SetupSPA.AuditTrail.VM.CustomTableActionVM"
          }
        },
        "TotalNumberOfRecords": {
          "format": "int32",
          "description": "Total number of records",
          "type": "integer"
        }
      }
    },
    "Webcom.API.SetupSPA.AuditTrail.VM.CustomTableActionVM": {
      "type": "object",
      "properties": {
        "Entity": { "type": "string" },
        "EntityId": { "type": "string" },
        "Performer": { "type": "string" },
        "OldValue": { "type": "string" },
        "NewValue": { "type": "string" },
        "Date": { "type": "string" },
        "Action": { "type": "string" },
        "Field": { "type": "string" },
        "ChangeSetSystemId": { "type": "string" },
        "ChangeStep": { "format": "int32", "type": "integer" }
      }
    },
    "Webcom.API.Common.Models.PagedDataVM[Webcom.API.SetupSPA.AuditTrail.VM.AttributeActionVM]": {
      "description": "Paged data for provided type",
      "type": "object",
      "properties": {
        "PagedRecords": {
          "description": "List of paged records",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.SetupSPA.AuditTrail.VM.AttributeActionVM"
          }
        },
        "TotalNumberOfRecords": {
          "format": "int32",
          "description": "Total number of records",
          "type": "integer"
        }
      }
    },
    "Webcom.API.SetupSPA.AuditTrail.VM.AttributeActionVM": {
      "type": "object",
      "properties": {
        "Entity": { "type": "string" },
        "EntityId": { "type": "string" },
        "Performer": { "type": "string" },
        "OldValue": { "type": "string" },
        "NewValue": { "type": "string" },
        "Date": { "type": "string" },
        "Action": { "type": "string" },
        "Field": { "type": "string" },
        "ChangeSetSystemId": { "type": "string" },
        "ChangeStep": { "format": "int32", "type": "integer" }
      }
    },
    "Webcom.Common.Provisioning.Entities.ApplicationCredentials": {
      "description": "Class that holds connected application authentication credentials",
      "type": "object",
      "properties": {
        "ApplicationId": {
          "description": "Gets or sets application's unique identifier",
          "type": "string"
        },
        "ApplicationSecret": {
          "description": "Gets or sets application's secret",
          "type": "string"
        }
      }
    },
    "Webcom.Common.Provisioning.Entities.Bulk": {
      "description": "Bulk is OPTIONAL. The bulk operation enables Consumers to send a potentially large collection of Resource operations in a single request. \r\nThe body of a a bulk operation contains a set of HTTP Resource operations using one of the API supported HTTP methods; i.e., POST, PUT, PATCH or DELETE.",
      "type": "object",
      "properties": {}
    },
    "Webcom.API.Admin.BulkImportExport.UserExportRequest": {
      "description": "UserExportRequest class",
      "type": "object",
      "properties": {
        "FilterField": {
          "description": "Gets or sets the filter field.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.Admin.BulkImportExport.VM.UserExportVM"
          }
        }
      }
    },
    "Webcom.API.Admin.BulkImportExport.VM.UserExportVM": {
      "description": "UserExportVM class",
      "type": "object",
      "properties": {
        "FieldName": {
          "description": "Gets or sets the name of the field.",
          "type": "string"
        },
        "Operator": {
          "format": "int32",
          "description": "Gets or sets the operator.",
          "type": "integer"
        },
        "FieldValues": {
          "description": "Gets or sets the field values.",
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "Webcom.API.Admin.BulkImportExport.UserExportResponse": {
      "description": "UserExportResponse class",
      "type": "object",
      "properties": {
        "FilterFields": {
          "description": "Gets or sets the filter fields.",
          "type": "array",
          "items": { "type": "string" }
        },
        "Operators": {
          "description": "Gets or sets the operators.",
          "type": "array",
          "items": { "$ref": "#/definitions/Webcom.API.IdNamePair" }
        }
      }
    },
    "Webcom.API.Admin.BulkImportExport.BulkImportExportResponse": {
      "description": "Class BulkImportExportResponse",
      "type": "object",
      "properties": {
        "JobsList": {
          "description": "Gets or sets the list of jobs.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.Admin.BulkImportExport.VM.JobVM"
          }
        },
        "TotalItems": {
          "format": "int32",
          "description": "Gets or sets the total number of items.",
          "type": "integer"
        },
        "CurrentPage": {
          "format": "int32",
          "description": "Gets or sets the number of current page.",
          "type": "integer"
        },
        "ItemsPerPage": {
          "format": "int32",
          "description": "Gets or sets the number of items per page.",
          "type": "integer"
        },
        "MaxRequestLengthBytes": {
          "format": "int32",
          "description": "Gets or sets the max request length in bytes.",
          "type": "integer"
        },
        "Permissions": {
          "$ref": "#/definitions/Webcom.API.Admin.BulkImportExport.BulkImportExportPermission",
          "description": "User permissions for bulk export/import"
        }
      }
    },
    "Webcom.API.Admin.BulkImportExport.VM.JobVM": {
      "description": "Class JobVM",
      "type": "object",
      "properties": {
        "JobId": { "description": "Gets or sets job id.", "type": "string" },
        "Type": {
          "format": "int32",
          "description": "Gets or sets job type.",
          "enum": [0, 1, 2, 3, 4, 5, 6, 7, 8],
          "type": "integer"
        },
        "Status": {
          "format": "int32",
          "description": "Gets or sets job status.",
          "enum": [0, 1, 2, 3, 4, 5],
          "type": "integer"
        },
        "FileLink": {
          "description": "Gets or sets resulted file link.",
          "type": "string"
        },
        "CreatedOn": {
          "description": "Gets or sets the time when job is created.",
          "type": "string"
        },
        "RunnedByUserName": {
          "description": "Gets or sets who runned the job.",
          "type": "string"
        },
        "Progress": {
          "format": "int32",
          "description": "Gets or sets job progress.",
          "type": "integer"
        },
        "RequestEmail": {
          "description": "Gets or sets a value indicating whether email is requested.",
          "type": "boolean"
        },
        "ShowRequestEmailCheckbox": {
          "description": "Gets or sets a value indicating whether request email checkbox is shown.",
          "type": "boolean"
        }
      }
    },
    "Webcom.API.Admin.BulkImportExport.BulkImportExportPermission": {
      "description": "Permissions on Bulk Import Export Page",
      "type": "object",
      "properties": {
        "CanViewProducts": { "type": "boolean" },
        "ProductsReadOnly": { "type": "boolean" },
        "CanViewUsers": { "type": "boolean" },
        "UsersReadOnly": { "type": "boolean" }
      }
    },
    "Webcom.API.Admin.BulkImportExport.ProductExportRequest": {
      "description": "Class ProductExportRequest",
      "type": "object",
      "properties": {
        "Columns": {
          "description": "Gets or sets the columns that will be exported.",
          "type": "array",
          "items": { "type": "string" }
        },
        "AttributeIds": {
          "description": "Gets or sets the attribute ids.",
          "type": "array",
          "items": { "format": "int32", "type": "integer" }
        },
        "ProductNames": {
          "description": "Gets or sets the product names.",
          "type": "array",
          "items": { "type": "string" }
        },
        "ProductPartNumbers": {
          "description": "Gets or sets the product part numbers.",
          "type": "array",
          "items": { "type": "string" }
        },
        "ProductTypes": {
          "description": "Gets or sets the product types.",
          "type": "array",
          "items": { "type": "string" }
        },
        "Categories": {
          "description": "Gets or sets the categories.",
          "type": "array",
          "items": { "format": "int32", "type": "integer" }
        },
        "Permissions": {
          "description": "Gets or sets the permissions.",
          "type": "array",
          "items": { "type": "string" }
        },
        "ProductUI": {
          "format": "int32",
          "description": "Gets or sets the product type filter.",
          "enum": [1, 2, 3, 5, 6],
          "type": "integer"
        },
        "Active": {
          "description": "Gets or sets a value indicating whether product is active.",
          "type": "boolean"
        },
        "ProductAliasNames": {
          "description": "Gets or sets the product alias names.",
          "type": "array",
          "items": { "type": "string" }
        },
        "ProductSystemIds": {
          "description": "Gets or sets the product system ids.",
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "Webcom.API.Admin.BulkImportExport.VM.CategoryVM": {
      "description": "Class CategoryVM.",
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "description": "Gets or sets the identifier of category.",
          "type": "integer"
        },
        "Name": {
          "description": "Gets or sets the name of category.",
          "type": "string"
        },
        "Children": {
          "description": "Gets or sets the children categories.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.Admin.BulkImportExport.VM.CategoryVM"
          }
        }
      }
    },
    "Webcom.API.Admin.BulkImportExport.VM.PermissionVm": {
      "type": "object",
      "properties": {
        "PermissionId": { "format": "int32", "type": "integer" },
        "PermissionName": { "type": "string" },
        "PermissionType": { "format": "int32", "type": "integer" }
      }
    },
    "Webcom.API.RD.Cart.CustomFieldsResponse": {
      "description": "Class CustomFieldsResponse.",
      "type": "object",
      "properties": {
        "QuoteTables": {
          "description": "Gets or sets the quote tables.",
          "type": "array",
          "items": { "$ref": "#/definitions/Webcom.API.RD.Cart.QuoteTableVm" }
        },
        "WorkflowClientData": {
          "description": "Gets or sets the WorkflowContext client data that will be sent to the client.",
          "type": "object"
        },
        "TabsData": {
          "$ref": "#/definitions/Webcom.API.RD.Cart.CartTabsVM",
          "description": "Gets or sets the tabs data."
        },
        "SaveOnTabChange": {
          "description": "Gets or sets a value indicating whether [save on tab change].",
          "type": "boolean"
        },
        "IsInViewMode": {
          "description": "Gets or sets a value indicating whether this instance is in view mode.",
          "type": "boolean"
        },
        "ErrorMessage": {
          "description": "Gets or sets the error message.",
          "type": "string"
        },
        "CustomFields": {
          "description": "Gets or sets the custom fields.",
          "type": "array",
          "items": { "$ref": "#/definitions/Webcom.API.RD.Cart.CustomFieldVM" }
        },
        "CurrencySign": {
          "description": "Gets or sets the currency sign for current quote selected market.",
          "type": "string"
        },
        "IsSaveButtonAvailable": {
          "description": "Gets or sets a value indicating whether save button should be available",
          "type": "boolean"
        }
      }
    },
    "Webcom.API.RD.Cart.QuoteTableVm": {
      "description": "Represent quote table view model",
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "description": "Gets or sets the identifier.",
          "type": "integer"
        },
        "Name": { "description": "Gets or sets the name.", "type": "string" },
        "Label": { "description": "Gets or sets the label.", "type": "string" },
        "Rank": {
          "format": "int32",
          "description": "Gets or sets the rank.",
          "type": "integer"
        },
        "Rows": {
          "description": "Gets or sets the rows.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.RD.Cart.QuoteTableRowVm"
          }
        },
        "Columns": {
          "description": "Gets or sets the columns.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.RD.Cart.QuoteTableColumnVm"
          }
        },
        "Groups": {
          "description": "Gets or sets the columns.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.RD.Cart.QuoteTableGroupVm"
          }
        },
        "CanAddRow": {
          "description": "Gets or sets a value indicating whether this instance can add row.",
          "type": "boolean"
        },
        "CanCopyRow": {
          "description": "Gets or sets a value indicating whether this instance can copy row.",
          "type": "boolean"
        },
        "CanDeleteRow": {
          "description": "Gets or sets a value indicating whether this instance can delete row.",
          "type": "boolean"
        },
        "NumberOfRows": {
          "format": "int32",
          "description": "Gets or sets the number of rows.",
          "type": "integer"
        },
        "CurrentPage": {
          "format": "int32",
          "description": "Gets or sets the current page.",
          "type": "integer"
        },
        "PageSize": {
          "format": "int32",
          "description": "Gets or sets the size of the page.",
          "type": "integer"
        },
        "IsEditable": {
          "description": "Gets or sets a value indicating whether this table is editable.",
          "type": "boolean"
        },
        "CustomActions": {
          "description": "Gets or sets the custom actions.",
          "type": "array",
          "items": { "$ref": "#/definitions/Webcom.API.IdNamePair" }
        },
        "ViolatedValidations": {
          "description": "Gets or sets the list of violated validation messages",
          "type": "array",
          "items": { "type": "string" }
        },
        "EnableSearch": {
          "description": "Gets or sets a value indicating whether search is enabled for this table",
          "type": "boolean",
          "readOnly": true
        },
        "Filters": {
          "description": "List of filters applied to quote table\r\n<seealso cref=\"T:Webcom.API.RD.Cart.VM.QuoteTable.QuoteTableColumnFilterVM\" />",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.RD.Cart.VM.QuoteTable.QuoteTableColumnFilterVM"
          }
        },
        "HasValidationsFailed": {
          "description": "Gets or sets a HasValidationsFailed flag whether is executed validations for this table",
          "type": "boolean"
        },
        "AllowExcelUpload": {
          "description": "Get or sets if the table excel file upload is allowed.",
          "type": "boolean"
        }
      }
    },
    "Webcom.API.RD.Cart.CartTabsVM": {
      "description": "Class CartTabsVM.",
      "type": "object",
      "properties": {
        "Title": { "description": "Gets or sets the title.", "type": "string" },
        "CurrentTabName": {
          "description": "Gets or sets the name of the current tab.",
          "type": "string"
        },
        "Tabs": {
          "description": "Gets or sets the tabs.",
          "type": "array",
          "items": { "$ref": "#/definitions/Webcom.API.RD.Cart.CartTabItemVM" }
        },
        "CurrentTabId": {
          "format": "int32",
          "description": "Gets or sets the current tab identifier.",
          "type": "integer"
        },
        "ShowPredictive": {
          "description": "Determines whether Predictive feature should be displayed to the user",
          "type": "boolean"
        },
        "ClmProviderEnabled": {
          "description": "Determines whether Clm provider is enabled.",
          "type": "boolean"
        }
      }
    },
    "Webcom.API.RD.Cart.CustomFieldVM": {
      "description": "Class CustomFieldVM.",
      "type": "object",
      "properties": {
        "Content": {
          "description": "Gets or sets the content.",
          "type": "string"
        },
        "Editable": {
          "description": "Gets or sets a value indicating whether this {Webcom.API.RD.Cart.CustomFieldVM} is editable.",
          "type": "boolean"
        },
        "ContentId": {
          "format": "int32",
          "description": "Gets or sets identificator for autocomplete selected content.",
          "type": "integer"
        },
        "Placeholder": {
          "description": "Gets or sets autocomplete placeholder.",
          "type": "string"
        },
        "Error": { "description": "Gets or sets the error.", "type": "string" },
        "Id": {
          "format": "int32",
          "description": "Gets or sets the identifier.",
          "type": "integer"
        },
        "Name": { "description": "Gets or sets the name.", "type": "string" },
        "IsRequired": {
          "description": "Gets or sets a value indicating whether this instance is required.",
          "type": "boolean"
        },
        "Label": { "description": "Gets or sets the label.", "type": "string" },
        "TriggersSave": {
          "description": "Gets or sets a value indicating whether [triggers save].",
          "type": "boolean"
        },
        "Type": {
          "format": "int32",
          "description": "Gets or sets the type.",
          "enum": [0, 1, 2, 3, 4, 5],
          "type": "integer"
        },
        "StdAttrCode": {
          "format": "int32",
          "description": "Gets or sets standard attribute code of referencing attribute.",
          "type": "integer"
        },
        "Values": {
          "description": "Gets or sets the values.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.RD.Cart.CustomFieldValueVM"
          }
        },
        "Rank": {
          "format": "int32",
          "description": "Gets or sets the rank.",
          "type": "integer"
        }
      }
    },
    "Webcom.API.RD.Cart.QuoteTableRowVm": {
      "description": "Represents Cart table row view model",
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "description": "Gets or sets the identifier.",
          "type": "integer"
        },
        "Cells": {
          "description": "Gets or sets the cells.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.RD.Cart.QuoteTableRowCellVm"
          }
        }
      }
    },
    "Webcom.API.RD.Cart.QuoteTableColumnVm": {
      "description": "Repesents quote table column view model",
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "description": "Gets or sets the identifier.",
          "type": "integer"
        },
        "Name": { "description": "Gets or sets the name.", "type": "string" },
        "Rank": {
          "format": "int32",
          "description": "Gets or sets the rank.",
          "type": "integer"
        },
        "DataType": {
          "format": "int32",
          "description": "Gets or sets the type of the data.",
          "enum": [0, 1, 2, 3, 4, 5, 6],
          "type": "integer"
        },
        "AttibuteId": {
          "format": "int32",
          "description": "Gets or sets the attibute identifier.",
          "type": "integer"
        },
        "Values": {
          "description": "Gets or sets the values.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.RD.Cart.QuoteTableAttributeValueVm"
          }
        },
        "ColumnWidth": {
          "format": "double",
          "description": "Gets or sets column width in percent",
          "type": "number"
        },
        "DecimalPlaces": {
          "format": "int32",
          "description": "Gets or sets decimal places for column type number",
          "type": "integer"
        },
        "DecimalPlacesInCalculations": {
          "format": "int32",
          "description": "Gets or sets number of decimal places in calculations for columns type number",
          "type": "integer"
        },
        "MaxCharacters": {
          "format": "int32",
          "description": "Gets or sets max number of characters for the column",
          "type": "integer"
        },
        "RenderType": {
          "format": "int32",
          "description": "Gets or sets the render type for column that is type Attribute",
          "type": "integer"
        },
        "Label": { "description": "Gets or sets the label.", "type": "string" },
        "Validations": {
          "description": "Gets or sets validations.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.Configurator.Core.QuoteTables.QuoteTableColumnValidation"
          }
        }
      }
    },
    "Webcom.API.RD.Cart.QuoteTableGroupVm": {
      "description": "Repesents quote table column view model",
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "description": "Gets or sets the identifier.",
          "type": "integer"
        },
        "Name": { "description": "Gets or sets the name.", "type": "string" },
        "Label": { "description": "Gets or sets the name.", "type": "string" },
        "Rank": {
          "format": "int32",
          "description": "Gets or sets the rank.",
          "type": "integer"
        },
        "TableId": {
          "format": "int32",
          "description": "Gets or sets the rank.",
          "type": "integer"
        },
        "Columns": {
          "description": "Gets or sets the columns.",
          "type": "array",
          "items": { "format": "int32", "type": "integer" }
        },
        "Groups": {
          "description": "Gets or sets the columns.",
          "type": "array",
          "items": { "format": "int32", "type": "integer" }
        }
      }
    },
    "Webcom.API.RD.Cart.VM.QuoteTable.QuoteTableColumnFilterVM": {
      "description": "Quote table filter data",
      "type": "object",
      "properties": {
        "colId": {
          "format": "int32",
          "description": "Id of quote table column",
          "type": "integer"
        },
        "colValue": {
          "description": "Filter value that should be applied to column",
          "type": "string"
        }
      }
    },
    "Webcom.API.RD.Cart.CartTabItemVM": {
      "description": "Class CartTabItemVM.",
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "description": "Gets or sets the identifier.",
          "type": "integer"
        },
        "Name": { "description": "Gets or sets the name.", "type": "string" },
        "Url": { "description": "Gets or sets the URL.", "type": "string" },
        "Active": {
          "description": "Gets or sets a value indicating whether this {Webcom.API.RD.Cart.CartTabItemVM} is active.",
          "type": "boolean"
        }
      }
    },
    "Webcom.API.RD.Cart.CustomFieldValueVM": {
      "description": "Class CustomFieldValueVM.",
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "description": "Gets or sets the identifier.",
          "type": "integer"
        },
        "Value": { "description": "Gets or sets the value.", "type": "string" }
      }
    },
    "Webcom.API.RD.Cart.QuoteTableRowCellVm": {
      "description": "Represents Cart table row cell",
      "type": "object",
      "properties": {
        "ColumnId": {
          "format": "int32",
          "description": "Gets or sets the column identifier.",
          "type": "integer"
        },
        "Value": { "description": "Gets or sets the value.", "type": "object" },
        "AccessLevel": {
          "format": "int32",
          "description": "Gets or sets the access level.",
          "enum": [0, 1, 2],
          "type": "integer"
        },
        "IsEditable": {
          "description": "Gets or sets a value indicating whether this cell is editable.",
          "type": "boolean"
        },
        "IsHidden": {
          "description": "Gets or sets a value indicating whether this cell is hidden.",
          "type": "boolean"
        },
        "BrokenValidations": {
          "description": "Gets or sets broken validations for column cell",
          "type": "array",
          "items": { "format": "int32", "type": "integer" }
        },
        "ValidationMessage": {
          "description": "Gets or sets validation meesage for column cell",
          "type": "string"
        }
      }
    },
    "Webcom.API.RD.Cart.QuoteTableAttributeValueVm": {
      "description": "Represents attribute value which can be selected in quote table row cell",
      "type": "object",
      "properties": {
        "AttributeValue": {
          "description": "Gets or sets the attribute value.",
          "type": "string"
        },
        "DisplayValue": {
          "description": "Gets or sets the display value.",
          "type": "string"
        }
      }
    },
    "Webcom.Configurator.Core.QuoteTables.QuoteTableColumnValidation": {
      "type": "object",
      "properties": {
        "Id": { "format": "int32", "type": "integer" },
        "ColumnId": { "format": "int32", "type": "integer" },
        "ValidationType": {
          "format": "int32",
          "enum": [0, 1, 2, 3, 4],
          "type": "integer"
        },
        "ValidationCompareValue": { "type": "string" },
        "ValidationMessage": { "type": "string" },
        "Active": { "type": "boolean" },
        "EntityIdentificator": { "type": "string", "readOnly": true },
        "EntityName": { "type": "string", "readOnly": true }
      }
    },
    "Webcom.API.RD.Cart.CartResponse": {
      "description": "Class CartResponse.",
      "type": "object",
      "properties": {
        "WorkflowClientData": {
          "description": "Gets or sets the WorkflowContext client data that will be sent to the client.",
          "type": "object"
        },
        "ActiveEditableGroup": {
          "format": "int32",
          "description": "Gets or sets the active editable group.",
          "type": "integer"
        },
        "MainItemsNumber": {
          "format": "int32",
          "description": "Gets or sets the main items number.",
          "type": "integer"
        },
        "AdditionalDiscounts": {
          "description": "Gets or sets the additional discounts.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.RD.Cart.AdditionalDiscountVM"
          }
        },
        "AreAdditionalDiscountsEditable": {
          "description": "Gets or sets a value indicating whether [are additional discounts editable].",
          "type": "boolean"
        },
        "CanRedo": {
          "description": "Gets or sets a value indicating whether this instance can redo.",
          "type": "boolean"
        },
        "CanUndo": {
          "description": "Gets or sets a value indicating whether this instance can undo.",
          "type": "boolean"
        },
        "CartComment": {
          "$ref": "#/definitions/Webcom.API.RD.Cart.MathCellVM",
          "description": "Gets or sets the cart comment."
        },
        "CurrencySign": {
          "description": "Gets or sets the currency sign.",
          "type": "string"
        },
        "CustomFields": {
          "description": "Gets or sets the custom fields.",
          "type": "array",
          "items": { "$ref": "#/definitions/Webcom.API.RD.Cart.CustomFieldVM" }
        },
        "DiplayAddProdSection": {
          "description": "Gets or sets a value indicating whether [diplay add product section].",
          "type": "boolean"
        },
        "QuoteTables": {
          "description": "Gets or sets the cart tables.",
          "type": "array",
          "items": { "$ref": "#/definitions/Webcom.API.RD.Cart.QuoteTableVm" }
        },
        "Pricebooks": {
          "description": "Gets or sets pricebooks.",
          "type": "array",
          "items": { "$ref": "#/definitions/Webcom.API.IdNamePair" }
        },
        "DateModified": {
          "description": "Gets or sets the date modified.",
          "type": "string"
        },
        "HasUpdatableProducts": {
          "description": "Gets or sets a value indicating whether this instance has updatable products.",
          "type": "boolean"
        },
        "InitData": {
          "$ref": "#/definitions/Webcom.API.RD.Cart.CartInitDataVM",
          "description": "Gets or sets the initialize data."
        },
        "Items": {
          "description": "Gets or sets the items.",
          "type": "array",
          "items": { "$ref": "#/definitions/Webcom.API.RD.Cart.CartLineItemVM" }
        },
        "MarketId": {
          "format": "int32",
          "description": "Gets or sets the market identifier.",
          "type": "integer"
        },
        "PricebookId": {
          "format": "int32",
          "description": "Gets or sets the pricebook identifier.",
          "type": "integer"
        },
        "IsPricebookAvailable": {
          "description": "Gets or sets pricebook availability.",
          "type": "boolean"
        },
        "Message": {
          "$ref": "#/definitions/Webcom.API.RD.Cart.MessageVM",
          "description": "Gets or sets the message."
        },
        "MessageOnLanding": {
          "$ref": "#/definitions/Webcom.API.RD.Cart.MessageVM",
          "description": "Gets or sets the message on landing."
        },
        "ScriptingMessages": {
          "description": "Gets or sets the scripting messages.",
          "type": "array",
          "items": { "type": "string" }
        },
        "ErrorInfo": {
          "description": "Gets or sets the error information.",
          "type": "string"
        },
        "SuccessInfo": {
          "description": "Gets or sets the success information.",
          "type": "string"
        },
        "NonPrimaryActions": {
          "description": "Gets or sets the non primary actions.",
          "type": "array",
          "items": { "$ref": "#/definitions/Webcom.API.RD.Cart.CartActionVM" }
        },
        "OrderStatusId": {
          "format": "int32",
          "description": "Gets or sets the order status identifier.",
          "type": "integer"
        },
        "OrderStatuses": {
          "description": "Gets or sets the order statuses.",
          "type": "array",
          "items": { "$ref": "#/definitions/Webcom.API.IdNamePair" }
        },
        "PrimaryActions": {
          "description": "Gets or sets the primary actions.",
          "type": "array",
          "items": { "$ref": "#/definitions/Webcom.API.RD.Cart.CartActionVM" }
        },
        "ProductTypes": {
          "description": "Gets or sets the product types.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.RD.Cart.ProductTypeRowVM"
          }
        },
        "ProductTypesTotal": {
          "$ref": "#/definitions/Webcom.API.RD.Cart.RowVM",
          "description": "Gets or sets the product types total."
        },
        "ShippingOptionId": {
          "format": "int32",
          "description": "Gets or sets the shipping option identifier.",
          "type": "integer"
        },
        "SubTotalsWithDiscounts": {
          "description": "Gets or sets the sub totals with discounts.",
          "type": "array",
          "items": { "$ref": "#/definitions/Webcom.API.RD.Cart.RowVM" }
        },
        "TotalShippingCost": {
          "$ref": "#/definitions/Webcom.API.RD.Cart.EditableCellVM",
          "description": "Gets or sets the total shipping cost."
        },
        "TotalStateTax": {
          "$ref": "#/definitions/Webcom.API.RD.Cart.MathCellVM",
          "description": "Gets or sets the total state tax."
        },
        "MRCTotalStateTax": {
          "$ref": "#/definitions/Webcom.API.RD.Cart.MathCellVM",
          "description": "Gets or sets the MRC total state tax."
        },
        "NRCTotalStateTax": {
          "$ref": "#/definitions/Webcom.API.RD.Cart.MathCellVM",
          "description": "Gets or sets the NRC total state tax."
        },
        "TotalVat": {
          "$ref": "#/definitions/Webcom.API.RD.Cart.MathCellVM",
          "description": "Gets or sets the total vat."
        },
        "MRCTotalVat": {
          "$ref": "#/definitions/Webcom.API.RD.Cart.MathCellVM",
          "description": "Gets or sets the MRC total vat."
        },
        "NRCTotalVat": {
          "$ref": "#/definitions/Webcom.API.RD.Cart.MathCellVM",
          "description": "Gets or sets the NRC total vat."
        },
        "Totals": {
          "description": "Gets or sets the totals.",
          "type": "array",
          "items": { "$ref": "#/definitions/Webcom.API.RD.Cart.RowVM" }
        },
        "Approval": {
          "$ref": "#/definitions/Webcom.API.RD.Cart.ApprovalVM",
          "description": "Gets or sets the approval."
        },
        "TotalAmount": {
          "$ref": "#/definitions/Webcom.API.RD.Cart.MathCellVM",
          "description": "Gets or sets the total amount."
        },
        "MRCTotalAmount": {
          "$ref": "#/definitions/Webcom.API.RD.Cart.MathCellVM",
          "description": "Gets or sets the MRC total amount."
        },
        "PromotionsCartInfo": {
          "$ref": "#/definitions/Webcom.API.RD.Cart.PromotionsCartInfoVM",
          "description": "Gets or sets the promotions cart information."
        },
        "TotalItems": {
          "format": "int32",
          "description": "Gets or sets the total number of all items in cart.",
          "type": "integer"
        },
        "CartItemToHighlight": {
          "format": "int32",
          "description": "Gets or sets the cart item to highlight.",
          "type": "integer"
        },
        "TabsData": {
          "$ref": "#/definitions/Webcom.API.RD.Cart.CartTabsVM",
          "description": "Gets or sets the tabs data."
        },
        "InvalidAutocompleteEntities": {
          "$ref": "#/definitions/Webcom.API.RD.Cart.InvalidAutocompleteEntitiesVM",
          "description": "Gets or sets invalid autocomplete entities to display as a warning message on the cart page"
        },
        "EffectiveDate": {
          "description": "Gets or sets the effective date.",
          "type": "string"
        },
        "VisitorId": {
          "format": "int32",
          "description": "Gets or sets the visitor id.",
          "type": "integer"
        },
        "ExternalId": { "description": "Gets externalid", "type": "string" }
      }
    },
    "Webcom.API.RD.Cart.AdditionalDiscountVM": {
      "description": "Class AdditionalDiscountVM.",
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "description": "Gets or sets the identifier.",
          "type": "integer"
        },
        "Values": {
          "description": "Gets or sets the values.",
          "type": "array",
          "items": { "type": "object" }
        }
      }
    },
    "Webcom.API.RD.Cart.MathCellVM": {
      "description": "Class MathCellVM.",
      "type": "object",
      "properties": {
        "EditableGroup": {
          "format": "int32",
          "description": "Gets or sets the editable group.",
          "type": "integer"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        },
        "IsMultiline": {
          "description": "Gets or sets a value indicating whether this instance is multiline.",
          "type": "boolean"
        },
        "IsText": {
          "description": "Gets or sets a value indicating whether this instance is text.",
          "type": "boolean"
        },
        "IsDate": {
          "description": "Gets or sets a value indicating whether this instance is date.",
          "type": "boolean"
        },
        "IsAttribute": {
          "description": "Gets or sets a value indicating whether this instance is attribute.",
          "type": "boolean"
        },
        "Value": { "description": "Gets or sets the value.", "type": "string" },
        "ComputedValue": {
          "description": "Gets or sets the computed value.",
          "type": "string"
        },
        "StdAttrCode": {
          "format": "int32",
          "description": "Gets or sets standard attribute code for the reference attribute used in cell.",
          "type": "integer"
        },
        "ValueId": {
          "format": "int32",
          "description": "Gets or sets attribute value id used in attribute cell.",
          "type": "integer"
        },
        "Placeholder": {
          "description": "Gets or sets default placeholder for autocomplete attribute cell.",
          "type": "string"
        },
        "CellType": {
          "format": "int32",
          "description": "Gets or sets the type of the cell.",
          "enum": [0, 1, 2, 3, 4, 5, 6],
          "type": "integer"
        },
        "ValueType": {
          "format": "int32",
          "description": "Gets or sets the type of the value.",
          "enum": [0, 1, 2],
          "type": "integer"
        }
      }
    },
    "Webcom.API.RD.Cart.CartInitDataVM": {
      "description": "Class CartInitDataVM.",
      "type": "object",
      "properties": {
        "FavoritesEnabled": {
          "description": "Gets or sets a value indicating whether favorites are enabled.",
          "type": "boolean"
        },
        "AllowToShareWithCompanyUsers": {
          "description": "Gets or sets the allow to share with company users.",
          "type": "boolean"
        },
        "AllowToShareWithAllUsers": {
          "description": "Gets or sets the allow to share with all users.",
          "type": "boolean"
        },
        "OwnerId": {
          "format": "int32",
          "description": "Gets or sets the owner identifier.",
          "type": "integer"
        },
        "CartId": {
          "format": "int32",
          "description": "Gets or sets the cart identifier.",
          "type": "integer"
        },
        "OwnerIdCrypted": {
          "description": "Gets or sets the owner identifier crypted.",
          "type": "string"
        },
        "CartIdCrypted": {
          "description": "Gets or sets the cart identifier crypted.",
          "type": "string"
        },
        "TabsData": {
          "$ref": "#/definitions/Webcom.API.RD.Cart.CartTabsVM",
          "description": "Gets or sets the tabs data."
        },
        "CanReorderLineItems": {
          "description": "Gets or sets a value indicating whether this instance can reorder line items.",
          "type": "boolean"
        },
        "CanReorderMainItems": {
          "description": "Gets or sets a value indicating whether this instance can reorder main items.",
          "type": "boolean"
        },
        "PartNumberEditableGroup": {
          "format": "int32",
          "description": "Gets or sets the part number editable group.",
          "type": "integer"
        },
        "CartCompositeNumber": {
          "description": "Gets or sets the cart composite number.",
          "type": "string"
        },
        "BillToCustomerCompany": {
          "description": "Gets or sets the bill to customer company.",
          "type": "string"
        },
        "DateCreated": {
          "description": "Gets or sets the date created.",
          "type": "string"
        },
        "OrderId": {
          "description": "Gets or sets order ID.",
          "type": "string"
        },
        "ExternalId": {
          "description": "Gets or sets ExternalId",
          "type": "string"
        },
        "DisplayImagesForCartActions": {
          "description": "Gets or sets a value indicating whether [display images for cart actions].",
          "type": "boolean"
        },
        "ItemColumns": {
          "description": "Gets or sets the item columns.",
          "type": "array",
          "items": { "$ref": "#/definitions/Webcom.API.RD.Cart.CellColumnVM" }
        },
        "Markets": {
          "description": "Gets or sets the markets.",
          "type": "array",
          "items": { "$ref": "#/definitions/Webcom.API.IdNamePair" }
        },
        "ProductTypeColumns": {
          "description": "Gets or sets the product type columns.",
          "type": "array",
          "items": { "$ref": "#/definitions/Webcom.API.RD.Cart.CellColumnVM" }
        },
        "RevisionNumber": {
          "description": "Gets or sets the revision number.",
          "type": "string"
        },
        "ShippingOptions": {
          "description": "Gets or sets the shipping options.",
          "type": "array",
          "items": { "$ref": "#/definitions/Webcom.API.IdNamePair" }
        },
        "SubTotalWithDiscountColumns": {
          "description": "Gets or sets the sub total with discount columns.",
          "type": "array",
          "items": { "$ref": "#/definitions/Webcom.API.RD.Cart.CellColumnVM" }
        },
        "TotalColumns": {
          "description": "Gets or sets the total columns.",
          "type": "array",
          "items": { "$ref": "#/definitions/Webcom.API.RD.Cart.CellColumnVM" }
        },
        "UseRecurringPriceAndCost": {
          "description": "Gets or sets a value indicating whether [use recurring price and cost].",
          "type": "boolean"
        },
        "PromptForUpgradeMessage": {
          "description": "Gets or sets the prompt for upgrade message.",
          "type": "string"
        },
        "CartUsage": {
          "description": "Gets or sets the cart usage.",
          "type": "array",
          "items": { "$ref": "#/definitions/Webcom.API.RD.Cart.CartUsageVM" }
        },
        "Proposal": {
          "$ref": "#/definitions/Webcom.API.RD.Cart.ProposalVM",
          "description": "Gets or sets the proposal."
        },
        "Sections": {
          "description": "Gets or sets the sections.",
          "type": "array",
          "items": { "type": "string" }
        },
        "ExpandItemsByDefault": {
          "description": "Gets or sets a value indicating whether Cart Items should be expanded by default.",
          "type": "boolean"
        },
        "OpportunityId": {
          "description": "Gets the opportunity identifier. In order to link CPQ quote and opportunity use LinkToOpportunity method.",
          "type": "string"
        },
        "ShowQuickConfig": {
          "description": "Gets or sets a value indicating whether [show quick configuration].",
          "type": "boolean"
        },
        "AreVariantAndAlternativeAllowd": {
          "description": "Gets or sets a value indicating whether main items support alternative and variant item type.",
          "type": "boolean"
        },
        "AreItemsPaged": {
          "description": "Gets or sets a value indicating whether Cart items are paged.",
          "type": "boolean"
        },
        "ItemsPageSize": {
          "format": "int32",
          "description": "Gets or sets the items page size.",
          "type": "integer"
        },
        "IsItemTypeEditable": {
          "description": "Gets or sets a value indicating whether item type is editable",
          "type": "boolean"
        }
      }
    },
    "Webcom.API.RD.Cart.CartLineItemVM": {
      "description": "Class CartLineItemVM.",
      "type": "object",
      "properties": {
        "CartItemGuid": {
          "description": "Gets or sets the cart item unique identifier.",
          "type": "string"
        },
        "BaseCartItem": {
          "format": "int32",
          "description": "Gets or sets the base cart item.",
          "type": "integer"
        },
        "Id": { "format": "int32", "type": "integer" },
        "CartItem": {
          "format": "int32",
          "description": "Gets or sets the cart item.",
          "type": "integer"
        },
        "IsSapItem": {
          "description": "Gets or sets IsSapProduct value.",
          "type": "boolean"
        },
        "ItemNumber": {
          "description": "Gets or sets the item number.",
          "type": "string"
        },
        "ItemType": {
          "format": "int32",
          "description": "Gets or sets the type of the item.",
          "type": "integer"
        },
        "Values": {
          "description": "Gets or sets the values.",
          "type": "array",
          "items": { "type": "object" }
        },
        "HiddenValues": {
          "description": "Gets or sets the hidden values.",
          "type": "array",
          "items": { "type": "object" }
        },
        "ItemDescription": {
          "$ref": "#/definitions/Webcom.API.RD.Cart.CartItemDescriptionVM",
          "description": "Gets or sets the item description."
        },
        "ProductTypeName": {
          "description": "Gets or sets the name of the product type.",
          "type": "string"
        },
        "UPC": {
          "description": "Gets or sets the product UPC information.",
          "type": "string"
        },
        "IsExpanded": {
          "description": "Gets or sets a value indicating whether item is expanded.",
          "type": "boolean"
        },
        "IsInSystem": {
          "description": "Gets or sets a value indicating whether line is in system.",
          "type": "boolean"
        },
        "IsFirstInSystem": {
          "description": "Gets or sets a value indicating whether line is first in system.",
          "type": "boolean"
        },
        "IsLastInSystem": {
          "description": "Gets or sets a value indicating whether line is last in system.",
          "type": "boolean"
        },
        "NestingLevel": {
          "format": "int32",
          "description": "Gets or sets the nesting level of the line (0 is root).",
          "type": "integer"
        },
        "HasChildren": {
          "description": "Gets or sets a value indicating whether line has child lines.",
          "type": "boolean"
        },
        "Section": {
          "description": "Gets or sets a section path for item.",
          "type": "string"
        },
        "IsRestricted": {
          "description": "Gets or sets a value indicating whether this instance is restricted.",
          "type": "boolean"
        }
      }
    },
    "Webcom.API.RD.Cart.MessageVM": {
      "description": "Class MessageVM.",
      "type": "object",
      "properties": {
        "Items": {
          "description": "Gets or sets the items.",
          "type": "array",
          "items": { "$ref": "#/definitions/Webcom.API.RD.Cart.MessageItemVM" }
        },
        "Title": { "description": "Gets or sets the title.", "type": "string" }
      }
    },
    "Webcom.API.RD.Cart.CartActionVM": {
      "description": "Class CartActionVM.",
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "description": "Gets or sets the identifier.",
          "type": "integer"
        },
        "ImageUrl": {
          "description": "Gets or sets the image URL.",
          "type": "string"
        },
        "Name": { "description": "Gets or sets the name.", "type": "string" },
        "PropmptsUserForVersionUpdate": {
          "description": "Gets or sets a value indicating whether [propmpts user for version update].",
          "type": "boolean"
        },
        "SavesChanges": {
          "description": "Gets or sets a value indicating whether [saves changes].",
          "type": "boolean"
        }
      }
    },
    "Webcom.API.RD.Cart.ProductTypeRowVM": {
      "description": "Class ProductTypeRowVM.",
      "type": "object",
      "properties": {
        "ProductTypeName": {
          "description": "Gets or sets the name of the product type.",
          "type": "string"
        },
        "Values": {
          "description": "Gets or sets the values.",
          "type": "array",
          "items": { "type": "object" }
        }
      }
    },
    "Webcom.API.RD.Cart.RowVM": {
      "description": "Class RowVM.",
      "type": "object",
      "properties": {
        "Values": {
          "description": "Gets or sets the values.",
          "type": "array",
          "items": { "type": "object" }
        }
      }
    },
    "Webcom.API.RD.Cart.EditableCellVM": {
      "description": "Class EditableCellVM.",
      "type": "object",
      "properties": {
        "Editable": {
          "description": "Gets or sets a value indicating whether this {Webcom.API.RD.Cart.EditableCellVM} is editable.",
          "type": "boolean"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        },
        "Value": { "description": "Gets or sets the value.", "type": "string" },
        "CellType": {
          "format": "int32",
          "description": "Gets or sets the type of the cell.",
          "enum": [0, 1, 2, 3, 4, 5, 6],
          "type": "integer"
        },
        "ValueType": {
          "format": "int32",
          "description": "Gets or sets the type of the value.",
          "enum": [0, 1, 2],
          "type": "integer"
        }
      }
    },
    "Webcom.API.RD.Cart.ApprovalVM": {
      "description": "Class ApprovalVM.",
      "type": "object",
      "properties": {
        "ErrorMessage": {
          "description": "Gets or sets the error message.",
          "type": "string"
        },
        "Conditions": {
          "description": "Gets or sets the conditions.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.RD.Cart.ApprovalConditionVM"
          }
        }
      }
    },
    "Webcom.API.RD.Cart.PromotionsCartInfoVM": {
      "description": "PromotionsCartInfo ViewModel",
      "type": "object",
      "properties": {
        "ShouldShowPromotionsInfo": {
          "description": "Gets or sets a value indicating whether [should show promotions information].",
          "type": "boolean"
        },
        "HasSomeUnappliedSuggest": {
          "description": "Gets or sets a value indicating whether this instance has some unapplied suggest.",
          "type": "boolean"
        },
        "HasSomeAppliedSuggest": {
          "description": "Gets or sets a value indicating whether this instance has some applied suggest.",
          "type": "boolean"
        },
        "TopDescription": {
          "description": "Gets or sets the top description.",
          "type": "string"
        }
      }
    },
    "Webcom.API.RD.Cart.InvalidAutocompleteEntitiesVM": {
      "type": "object",
      "properties": {
        "InvalidItemCustomFields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.RD.Cart.InvalidAutocompleteCartItemEntityVM"
          }
        },
        "InvalidQuoteCustomFields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.RD.Cart.InvalidAutocompleteCartEntityVM"
          }
        },
        "InvalidConfigurationEntities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.RD.Cart.InvalidAutocompleteConfigurationEntityVM"
          }
        },
        "IsEmpty": { "type": "boolean" }
      }
    },
    "Webcom.API.RD.Cart.CellColumnVM": {
      "description": "Class CellColumnVM.",
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "description": "Gets or sets the identifier.",
          "type": "integer"
        },
        "Name": {
          "description": "Gets or sets the column name.",
          "type": "string"
        },
        "HeaderLabel": {
          "description": "Gets or sets the header label.",
          "type": "string"
        },
        "IsPrice": {
          "description": "Gets or sets a value indicating whether this instance is price.",
          "type": "boolean"
        },
        "Type": {
          "format": "int32",
          "description": "Gets or sets a value indicating whether this instance is standard column",
          "enum": [1, 2, 3, 4, 5],
          "type": "integer"
        }
      }
    },
    "Webcom.API.RD.Cart.CartUsageVM": {
      "description": "Class CartUsageVM.",
      "type": "object",
      "properties": {
        "User": { "description": "Gets or sets the user.", "type": "string" },
        "OpenedMinutesAgo": {
          "format": "int32",
          "description": "Gets or sets the opened minutes ago.",
          "type": "integer"
        }
      }
    },
    "Webcom.API.RD.Cart.ProposalVM": {
      "description": "Class ProposalVM.",
      "type": "object",
      "properties": {
        "Message": {
          "description": "Gets or sets the message.",
          "type": "string"
        },
        "DocType": {
          "description": "Gets or sets the type of the document.",
          "type": "string"
        },
        "DocDownloadLink": {
          "description": "Gets or sets the document download link.",
          "type": "string"
        }
      }
    },
    "Webcom.API.RD.Cart.CartItemDescriptionVM": {
      "description": "Class CartItemDescriptionVM.",
      "type": "object",
      "properties": {
        "PartNumber": {
          "description": "Gets or sets the part number.",
          "type": "string"
        },
        "PartNumberEditableGroup": {
          "format": "int32",
          "description": "Gets or sets the part number editable group.",
          "type": "integer"
        },
        "Description": {
          "description": "Gets or sets the description.",
          "type": "string"
        },
        "ProductTypeName": {
          "description": "Gets or sets the name of the product type.",
          "type": "string"
        },
        "Comment": {
          "description": "Gets or sets the comment.",
          "type": "string"
        },
        "IsCommentEditable": {
          "description": "Gets or sets a value indicating whether this instance is comment editable.",
          "type": "boolean"
        },
        "ProductId": {
          "format": "int32",
          "description": "Gets or sets the product identifier.",
          "type": "integer"
        },
        "ProductName": {
          "description": "Gets or sets the name of the product.",
          "type": "string"
        }
      }
    },
    "Webcom.API.RD.Cart.MessageItemVM": {
      "description": "Class MessageItemVM.",
      "type": "object",
      "properties": {
        "Description": {
          "description": "Gets or sets the description.",
          "type": "string"
        },
        "Title": { "description": "Gets or sets the title.", "type": "string" }
      }
    },
    "Webcom.API.RD.Cart.ApprovalConditionVM": {
      "description": "Class ApprovalConditionVM.",
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "description": "Gets or sets the identifier.",
          "type": "integer"
        },
        "Name": { "description": "Gets or sets the name.", "type": "string" },
        "Description": {
          "description": "Gets or sets the description.",
          "type": "string"
        },
        "Approvers": {
          "description": "Gets or sets the approvers.",
          "type": "string"
        },
        "Slider": {
          "$ref": "#/definitions/Webcom.API.RD.Cart.ApprovalConditionSliderVM",
          "description": "Gets or sets the slider."
        }
      }
    },
    "Webcom.API.RD.Cart.InvalidAutocompleteCartItemEntityVM": {
      "type": "object",
      "properties": {
        "RolledUpCartItem": { "type": "string" },
        "DisplayName": { "type": "string" },
        "QuoteTableValue": { "type": "string" },
        "EntityValue": { "type": "string" },
        "QuoteTableName": { "type": "string" }
      }
    },
    "Webcom.API.RD.Cart.InvalidAutocompleteCartEntityVM": {
      "type": "object",
      "properties": {
        "DisplayName": { "type": "string" },
        "QuoteTableValue": { "type": "string" },
        "EntityValue": { "type": "string" },
        "QuoteTableName": { "type": "string" }
      }
    },
    "Webcom.API.RD.Cart.InvalidAutocompleteConfigurationEntityVM": {
      "type": "object",
      "properties": {
        "CartItem": { "format": "int32", "type": "integer" },
        "RolledUpCartItem": { "type": "string" },
        "CanEdit": { "type": "boolean" },
        "ItemId": { "format": "int32", "type": "integer" }
      }
    },
    "Webcom.API.RD.Cart.ApprovalConditionSliderVM": {
      "description": "Class ApprovalConditionSliderVM.",
      "type": "object",
      "properties": {
        "SliderId": {
          "format": "int32",
          "description": "Gets or sets the slider identifier.",
          "type": "integer"
        },
        "BgColor": {
          "description": "Gets or sets the color of the bg.",
          "type": "string"
        },
        "BgImage": {
          "description": "Gets or sets the bg image.",
          "type": "string"
        },
        "IsEditable": {
          "description": "Gets or sets a value indicating whether this instance is editable.",
          "type": "boolean"
        },
        "Slider": {
          "$ref": "#/definitions/Webcom.API.RD.Cart.SliderVM",
          "description": "Gets or sets the slider."
        }
      }
    },
    "Webcom.API.RD.Cart.SliderVM": {
      "description": "Class SliderVM.",
      "type": "object",
      "properties": {
        "Value": {
          "format": "double",
          "description": "Gets or sets the value.",
          "type": "number"
        },
        "Minimum": {
          "format": "double",
          "description": "Gets or sets the minimum.",
          "type": "number"
        },
        "Maximum": {
          "format": "double",
          "description": "Gets or sets the maximum.",
          "type": "number"
        },
        "FirstSectionWidth": {
          "description": "Gets or sets the first width of the section.",
          "type": "string"
        },
        "SecondSectionWidth": {
          "description": "Gets or sets the width of the second section.",
          "type": "string"
        },
        "ThirdSectionWidth": {
          "description": "Gets or sets the width of the third section.",
          "type": "string"
        },
        "FirstSectionColor": {
          "description": "Gets or sets the first color of the section.",
          "type": "string"
        },
        "SecondSectionColor": {
          "description": "Gets or sets the color of the second section.",
          "type": "string"
        },
        "ThirdSectionColor": {
          "description": "Gets or sets the color of the third section.",
          "type": "string"
        }
      }
    },
    "Webcom.API.RD.Cart.CartItemsRequest": {
      "description": "Class CartItemsRequest.",
      "type": "object",
      "properties": {
        "PageNumber": {
          "format": "int32",
          "description": "Gets or sets the page number.",
          "type": "integer"
        },
        "PageSize": {
          "format": "int32",
          "description": "Gets or sets the page size.",
          "type": "integer"
        },
        "FilterQuery": {
          "description": "Gets or sets the list of query criteria.",
          "type": "array",
          "items": { "type": "array", "items": { "type": "string" } }
        },
        "CartItem": {
          "format": "int32",
          "description": "The cart item that should be loaded in data page.\r\nIf supplied pageNumber is ignored.\r\nSystem will also expand some items if required so that requested item is visible\r\n///",
          "type": "integer"
        }
      }
    },
    "Webcom.API.RD.Cart.CartItemsResponse": {
      "description": "Class CartItemsResponse.",
      "type": "object",
      "properties": {
        "Items": {
          "description": "Gets or sets the items.",
          "type": "array",
          "items": { "$ref": "#/definitions/Webcom.API.RD.Cart.CartLineItemVM" }
        },
        "TotalItems": {
          "format": "int32",
          "description": "Gets or sets the total items count.",
          "type": "integer"
        },
        "CurrentPage": {
          "format": "int32",
          "description": "Gets or sets the current items page index.",
          "type": "integer"
        },
        "FilteredTotalAmount": {
          "description": "Gets or sets the filtered total amount.",
          "type": "string"
        }
      }
    },
    "Webcom.API.RD.Cart.CartActionRequest": {
      "description": "Class CartActionRequest.",
      "type": "object",
      "properties": {
        "GroupToActivate": {
          "description": "Gets or sets the group to activate.",
          "type": "string"
        },
        "DirtyCells": {
          "description": "Gets or sets the dirty cells.",
          "type": "object",
          "additionalProperties": { "type": "string" }
        },
        "DirtyCustomFields": {
          "description": "Gets or sets the dirty custom fields.",
          "type": "object",
          "additionalProperties": { "type": "string" }
        },
        "DirtyQuoteTables": {
          "description": "Gets or sets the dirty quote tables.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.RD.Cart.DirtyQuoteTableVm"
          }
        },
        "ActionComment": {
          "description": "Gets or sets the action comment.",
          "type": "string"
        }
      }
    },
    "Webcom.API.RD.Cart.DirtyQuoteTableVm": {
      "description": "Represents changed quote table view model",
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "description": "Gets or sets the table identifier.",
          "type": "integer"
        },
        "Rows": {
          "description": "Gets or sets the rows.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.RD.Cart.DirtyQuoteTableRowVm"
          }
        }
      }
    },
    "Webcom.API.RD.Cart.DirtyQuoteTableRowVm": {
      "description": "Represent changed quote table row view model",
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "description": "Gets or sets the identifier.",
          "type": "integer"
        },
        "Cells": {
          "description": "Gets or sets the cells.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.RD.Cart.DirtyQuoteTableCellVm"
          }
        }
      }
    },
    "Webcom.API.RD.Cart.DirtyQuoteTableCellVm": {
      "description": "Represent changed quote table cell view model",
      "type": "object",
      "properties": {
        "ColumnId": {
          "format": "int32",
          "description": "Gets or sets the column identifier.",
          "type": "integer"
        },
        "Value": { "description": "Gets or sets the value.", "type": "object" }
      }
    },
    "Webcom.API.RD.Cart.ItemsTypeRequest": {
      "description": "ItemsTypeRequest class is needed because we are passing a list of cart items via Post Methods, and we want to send those parameters in a body.",
      "type": "object",
      "properties": {
        "CartItems": {
          "description": "Gets or sets the cart items.",
          "type": "array",
          "items": { "format": "int32", "type": "integer" }
        },
        "ItemType": {
          "format": "int32",
          "description": "Set items to ItemType type",
          "enum": [0, 1, 2, 3],
          "type": "integer"
        }
      }
    },
    "Webcom.API.RD.Cart.ReorderItemRequest": {
      "description": "Class ReorderItemRequest.",
      "type": "object",
      "properties": {
        "CartItem": {
          "format": "int32",
          "description": "Gets or sets the cart item.",
          "type": "integer"
        },
        "ItemNumber": {
          "format": "int32",
          "description": "Gets or sets the item number.",
          "type": "integer"
        }
      }
    },
    "Webcom.API.RD.Cart.QuoteItemsResponse": {
      "description": "Class QuoteItemsResponse.",
      "type": "object",
      "properties": {
        "QuoteItems": {
          "description": "Gets or sets the quote items.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.RD.Cart.QuoteItemInfoVM"
          }
        },
        "MainItemsNo": {
          "format": "int32",
          "description": "Gets or sets the main items no.",
          "type": "integer"
        }
      }
    },
    "Webcom.API.RD.Cart.QuoteItemInfoVM": {
      "description": "Class QuoteItemInfoVM.",
      "type": "object",
      "properties": {
        "CartItem": {
          "format": "int32",
          "description": "Gets or sets the cart item.",
          "type": "integer"
        },
        "RolledUpCartItem": {
          "description": "Gets or sets the rolled up cart item.",
          "type": "string"
        },
        "Quantity": {
          "format": "double",
          "description": "Gets or sets the quantity.",
          "type": "number"
        },
        "ProductName": {
          "description": "Gets or sets the name of the product.",
          "type": "string"
        },
        "PartNumber": {
          "description": "Gets or sets the part number.",
          "type": "string"
        },
        "Price": { "description": "Gets or sets the price.", "type": "string" },
        "ProductTypeName": {
          "description": "Gets or sets the name of the product type.",
          "type": "string"
        },
        "IsMainItem": {
          "description": "Gets or sets a value indicating whether this instance is main item.",
          "type": "boolean"
        },
        "IsCalculated": {
          "description": "Gets or sets a value indicating whether this instance is calculated.",
          "type": "boolean"
        },
        "ProductImage": {
          "description": "Gets or sets the product image.",
          "type": "string"
        },
        "CanDeleteItem": {
          "description": "Gets or sets a value indicating whether this instance can delete item.",
          "type": "boolean"
        },
        "Id": {
          "format": "int32",
          "description": "Gets or sets the identifier.",
          "type": "integer"
        }
      }
    },
    "Webcom.API.RD.Cart.MainItemsCountResponse": {
      "description": "Class MainItemsCountResponse.",
      "type": "object",
      "properties": {
        "MainItemsCount": {
          "format": "int32",
          "description": "Gets or sets the main items count.",
          "type": "integer"
        }
      }
    },
    "Webcom.API.RD.Cart.PartialOrderItemVM": {
      "description": "Class PartialOrderItemVM.",
      "type": "object",
      "properties": {
        "IsSelectedEditable": {
          "description": "Gets or sets a value indicating whether row's selection is editable.",
          "type": "boolean"
        },
        "CartItem": {
          "format": "int32",
          "description": "Gets or sets the cart item.",
          "type": "integer"
        },
        "RolledUpCartItem": {
          "description": "Gets or sets the rolled up cart item.",
          "type": "string"
        },
        "PartNumber": {
          "description": "Gets or sets the items part number.",
          "type": "string"
        },
        "NetPrice": {
          "description": "Gets or sets the items net price.",
          "type": "string"
        },
        "NegotiatedQtyInMasterQuote": {
          "format": "int32",
          "description": "Gets or sets the items quantity negotiated in master quote.",
          "type": "integer"
        },
        "QtyOrderedInPreviousPartialOrders": {
          "format": "int32",
          "description": "Gets or sets the items quantity ordered in previous partial orders.",
          "type": "integer"
        },
        "NewQty": {
          "format": "int32",
          "description": "Gets or sets the new items quantity.",
          "type": "integer"
        },
        "IsQtyEditable": {
          "description": "Gets or sets a value indicating whether items quantity is editable.",
          "type": "boolean"
        },
        "PartialOrderLineItems": {
          "description": "Gets or sets the partial order line items.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.RD.Cart.PartialOrderItemVM"
          }
        }
      }
    },
    "Webcom.API.RD.Cart.CreatePartialOrderRequest": {
      "description": "Class CreatePartialOrderRequest.",
      "type": "object",
      "properties": {
        "CartItem": {
          "format": "int32",
          "description": "Gets or sets the cart item.",
          "type": "integer"
        },
        "Quantity": {
          "description": "Gets or sets the quantity.",
          "type": "string"
        }
      }
    },
    "Webcom.API.RD.Cart.VM.Promotion.PromotionsResponse": {
      "description": "Class that serves as VM wrapper around promotion VM\r\nmainly because of two params that affect how promotions will be displayed",
      "type": "object",
      "properties": {
        "OnePromoPerQuote": {
          "description": "Gets or sets a value indicating whether [one promo per quote] global param is yes or no.",
          "type": "boolean"
        },
        "HasSomeUnappliedPromo": {
          "description": "Gets or sets a value indicating whether this instance has some unapplied promo.",
          "type": "boolean"
        },
        "Promotions": {
          "description": "Gets or sets the promotions.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.RD.Cart.VM.Promotion.PromotionVM"
          }
        }
      }
    },
    "Webcom.API.RD.Cart.VM.Promotion.PromotionVM": {
      "description": "Promotion ViewModel",
      "type": "object",
      "properties": {
        "PromotionId": {
          "format": "int32",
          "description": "Gets or sets the promotion identifier.",
          "type": "integer"
        },
        "Description": {
          "description": "Gets or sets the description.",
          "type": "string"
        },
        "StartDate": {
          "description": "Gets or sets the start date.",
          "type": "string"
        },
        "EndDate": {
          "description": "Gets or sets the end date.",
          "type": "string"
        },
        "IsPromotionApplied": {
          "description": "Gets or sets a value indicating whether this instance is promotion applied.",
          "type": "boolean"
        },
        "Tooltip": {
          "description": "Gets or sets the tooltip. This is long description in HTML format.",
          "type": "string"
        },
        "PromoConditions": {
          "description": "Gets or sets the promo conditions.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.RD.Cart.VM.Promotion.PromoConditionVM"
          }
        },
        "PromoActions": {
          "description": "Gets or sets the promo actions.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.RD.Cart.VM.Promotion.PromoActionVM"
          }
        },
        "IsConditionsApplicable": {
          "description": "Gets or sets a value indicating whether this instance of promotion is complete (conditions are satisfied or product-based).",
          "type": "boolean"
        }
      }
    },
    "Webcom.API.RD.Cart.VM.Promotion.PromoConditionVM": {
      "description": "PromoProduct ViewModel",
      "type": "object",
      "properties": {
        "ProductName": {
          "description": "Gets or sets the name of the product.",
          "type": "string"
        },
        "PartNumber": {
          "description": "Gets or sets the part number.",
          "type": "string"
        },
        "Quantity": {
          "description": "Gets or sets the quantity.",
          "type": "string"
        },
        "CategoryName": {
          "description": "Gets or sets the name of the category.",
          "type": "string"
        },
        "ProductTypeName": {
          "description": "Gets or sets the name of the product type.",
          "type": "string"
        },
        "ConditionTypeId": {
          "format": "int32",
          "description": "Gets or sets the condition type identifier.",
          "type": "integer"
        },
        "AndLogic": {
          "description": "Gets or sets a value indicating whether [and logic].",
          "type": "boolean"
        }
      }
    },
    "Webcom.API.RD.Cart.VM.Promotion.PromoActionVM": {
      "description": "PromoAction ViewModel",
      "type": "object",
      "properties": {
        "ActionRank": {
          "format": "int32",
          "description": "Gets or sets the action rank.",
          "type": "integer"
        },
        "DefaultQty": {
          "format": "double",
          "description": "Gets or sets the default qty.",
          "type": "number"
        },
        "CanApplyPromoAction": {
          "description": "Gets or sets a value indicating whether this action can be applied.<br />\r\nAction can be applied if in the quote exists appropriate items for action product type or category.",
          "type": "boolean"
        },
        "CannotApplyPromoInfo": {
          "description": "Gets or sets info message indicating why promotion action cannot be applied.<br />",
          "type": "string"
        },
        "CalculationType": {
          "description": "Gets or sets the type of the calculation.",
          "type": "string"
        },
        "ProductName": {
          "description": "Gets or sets the name of the product.",
          "type": "string"
        },
        "ItemQty": {
          "description": "Gets or sets the item qty.",
          "type": "string"
        },
        "IsActionApplied": {
          "description": "Gets or sets a value indicating whether this instance is action applied.",
          "type": "boolean"
        },
        "IsLoop": {
          "description": "Gets or sets a value indicating whether this instance is loop.",
          "type": "boolean"
        },
        "LoopQty": {
          "description": "Gets or sets the loop qty.",
          "type": "string"
        },
        "ActionOffers": {
          "description": "Gets or sets the action rows.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.RD.Cart.VM.Promotion.PromoActionOfferVM"
          }
        },
        "ShouldShowRegularPrice": {
          "description": "Gets or sets a value indicating whether [shoul show regular price].",
          "type": "boolean"
        },
        "RegularPriceQty": {
          "description": "Gets or sets the regular price qty.",
          "type": "string"
        },
        "TotalAllowedQty": {
          "format": "int32",
          "description": "Gets or sets the total allowed qty.",
          "type": "integer"
        },
        "ActionTypeId": {
          "format": "int32",
          "description": "Gets or sets the action type identifier.",
          "type": "integer"
        },
        "CategoryName": {
          "description": "Gets or sets the name of the category.",
          "type": "string"
        },
        "ProductTypeName": {
          "description": "Gets or sets the name of the product type.",
          "type": "string"
        },
        "PartNumber": {
          "description": "Gets or sets the part number.",
          "type": "string"
        }
      }
    },
    "Webcom.API.RD.Cart.VM.Promotion.PromoActionOfferVM": {
      "description": "PromoActionOffer ViewModel",
      "type": "object",
      "properties": {
        "Quantity": {
          "description": "Gets or sets the quantity column.",
          "type": "string"
        },
        "Modification": {
          "description": "Gets or sets the modification.",
          "type": "string"
        },
        "CurrencySign": {
          "description": "Gets or sets the currency sign.",
          "type": "string"
        },
        "Price": { "description": "Gets or sets the price.", "type": "string" },
        "ModificationType": {
          "description": "Gets or sets the type of the modification.",
          "type": "string"
        },
        "PromoCodeValue": {
          "description": "Gets or sets the promo code value.",
          "type": "string"
        }
      }
    },
    "Webcom.API.RD.Cart.VM.Promotion.ApplyPromotionsRequest": {
      "description": "ApplyPromotionsRequest",
      "type": "object",
      "properties": {
        "PromoId": {
          "format": "int32",
          "description": "Gets or sets the promo identifier.",
          "type": "integer"
        },
        "ActionRank": {
          "format": "int32",
          "description": "Gets or sets the action rank.",
          "type": "integer"
        },
        "Quantity": {
          "format": "double",
          "description": "Gets or sets the quantity.",
          "type": "number"
        },
        "QtyLimit": {
          "format": "int32",
          "description": "Gets or sets the quantity limit.",
          "type": "integer"
        }
      }
    },
    "Webcom.API.RD.Cart.VM.SearchItemVm": {
      "type": "object",
      "properties": {
        "CartItem": { "format": "int32", "type": "integer" },
        "ItemNumber": { "type": "string" },
        "PartNumber": { "type": "string" },
        "Description": { "type": "string" },
        "ProductName": { "type": "string" },
        "ProductTypeName": { "type": "string" }
      }
    },
    "Webcom.API.RD.Cart.ChangeQuoteTableRequest": {
      "description": "Represents request to change quote table row",
      "type": "object",
      "properties": {
        "RowId": {
          "format": "int32",
          "description": "Gets or sets the row identifier.",
          "type": "integer"
        },
        "QuoteTableId": {
          "format": "int32",
          "description": "Gets or sets the quote table identifier.",
          "type": "integer"
        },
        "ReturnReduced": {
          "description": "Gets or sets a value indicating whether service should return only custom fields and quote tables.",
          "type": "boolean"
        }
      }
    },
    "Webcom.API.RD.Cart.ExecuteQuoteTableCustomActionRequest": {
      "description": "Represent request for executing quote table custom action",
      "type": "object",
      "properties": {
        "TabId": {
          "format": "int32",
          "description": "Gets or sets the tab identifier.",
          "type": "integer"
        },
        "Reduced": {
          "description": "Gets or sets a value indicating whether action should return only custom fields and quote tables",
          "type": "boolean"
        },
        "QuoteTableId": {
          "format": "int32",
          "description": "Gets or sets the quote table identifier.",
          "type": "integer"
        },
        "ActionId": {
          "format": "int32",
          "description": "Gets or sets the action identifier.",
          "type": "integer"
        }
      }
    },
    "Webcom.API.RD.Cart.VM.QuoteTable.QuoteTableFilteredVM": {
      "description": "Filtered quote table data",
      "type": "object",
      "properties": {
        "quoteTableId": {
          "format": "int32",
          "description": "The table identifier",
          "type": "integer"
        },
        "filters": {
          "description": "List of quote table column filter values",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.RD.Cart.VM.QuoteTable.QuoteTableColumnFilterVM"
          }
        },
        "pageNumber": {
          "format": "int32",
          "description": "The page number",
          "type": "integer"
        },
        "pageSize": {
          "format": "int32",
          "description": "Size of the page",
          "type": "integer"
        },
        "tabId": {
          "format": "int32",
          "description": "The tab identifier",
          "type": "integer"
        }
      }
    },
    "Webcom.API.RD.Configurator.AutoCompleteVM": {
      "type": "object",
      "properties": {
        "Items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.RD.Configurator.AutoCompleteItemVM"
          }
        },
        "NoResultsMessage": { "type": "string" }
      }
    },
    "Webcom.API.RD.Configurator.AutoCompleteItemVM": {
      "description": "Auto-complete view model",
      "type": "object",
      "properties": {
        "ColumnsToDisplay": {
          "description": "Gets or sets the columns to display.",
          "type": "string"
        },
        "Values": {
          "description": "Gets or sets the selected column values.",
          "type": "string"
        },
        "Id": {
          "format": "int32",
          "description": "Gets or sets the entry identifier.",
          "type": "integer"
        },
        "InvalidValueWarning": {
          "description": "Gets warning message for invalid autocomplete attribute display value.",
          "type": "string"
        }
      }
    },
    "Webcom.Quote.Helpers.Filtering.FilterFields.QuoteItemFilterField": {
      "type": "object",
      "properties": {
        "Name": { "type": "string" },
        "Label": { "type": "string" },
        "Rank": { "format": "int32", "type": "integer" },
        "Source": { "format": "int32", "enum": [1, 2, 3], "type": "integer" },
        "Type": {
          "format": "int32",
          "enum": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15],
          "type": "integer"
        },
        "Select": { "type": "string" },
        "CurrencySign": { "type": "string" },
        "GroupOperator": {
          "format": "int32",
          "enum": [0, 1],
          "type": "integer"
        }
      }
    },
    "Webcom.API.RD.Cart.VM.QuoteItemMinMaxResponseVM": {
      "type": "object",
      "properties": { "Min": { "type": "string" }, "Max": { "type": "string" } }
    },
    "Webcom.API.RD.Cart.VM.FilterMetadataVM": {
      "type": "object",
      "properties": {
        "FilterableColumns": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.Quote.Helpers.Filtering.FilterFields.QuoteItemFilterField"
          }
        },
        "MetadataItems": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.RD.Cart.VM.FilterMetadataItemVM"
          }
        }
      }
    },
    "Webcom.API.RD.Cart.VM.FilterMetadataItemVM": {
      "type": "object",
      "properties": {
        "Column": { "type": "string" },
        "Metadata": { "type": "object" }
      }
    },
    "Webcom.API.RD.Cart.VM.DistinctValuesVM": {
      "type": "object",
      "properties": {
        "ItemsCount": { "format": "int32", "type": "integer" },
        "DistinctValues": { "type": "array", "items": { "type": "object" } }
      }
    },
    "Webcom.Configurator.Core.IdNamePair": {
      "type": "object",
      "properties": {
        "Id": { "format": "int32", "type": "integer" },
        "Name": { "type": "string" }
      }
    },
    "Webcom.API.RD.Cart.VM.Sections.SectionCalculateRequest": {
      "type": "object",
      "properties": {
        "DirtyCells": {
          "type": "object",
          "additionalProperties": { "type": "string" }
        },
        "GroupToActivate": { "type": "string" },
        "PageSize": { "format": "int32", "type": "integer" },
        "Page": { "format": "int32", "type": "integer" },
        "FilterQuery": {
          "type": "array",
          "items": { "type": "array", "items": { "type": "string" } }
        }
      }
    },
    "Webcom.API.RD.Cart.VM.Sections.ItemActionsRequest": {
      "type": "object",
      "properties": {
        "PageSize": { "format": "int32", "type": "integer" },
        "Page": { "format": "int32", "type": "integer" },
        "FilterQuery": {
          "type": "array",
          "items": { "type": "array", "items": { "type": "string" } }
        }
      }
    },
    "Webcom.API.RD.Cart.MainItemActionVM": {
      "description": "Class MainItemActionVM.",
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "description": "Gets or sets the identifier.",
          "type": "integer"
        },
        "Name": { "description": "Gets or sets the name.", "type": "string" }
      }
    },
    "Webcom.API.RD.Cart.VM.QuoteTeam.QuoteTeamVm": {
      "description": "Represents Quote team View model",
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "description": "Gets or sets the identifier.",
          "type": "integer"
        },
        "Name": { "description": "Gets or sets the name.", "type": "string" },
        "Role": {
          "format": "int32",
          "description": "Gets or sets the role.",
          "type": "integer"
        },
        "Members": {
          "description": "Gets or sets the members.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.RD.Cart.VM.QuoteTeam.QuoteTeamMemberVm"
          }
        },
        "Sections": {
          "description": "Gets or sets the sections.",
          "type": "array",
          "items": { "format": "int32", "type": "integer" }
        }
      }
    },
    "Webcom.API.RD.Cart.VM.QuoteTeam.QuoteTeamMemberVm": {
      "description": "Represents quote team member View model",
      "type": "object",
      "properties": {
        "UserId": {
          "format": "int32",
          "description": "Gets or sets the user identifier.",
          "type": "integer"
        },
        "Name": { "description": "Gets or sets the name.", "type": "string" },
        "Email": { "description": "Gets or sets the email.", "type": "string" },
        "IsBlocked": {
          "description": "Gets or sets if user was blocked flag",
          "type": "boolean"
        }
      }
    },
    "Webcom.API.RD.Cart.VM.QuoteTeam.InvolvedPartiesVm": {
      "description": "Represents involved parties tab view model",
      "type": "object",
      "properties": {
        "Teams": {
          "description": "Gets or sets the teams.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.RD.Cart.VM.QuoteTeam.QuoteTeamVm"
          }
        },
        "OwnerName": {
          "description": "Gets or sets the name of the owner.",
          "type": "string"
        },
        "CanUserManageTeams": {
          "description": "Gets or sets a value indicating whether user can manage teams.",
          "type": "boolean"
        },
        "TabsData": {
          "$ref": "#/definitions/Webcom.API.RD.Cart.CartTabsVM",
          "description": "Gets or sets the tabs data."
        }
      }
    },
    "Webcom.API.RD.Cart.VM.Sections.BulkAssignRequest": {
      "type": "object",
      "properties": {
        "SectionIds": {
          "type": "array",
          "items": { "format": "int32", "type": "integer" }
        },
        "ColumnName": { "type": "string" },
        "Value": { "type": "string" },
        "PageSize": { "format": "int32", "type": "integer" },
        "Page": { "format": "int32", "type": "integer" },
        "FilterQuery": {
          "type": "array",
          "items": { "type": "array", "items": { "type": "string" } }
        }
      }
    },
    "Webcom.API.Public.Cart.CartApiRequest": {
      "type": "object",
      "properties": {
        "OpportunityId": {
          "description": "Gets or sets the opportunity identifier.",
          "type": "string"
        },
        "MarketCode": {
          "description": "Gets or sets the market code.",
          "type": "string"
        },
        "CartStatus": {
          "description": "Gets or sets the cart status.",
          "type": "string"
        },
        "Comment": {
          "description": "Gets or sets the comment.",
          "type": "string"
        },
        "CartCustomFields": {
          "description": "Gets or sets the cart custom fields.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/System.Collections.Generic.KeyValuePair[System.String,System.String]"
          }
        },
        "BillTo": {
          "$ref": "#/definitions/Webcom.API.Public.Cart.VM.CustomerVM",
          "description": "Gets or sets the bill to."
        },
        "ShipTo": {
          "$ref": "#/definitions/Webcom.API.Public.Cart.VM.CustomerVM",
          "description": "Gets or sets the ship to."
        },
        "EndUser": {
          "$ref": "#/definitions/Webcom.API.Public.Cart.VM.CustomerVM",
          "description": "Gets or sets the end user."
        }
      }
    },
    "System.Collections.Generic.KeyValuePair[System.String,System.String]": {
      "type": "object",
      "properties": {
        "key": { "type": "string" },
        "value": { "type": "string" }
      }
    },
    "Webcom.API.Public.Cart.VM.CustomerVM": {
      "type": "object",
      "properties": {
        "CustomerId": {
          "format": "int32",
          "description": "Gets or sets the customer identifier.",
          "type": "integer"
        },
        "CRMAccountId": {
          "description": "Gets or sets the CRM account identifier.",
          "type": "string"
        },
        "CRMContactId": {
          "description": "Gets or sets the CRM contact identifier.",
          "type": "string"
        },
        "Active": {
          "format": "int32",
          "description": "Gets or sets a value indicating whether this {Webcom.API.Public.Cart.VM.CustomerVM} is active.",
          "type": "integer"
        },
        "FirstName": {
          "description": "Gets or sets the first name.",
          "type": "string"
        },
        "LastName": {
          "description": "Gets or sets the last name.",
          "type": "string"
        },
        "CustomerCode": {
          "description": "Gets or sets the customer code.",
          "type": "string"
        },
        "Company": {
          "description": "Gets or sets the company.",
          "type": "string"
        },
        "Address1": {
          "description": "Gets or sets the address1.",
          "type": "string"
        },
        "Address2": {
          "description": "Gets or sets the address2.",
          "type": "string"
        },
        "City": { "description": "Gets or sets the city.", "type": "string" },
        "StateAbbrev": {
          "description": "Gets or sets the state abbrev.",
          "type": "string"
        },
        "ZipCode": {
          "description": "Gets or sets the zip code.",
          "type": "string"
        },
        "CountryAbbrev": {
          "description": "Gets or sets the country abbrev.",
          "type": "string"
        },
        "TerritoryName": {
          "description": "Gets or sets the name of the territory.",
          "type": "string"
        },
        "BusinessPhone": {
          "description": "Gets or sets the business phone.",
          "type": "string"
        },
        "BusinessFax": {
          "description": "Gets or sets the business fax.",
          "type": "string"
        },
        "Email": { "description": "Gets or sets the email.", "type": "string" },
        "Province": {
          "description": "Gets or sets the province.",
          "type": "string"
        },
        "CustomFields": {
          "description": "Gets or sets the custom fields.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/System.Collections.Generic.KeyValuePair[System.String,System.String]"
          }
        }
      }
    },
    "Webcom.API.Public.Cart.CartApiResponse": {
      "type": "object",
      "properties": {
        "CartCompositeNumber": {
          "description": "Gets or sets the cart composite number.",
          "type": "string"
        },
        "Status": {
          "$ref": "#/definitions/Webcom.API.StatusVm",
          "description": "Gets or sets the status."
        }
      }
    },
    "Webcom.API.RD.Cart.VM.Documents.CartDocumentsResponse": {
      "description": "CartDocumentsResponse class",
      "type": "object",
      "properties": {
        "TabsData": {
          "$ref": "#/definitions/Webcom.API.RD.Cart.CartTabsVM",
          "description": "Gets or sets the tabs data."
        },
        "LoadedTables": {
          "format": "int32",
          "description": "Gets or sets the current table.",
          "enum": [0, 1, 2],
          "type": "integer"
        },
        "AttachmentsList": {
          "description": "Gets or sets the attachments list.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.RD.Cart.VM.Documents.AttachmentsVM"
          }
        },
        "GeneratedDocumentsList": {
          "description": "Gets or sets the generated documents list.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.RD.Cart.VM.Documents.GeneratedDocumentsVM"
          }
        },
        "SortAttachments": {
          "description": "Gets or sets the sort attachments.",
          "type": "string"
        },
        "SortGenDoc": {
          "description": "Gets or sets the sort gen document.",
          "type": "string"
        },
        "GeneratedDocumentsPager": {
          "$ref": "#/definitions/Webcom.API.Common.Models.PagerVM",
          "description": "Gets or sets the generated documents pager."
        },
        "AttachmentsPager": {
          "$ref": "#/definitions/Webcom.API.Common.Models.PagerVM",
          "description": "Gets or sets the attachments pager."
        },
        "DateSeparator": {
          "format": "int32",
          "description": "Gets or sets the date separator.",
          "type": "integer"
        },
        "DateFormat": {
          "format": "int32",
          "description": "Gets or sets the date format.",
          "type": "integer"
        },
        "ShowAdditionalInfo": { "type": "boolean" }
      }
    },
    "Webcom.API.RD.Cart.VM.Documents.AttachmentsVM": {
      "description": "Attachments ViewModel",
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "description": "Gets or sets the identifier.",
          "type": "integer"
        },
        "FileName": {
          "description": "Gets or sets the name of the file.",
          "type": "string"
        },
        "DateCreated": {
          "format": "date-time",
          "description": "Gets or sets the date created.",
          "type": "string"
        },
        "ContentType": {
          "description": "Gets or sets the type of the content.",
          "type": "string"
        },
        "ContentLength": {
          "format": "double",
          "description": "Gets or sets the length of the content.",
          "type": "number"
        }
      }
    },
    "Webcom.API.RD.Cart.VM.Documents.GeneratedDocumentsVM": {
      "description": "GeneratedDocuments ViewModel",
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "description": "Gets or sets the identifier.",
          "type": "integer"
        },
        "CartId": {
          "format": "int32",
          "description": "Gets or sets the cart identifier.",
          "type": "integer"
        },
        "UserId": {
          "format": "int32",
          "description": "Gets or sets the user identifier.",
          "type": "integer"
        },
        "CreatedByUserId": {
          "format": "int32",
          "description": "Gets or sets the created by user identifier.",
          "type": "integer"
        },
        "TemplateId": {
          "format": "int32",
          "description": "Gets or sets the template identifier.",
          "type": "integer"
        },
        "FileName": {
          "description": "Gets or sets the name of the file.",
          "type": "string"
        },
        "FileSize": {
          "format": "int32",
          "description": "Gets or sets the size of the file.",
          "type": "integer"
        },
        "Description": {
          "description": "Gets or sets the description.",
          "type": "string"
        },
        "AdditionalInfo": {
          "description": "Gets or sets the additional information.",
          "type": "string"
        },
        "DateCreated": {
          "format": "date-time",
          "description": "Gets or sets the date created.",
          "type": "string"
        },
        "SentToCustomer": {
          "description": "Gets or sets a value indicating whether [sent to customer].",
          "type": "boolean"
        },
        "ViewByCustomer": {
          "description": "Gets or sets a value indicating whether [view by customer].",
          "type": "boolean"
        },
        "QuoteNumberAndRevision": {
          "description": "Gets or sets the quote number and revision.",
          "type": "string"
        },
        "FileNamesInZip": {
          "description": "Gets or sets file names in zip.",
          "type": "array",
          "items": { "type": "string" }
        },
        "MasterFileName": {
          "description": "Gets or sets the master file name in zip.",
          "type": "string"
        }
      }
    },
    "Webcom.API.RD.Cart.VM.Documents.CartDocumentsRequest": {
      "description": "CartDocumentsRequest class",
      "type": "object",
      "properties": {
        "CurrentTable": {
          "format": "int32",
          "description": "Gets or sets the current table.",
          "enum": [0, 1, 2],
          "type": "integer"
        },
        "CurrentPage": {
          "format": "int32",
          "description": "Gets or sets the current page.",
          "type": "integer"
        },
        "ItemsPerPage": {
          "format": "int32",
          "description": "Gets or sets the items per page.",
          "type": "integer"
        },
        "SortMethod": {
          "description": "Gets or sets the sort method.",
          "type": "string"
        },
        "OrderByColumn": {
          "description": "Gets or sets the order by column.",
          "type": "string"
        }
      }
    },
    "Webcom.API.RD.CartList.ChangeStatusRequest": {
      "description": "Class ChangeStatusRequest.",
      "type": "object",
      "properties": {
        "ActionId": {
          "format": "int32",
          "description": "Gets or sets the action identifier.",
          "type": "integer"
        },
        "CryptedCartId": {
          "description": "Gets or sets the crypted cart identifier.",
          "type": "string"
        },
        "CryptedOwnerId": {
          "description": "Gets or sets the crypted owner identifier.",
          "type": "string"
        },
        "GetDataRequest": {
          "$ref": "#/definitions/Webcom.API.RD.CartList.GetDataRequest",
          "description": "Gets or sets the get data request."
        },
        "NewStatus": {
          "format": "int32",
          "description": "Gets or sets the new status.",
          "type": "integer"
        }
      }
    },
    "Webcom.API.RD.CartList.GetDataRequest": {
      "description": "Class GetDataRequest.",
      "type": "object",
      "properties": {
        "AdditionalFields": {
          "description": "Gets or sets the additional fields.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.RD.CartList.AdditionalFieldRequestVM"
          }
        },
        "CurrentPage": {
          "format": "int32",
          "description": "Gets or sets the current page.",
          "type": "integer"
        },
        "CurrentTabId": {
          "format": "int32",
          "description": "Gets or sets the current tab identifier.",
          "type": "integer"
        },
        "DateFrom": {
          "format": "date-time",
          "description": "Gets or sets the date from.",
          "type": "string"
        },
        "DateTo": {
          "format": "date-time",
          "description": "Gets or sets the date to.",
          "type": "string"
        },
        "LastDays": {
          "format": "int32",
          "description": "Gets or sets the last days.",
          "type": "integer"
        },
        "PageSize": {
          "format": "int32",
          "description": "Gets or sets the size of the page.",
          "type": "integer"
        },
        "PerformCount": {
          "description": "Gets or sets a value indicating whether [perform count].",
          "type": "boolean"
        },
        "SortBy": {
          "description": "Gets or sets the sort by.",
          "type": "string"
        },
        "SortMethod": {
          "description": "Gets or sets the sort method.",
          "type": "string"
        },
        "Statuses": {
          "description": "Gets or sets the statuses.",
          "type": "array",
          "items": { "format": "int32", "type": "integer" }
        },
        "GridName": {
          "description": "Gets or sets the name of the grid.",
          "type": "string"
        }
      }
    },
    "Webcom.API.RD.CartList.AdditionalFieldRequestVM": {
      "description": "Class AdditionalFieldRequestVM.",
      "type": "object",
      "properties": {
        "HasRange": {
          "description": "Gets or sets a value indicating whether this instance has range.",
          "type": "boolean"
        },
        "Id": {
          "format": "int32",
          "description": "Gets or sets the identifier.",
          "type": "integer"
        },
        "Name": { "description": "Gets or sets the name.", "type": "string" },
        "OperationType": {
          "format": "int32",
          "description": "Gets or sets the type of the operation.",
          "enum": [0, 1, 2, 3, 4, 5, -1],
          "type": "integer"
        },
        "Value": { "description": "Gets or sets the value.", "type": "string" },
        "ValueLower": {
          "description": "Gets or sets the value lower.",
          "type": "string"
        },
        "ValueUpper": {
          "description": "Gets or sets the value upper.",
          "type": "string"
        }
      }
    },
    "Webcom.API.RD.CartList.CartListResponse": {
      "description": "Class CartListResponse.",
      "type": "object",
      "properties": {
        "WorkflowClientData": {
          "description": "Gets or sets the WorkflowContext client data that will be sent to the client.",
          "type": "object"
        },
        "MainGrid": {
          "$ref": "#/definitions/Webcom.API.RD.CartList.GridVM",
          "description": "Gets or sets the main grid."
        },
        "DelegatedApproverGrid": {
          "$ref": "#/definitions/Webcom.API.RD.CartList.GridVM",
          "description": "Gets or sets the delegated approver grid."
        },
        "LoadDelegatedApprover": {
          "description": "Gets or sets a value indicating whether [load delegated approver].",
          "type": "boolean"
        }
      }
    },
    "Webcom.API.RD.CartList.GridVM": {
      "description": "Class GridVM.",
      "type": "object",
      "properties": {
        "Columns": {
          "description": "Gets or sets the columns.",
          "type": "array",
          "items": { "$ref": "#/definitions/Webcom.API.RD.CartList.ColumnVM" }
        },
        "ErrorMessage": {
          "description": "Gets or sets the error message.",
          "type": "string"
        },
        "Pager": {
          "$ref": "#/definitions/Webcom.API.RD.CartList.PagerVM",
          "description": "Gets or sets the pager."
        },
        "Rows": {
          "description": "Gets or sets the rows.",
          "type": "array",
          "items": { "$ref": "#/definitions/Webcom.API.RD.CartList.RowVM" }
        }
      }
    },
    "Webcom.API.RD.CartList.ColumnVM": {
      "description": "Class ColumnVM.",
      "type": "object",
      "properties": {
        "TemplateId": {
          "format": "int32",
          "description": "Gets or sets the template identifier.",
          "type": "integer"
        },
        "ColumnName": {
          "description": "Gets or sets the name of the column.",
          "type": "string"
        },
        "Name": { "description": "Gets or sets the name.", "type": "string" },
        "FieldName": {
          "description": "Gets or sets the name of the field.",
          "type": "string"
        },
        "ActionType": {
          "format": "int32",
          "description": "Gets or sets the type of the action.",
          "type": "integer"
        }
      }
    },
    "Webcom.API.RD.CartList.PagerVM": {
      "description": "Class PagerVM.",
      "type": "object",
      "properties": {
        "CurrentPage": {
          "format": "int32",
          "description": "Gets or sets the current page.",
          "type": "integer"
        },
        "ItemsPerPage": {
          "format": "int32",
          "description": "Gets or sets the items per page.",
          "type": "integer"
        },
        "RefreshPager": {
          "description": "Gets or sets a value indicating whether [refresh pager].",
          "type": "boolean"
        },
        "TotalNumberOfItems": {
          "format": "int32",
          "description": "Gets or sets the total number of items.",
          "type": "integer"
        }
      }
    },
    "Webcom.API.RD.CartList.RowVM": {
      "description": "Class RowVM.",
      "type": "object",
      "properties": {
        "Actions": {
          "description": "Gets or sets the actions.",
          "type": "array",
          "items": { "$ref": "#/definitions/Webcom.API.RD.CartList.ActionVM" }
        },
        "Approver": {
          "description": "Gets or sets the approver.",
          "type": "string"
        },
        "ApproverId": {
          "format": "int32",
          "description": "Gets or sets the approver identifier.",
          "type": "integer"
        },
        "CartId": {
          "format": "int32",
          "description": "Gets or sets the cart identifier.",
          "type": "integer"
        },
        "CartIdCrypted": {
          "description": "Gets or sets the cart identifier crypted.",
          "type": "string"
        },
        "Cells": {
          "description": "Gets or sets the cells.",
          "type": "array",
          "items": { "$ref": "#/definitions/Webcom.API.RD.CartList.CellVM" }
        },
        "OwnerId": {
          "format": "int32",
          "description": "Gets or sets the owner identifier.",
          "type": "integer"
        },
        "OwnerIdCrypted": {
          "description": "Gets or sets the owner identifier crypted.",
          "type": "string"
        },
        "LastModified": {
          "description": "Gets or sets the Quote last modified date.",
          "type": "string"
        },
        "IsBlocked": {
          "description": "Gets or sets the Quote blocked mark.",
          "type": "boolean"
        }
      }
    },
    "Webcom.API.RD.CartList.ActionVM": {
      "description": "Class ActionVM.",
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "description": "Gets or sets the identifier.",
          "type": "integer"
        },
        "Name": { "description": "Gets or sets the name.", "type": "string" }
      }
    },
    "Webcom.API.RD.CartList.CellVM": {
      "description": "Class CellVM.",
      "type": "object",
      "properties": {
        "Editable": {
          "description": "Gets a value indicating whether this {Webcom.API.RD.CartList.CellVM} is editable.",
          "type": "boolean",
          "readOnly": true
        },
        "DisplayValue": {
          "description": "Gets or sets the display value.",
          "type": "string"
        },
        "IsStatusCell": {
          "description": "Gets or sets a value indicating whether this instance is status cell.",
          "type": "boolean"
        },
        "Value": { "description": "Gets or sets the value.", "type": "string" }
      }
    },
    "Webcom.API.RD.CartList.ExecuteActionRequest": {
      "description": "Class ExecuteActionRequest.",
      "type": "object",
      "properties": {
        "ActionId": {
          "format": "int32",
          "description": "Gets or sets the action identifier.",
          "type": "integer"
        },
        "CryptedCartId": {
          "description": "Gets or sets the crypted cart identifier.",
          "type": "string"
        },
        "CryptedOwnerId": {
          "description": "Gets or sets the crypted owner identifier.",
          "type": "string"
        },
        "Comment": {
          "description": "Gets or sets the action comment.",
          "type": "string"
        },
        "GetDataRequest": {
          "$ref": "#/definitions/Webcom.API.RD.CartList.GetDataRequest",
          "description": "Gets or sets the get data request."
        },
        "ApproverId": {
          "format": "int32",
          "description": "Gets or sets the approver identifier.",
          "type": "integer"
        }
      }
    },
    "Webcom.API.RD.CartList.GetDataByQuoteNumberResponse": {
      "description": "Class GetDataByQuoteNumberResponse.",
      "type": "object",
      "properties": {
        "MainGrid": {
          "$ref": "#/definitions/Webcom.API.RD.CartList.GridVM",
          "description": "Gets or sets the main grid."
        },
        "DelegatedApproverGrid": {
          "$ref": "#/definitions/Webcom.API.RD.CartList.GridVM",
          "description": "Gets or sets the delegated approver grid."
        },
        "TabId": {
          "format": "int32",
          "description": "Gets or sets the tab identifier.",
          "type": "integer"
        },
        "LoadDelegatedApprover": {
          "description": "Gets or sets a value indicating whether [load delegated approver].",
          "type": "boolean"
        }
      }
    },
    "Webcom.API.RD.CartList.CartListInitResponse": {
      "description": "Class CartListInitResponse.",
      "type": "object",
      "properties": {
        "CurrentTabId": {
          "format": "int32",
          "description": "Gets or sets the current tab identifier.",
          "type": "integer"
        },
        "Filter": {
          "$ref": "#/definitions/Webcom.API.RD.CartList.FilterVM",
          "description": "Gets or sets the filter."
        },
        "IsInViewMode": {
          "description": "Gets or sets a value indicating whether this instance is in view mode.",
          "type": "boolean"
        },
        "Pager": {
          "$ref": "#/definitions/Webcom.API.RD.CartList.PagerVM",
          "description": "Gets or sets the pager."
        },
        "Tabs": {
          "description": "Gets or sets the tabs.",
          "type": "array",
          "items": { "type": "string" }
        },
        "WorkflowClientData": {
          "description": "Gets or sets the WorkflowContext client data that will be sent to the client.",
          "type": "object"
        },
        "MainGrid": {
          "$ref": "#/definitions/Webcom.API.RD.CartList.GridVM",
          "description": "Gets or sets the main grid."
        },
        "DelegatedApproverGrid": {
          "$ref": "#/definitions/Webcom.API.RD.CartList.GridVM",
          "description": "Gets or sets the delegated approver grid."
        },
        "LoadDelegatedApprover": {
          "description": "Gets or sets a value indicating whether [load delegated approver].",
          "type": "boolean"
        }
      }
    },
    "Webcom.API.RD.CartList.FilterVM": {
      "description": "Class FilterVM.",
      "type": "object",
      "properties": {
        "AdditionalFields": {
          "description": "Gets or sets the additional fields.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.RD.CartList.AdditionalFieldVM"
          }
        },
        "AllStatuses": {
          "description": "Gets or sets all statuses.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.RD.CartList.CartStatusVM"
          }
        },
        "DateFormat": {
          "description": "Gets or sets the date format.",
          "type": "string"
        },
        "DateFrom": {
          "format": "date-time",
          "description": "Gets or sets the date from.",
          "type": "string"
        },
        "DateTo": {
          "format": "date-time",
          "description": "Gets or sets the date to.",
          "type": "string"
        },
        "LastDays": {
          "format": "int32",
          "description": "Gets or sets the last days.",
          "type": "integer"
        },
        "SelectedStatuses": {
          "description": "Gets or sets the selected statuses.",
          "type": "array",
          "items": { "format": "int32", "type": "integer" }
        }
      }
    },
    "Webcom.API.RD.CartList.AdditionalFieldVM": {
      "description": "Class AdditionalFieldVM.",
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "description": "Gets or sets the identifier.",
          "type": "integer"
        },
        "Name": { "description": "Gets or sets the name.", "type": "string" },
        "OperationType": {
          "format": "int32",
          "description": "Gets or sets the type of the operation.",
          "enum": [0, 1, 2, 3, 4, 5, -1],
          "type": "integer"
        },
        "Rank": {
          "format": "int32",
          "description": "Gets or sets the rank.",
          "type": "integer"
        },
        "Value": { "description": "Gets or sets the value.", "type": "string" }
      }
    },
    "Webcom.API.RD.CartList.CartStatusVM": {
      "description": "Class CartStatusVM.",
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "description": "Gets or sets the identifier.",
          "type": "integer"
        },
        "Name": { "description": "Gets or sets the name.", "type": "string" }
      }
    },
    "Webcom.API.RD.CartList.SaveDataRequest": {
      "description": "Class SaveDataRequest.",
      "type": "object",
      "properties": {
        "AccessLevel": {
          "format": "int32",
          "description": "Gets or sets the access level.",
          "type": "integer"
        },
        "CartId": {
          "format": "int32",
          "description": "Gets or sets the cart identifier.",
          "type": "integer"
        },
        "Content": {
          "description": "Gets or sets the content.",
          "type": "string"
        },
        "OwnerId": {
          "format": "int32",
          "description": "Gets or sets the owner identifier.",
          "type": "integer"
        },
        "ScParamId": {
          "format": "int32",
          "description": "Gets or sets the sc parameter identifier.",
          "type": "integer"
        },
        "ScParamType": {
          "format": "int32",
          "description": "Gets or sets the type of the sc parameter.",
          "type": "integer"
        }
      }
    },
    "Webcom.API.RD.CartList.SaveScParamsResponse": {
      "description": "Class SaveScParamsResponse.",
      "type": "object",
      "properties": {
        "Ok": {
          "description": "Gets or sets a value indicating whether this {Webcom.API.RD.CartList.SaveScParamsResponse} is ok.",
          "type": "boolean"
        },
        "Message": {
          "description": "Gets or sets the message.",
          "type": "string"
        }
      }
    },
    "Webcom.API.RD.Catalog.CatalogResponse": {
      "description": "Class CatalogResponse.",
      "type": "object",
      "properties": {
        "HasNextPage": {
          "description": "Gets or sets a value indicating whether this instance has next page.",
          "type": "boolean"
        },
        "FavoritesEnabled": {
          "description": "Gets or sets a value indicating whether favorites are enabled.",
          "type": "boolean"
        },
        "InitialData": {
          "$ref": "#/definitions/Webcom.API.RD.Catalog.InitialDataVM",
          "description": "Gets or sets the initial data."
        },
        "Products": {
          "description": "Gets or sets the products.",
          "type": "array",
          "items": { "$ref": "#/definitions/Webcom.API.RD.Catalog.ProductVM" }
        },
        "Abs": {
          "description": "Gets the abs.",
          "type": "array",
          "items": { "$ref": "#/definitions/Webcom.API.RD.Catalog.AbsVM" },
          "readOnly": true
        }
      }
    },
    "Webcom.API.RD.Catalog.InitialDataVM": {
      "description": "Class InitialDataVM.",
      "type": "object",
      "properties": {
        "CartExists": {
          "description": "Gets or sets a value indicating whether [cart exists].",
          "type": "boolean"
        },
        "ViewDetailsSettings": {
          "format": "int32",
          "description": "Gets or sets the view details settings.",
          "enum": [0, 1, 2],
          "type": "integer"
        },
        "CanFilterAndSortByPrice": {
          "description": "Gets or sets a value indicating whether this instance can filter and sort by price.",
          "type": "boolean"
        },
        "CanFilterByPromotion": {
          "description": "Gets or sets a value indicating whether this instance can filter by promotion.",
          "type": "boolean"
        },
        "CategoryId": {
          "format": "int32",
          "description": "Gets or sets the category identifier.",
          "type": "integer"
        },
        "Search": {
          "description": "Gets or sets the search.",
          "type": "string"
        },
        "ActiveView": {
          "description": "Gets or sets the active view.",
          "type": "string"
        },
        "PageSize": {
          "format": "int32",
          "description": "Gets or sets the size of the page.",
          "type": "integer"
        },
        "FavoritesSharingRights": {
          "$ref": "#/definitions/Webcom.API.RD.Catalog.FavoritesSharingRightsVM",
          "description": "Gets or sets the favorites sharing rights."
        },
        "Categories": {
          "description": "Gets or sets the categories.",
          "type": "array",
          "items": { "$ref": "#/definitions/Webcom.API.RD.Catalog.CategoryVM" }
        },
        "CompareProductsEnabled": {
          "description": "Gets or sets a value indicating whether [compare products enabled].",
          "type": "boolean"
        },
        "ProductsForCompare": {
          "description": "Gets or sets the products for compare.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.RD.Catalog.VM.ProductForCompareVM"
          }
        },
        "SortedBy": {
          "format": "int32",
          "description": "Gets or sets the sorted by option.",
          "enum": [0, 1, 2, 3, 4, 5],
          "type": "integer"
        }
      }
    },
    "Webcom.API.RD.Catalog.ProductVM": {
      "description": "Class ProductVM.",
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "description": "Gets or sets the identifier.",
          "type": "integer"
        },
        "Name": { "description": "Gets or sets the name.", "type": "string" },
        "Description": {
          "description": "Gets or sets the description.",
          "type": "string"
        },
        "LongDescription": {
          "description": "Gets or sets the long description.",
          "type": "string"
        },
        "PartNumber": {
          "description": "Gets or sets the part number.",
          "type": "string"
        },
        "Price": { "description": "Gets or sets the price.", "type": "string" },
        "ProductTypeId": {
          "format": "int32",
          "description": "Gets or sets the product type identifier.",
          "type": "integer"
        },
        "ProductTypeName": {
          "description": "Gets or sets the name of the product type.",
          "type": "string"
        },
        "ImageUrl": {
          "description": "Gets or sets the image URL.",
          "type": "string"
        },
        "CategoryId": {
          "format": "int32",
          "description": "Gets or sets the category identifier.",
          "type": "integer"
        },
        "CategoryName": {
          "description": "Gets or sets the name of the category.",
          "type": "string"
        },
        "CanAddToQuote": {
          "description": "Gets or sets a value indicating whether this instance can add to quote.",
          "type": "boolean"
        },
        "CanAlterQuantity": {
          "description": "Gets or sets a value indicating whether this instance can alter quantity.",
          "type": "boolean"
        },
        "CanConfigure": {
          "description": "Gets or sets a value indicating whether this instance can configure.",
          "type": "boolean"
        },
        "PartNumberExistInPricebook": {
          "description": "Gets or sets a value indicating whether [part number exist in pricebook].",
          "type": "boolean"
        },
        "ProductFavoritesInfo": {
          "$ref": "#/definitions/Webcom.API.RD.Catalog.ProductFavoritesInfoVM",
          "description": "Gets or sets the product favorites information."
        },
        "EndStatus": {
          "format": "int32",
          "description": "Gets or sets the end status.",
          "type": "integer"
        },
        "UPC": {
          "description": "Gets or sets a UPC (Universal Product Code) value.",
          "type": "string"
        },
        "ProductPromotionInfo": {
          "description": "Gets or sets the promotion information for particular product.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.RD.Cart.VM.Promotion.PromotionVM"
          }
        },
        "IsInPromotion": {
          "description": "Gets or sets a value indicating whether this instance is in promotion.",
          "type": "boolean"
        },
        "IsSubscriptionBillingProduct": {
          "description": "Gets or sets flag that product has SB pricing type.",
          "type": "boolean"
        },
        "TotalRecurringPrice": {
          "description": "Gets or sets TotalRecurringPrice.",
          "type": "string"
        },
        "OneTimePrice": {
          "description": "Gets or sets OneTimePrice.",
          "type": "string"
        },
        "HasRatePlanForMarket": {
          "description": "Gets or sets flag that product has rate plan for current market",
          "type": "boolean"
        },
        "ErrorMessage": {
          "description": "Error message to show for the product in case of an error (eg. no prices available)",
          "type": "string"
        }
      }
    },
    "Webcom.API.RD.Catalog.AbsVM": {
      "description": "Class AbsVM.",
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "description": "Gets or sets the identifier.",
          "type": "integer"
        },
        "Name": { "description": "Gets or sets the name.", "type": "string" },
        "IsActive": {
          "description": "Gets or sets a value indicating whether this instance is active.",
          "type": "boolean"
        }
      }
    },
    "Webcom.API.RD.Catalog.FavoritesSharingRightsVM": {
      "type": "object",
      "properties": {
        "AllowToShareWithCompanyUsers": {
          "description": "Gets or sets a value indicating whether favorites can be shared with company users].",
          "type": "boolean"
        },
        "AllowToShareWithAllUsers": {
          "description": "Gets or sets a value indicating whether favorites can be shared with all users].",
          "type": "boolean"
        }
      }
    },
    "Webcom.API.RD.Catalog.CategoryVM": {
      "description": "Class CategoryVM.",
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "description": "Gets or sets the identifier.",
          "type": "integer"
        },
        "SystemId": {
          "description": "Gets or sets the system identifier.",
          "type": "string"
        },
        "Name": { "description": "Gets or sets the name.", "type": "string" },
        "Url": { "description": "Gets or sets the URL.", "type": "string" },
        "PreferredTemplate": {
          "description": "Gets or sets the preferred template.",
          "type": "string"
        },
        "ImageUrl": {
          "description": "Gets or sets the image URL.",
          "type": "string"
        },
        "MobileImageUrl": {
          "description": "Gets or sets the mobile image URL.",
          "type": "string"
        },
        "Children": {
          "description": "Gets or sets the children.",
          "type": "array",
          "items": { "$ref": "#/definitions/Webcom.API.RD.Catalog.CategoryVM" }
        },
        "Description": {
          "description": "Gets or sets the category decription.",
          "type": "string"
        }
      }
    },
    "Webcom.API.RD.Catalog.VM.ProductForCompareVM": {
      "description": "Class ProductForCompareVM.",
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "description": "Gets or sets the identifier.",
          "type": "integer"
        },
        "Name": { "description": "Gets or sets the name.", "type": "string" }
      }
    },
    "Webcom.API.RD.Catalog.ProductFavoritesInfoVM": {
      "type": "object",
      "properties": {
        "FavoriteId": {
          "format": "int32",
          "description": "Gets or sets the favorite identifier.",
          "type": "integer"
        },
        "FavoriteName": {
          "description": "Gets or sets the name of favorite.",
          "type": "string"
        },
        "IsFavoriteShared": {
          "description": "Gets or sets a value indicating whether favorite is shared.",
          "type": "boolean"
        },
        "IsFavoriteVisible": {
          "description": "Gets or sets a value indicating whether favorite should be visible.",
          "type": "boolean"
        }
      }
    },
    "Webcom.Configurator.Catalogue.CatalogueFilterOptions": {
      "type": "object",
      "properties": {
        "InPromotion": { "type": "boolean" },
        "Search": { "type": "string" },
        "CategoryId": { "format": "int32", "type": "integer" },
        "Name": { "type": "string" },
        "Description": { "type": "string" },
        "PartNumber": { "type": "string" },
        "Type": { "type": "string" },
        "LowerPrice": { "type": "string" },
        "UpperPrice": { "type": "string" },
        "ProductIdCsv": { "type": "string" },
        "PageNumber": { "format": "int32", "type": "integer" },
        "PageSize": { "format": "int32", "type": "integer" },
        "IsAttributeBasedSearch": { "type": "boolean" },
        "SortOrderBy": {
          "format": "int32",
          "enum": [0, 1, 2, 3, 4, 5],
          "type": "integer"
        },
        "IsSortAscending": { "type": "boolean" },
        "SystemId": { "type": "string" },
        "SystemIdCsv": { "type": "string" }
      }
    },
    "Webcom.API.RD.Catalog.QuickAddResponse": {
      "description": "Class QuickAddResponse.",
      "type": "object",
      "properties": {
        "HasMoreProductsMatching": {
          "description": "Gets or sets a value indicating whether this instance has more products matching.",
          "type": "boolean"
        },
        "Products": {
          "description": "Gets or sets the products.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.RD.Catalog.QuickAddProductVM"
          }
        },
        "IsFavoriteSearchEnabled": {
          "description": "Gets or sets a value indicating whether is favorite search is enabled on cart.",
          "type": "boolean"
        },
        "HasMoreFavoritesMatching": {
          "description": "Gets or sets the has more favorites matching.",
          "type": "boolean"
        },
        "Favorites": {
          "description": "Gets or sets the list of favorites matching.",
          "type": "array",
          "items": { "$ref": "#/definitions/Webcom.API.RD.Catalog.FavoriteVM" }
        }
      }
    },
    "Webcom.API.RD.Catalog.QuickAddProductVM": {
      "description": "Class QuickAddProductVM.",
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "description": "Gets or sets the identifier.",
          "type": "integer"
        },
        "Name": { "description": "Gets or sets the name.", "type": "string" },
        "Description": {
          "description": "Gets or sets the description.",
          "type": "string"
        },
        "PartNumber": {
          "description": "Gets or sets the part number.",
          "type": "string"
        },
        "ProductTypeId": {
          "format": "int32",
          "description": "Gets or sets the product type identifier.",
          "type": "integer"
        },
        "ProductTypeName": {
          "description": "Gets or sets the name of the product type.",
          "type": "string"
        },
        "ImageUrl": {
          "description": "Gets or sets the image URL.",
          "type": "string"
        },
        "CategoryId": {
          "format": "int32",
          "description": "Gets or sets the category identifier.",
          "type": "integer"
        },
        "CategoryName": {
          "description": "Gets or sets the name of the category.",
          "type": "string"
        },
        "CanAddToQuote": {
          "description": "Gets or sets a value indicating whether this instance can add to quote.",
          "type": "boolean"
        },
        "CanAlterQuantity": {
          "description": "Gets or sets a value indicating whether this instance can alter quantity.",
          "type": "boolean"
        },
        "CanConfigure": {
          "description": "Gets or sets a value indicating whether this instance can configure.",
          "type": "boolean"
        },
        "PartNumberExistInPricebook": {
          "description": "Gets or sets a value indicating whether [part number exist in pricebook].",
          "type": "boolean"
        },
        "EndStatus": {
          "format": "int32",
          "description": "Gets or sets the end status.",
          "type": "integer"
        }
      }
    },
    "Webcom.API.RD.Catalog.FavoriteVM": {
      "type": "object",
      "properties": {
        "FavoriteId": {
          "format": "int32",
          "description": "Gets or sets the favorite identifier.",
          "type": "integer"
        },
        "FavoriteName": {
          "description": "Gets or sets the name of the favorite.",
          "type": "string"
        },
        "FavoriteCategory": {
          "description": "Gets or sets the favorite category.",
          "type": "string"
        },
        "FavoriteDescription": {
          "description": "Gets or sets the favorite description.",
          "type": "string"
        },
        "FavoritePartNumber": {
          "description": "Gets or sets the favorite part number.",
          "type": "string"
        },
        "BaseOnProductId": {
          "format": "int32",
          "description": "Gets or sets the base on product identifier.",
          "type": "integer"
        },
        "BaseOnProductName": {
          "description": "Gets or sets the name of the base on product.",
          "type": "string"
        },
        "VisibleForCompanyId": {
          "format": "int32",
          "description": "Gets or sets the visible for company identifier.",
          "type": "integer"
        },
        "VisibleToEveryone": {
          "description": "Gets or sets a value indicating whether favorite is visible to everyone.",
          "type": "boolean"
        },
        "CanEnterQty": {
          "description": "Gets or sets a value indicating whether this instance can enter qty.",
          "type": "boolean"
        },
        "IsSimple": {
          "description": "Gets or sets a value indicating whether this instance is simple.",
          "type": "boolean"
        },
        "EndStatus": {
          "format": "int32",
          "description": "Gets or sets the end status.",
          "type": "integer"
        }
      }
    },
    "Webcom.API.RD.Catalog.AddToQuoteResponse": {
      "description": "Class AddToQuoteResponse.",
      "type": "object",
      "properties": {
        "Ok": {
          "description": "Gets or sets a value indicating whether this {Webcom.API.RD.Catalog.AddToQuoteResponse} is ok.",
          "type": "boolean"
        },
        "Message": {
          "description": "Gets or sets the message.",
          "type": "string"
        },
        "RedirectionUrl": {
          "description": "Gets or sets the redirection URL.",
          "type": "string"
        },
        "MainItemsNumber": {
          "format": "int32",
          "description": "Gets or sets the main items number.",
          "type": "integer"
        },
        "MainItemIds": {
          "description": "Gets or sets the list of main item ids.",
          "type": "array",
          "items": { "format": "int32", "type": "integer" }
        }
      }
    },
    "Webcom.API.RD.Cart.VM.SubscriptionBilling.ProductRatePlanVM": {
      "type": "object",
      "properties": {
        "CurrencySign": {
          "description": "Gets or sets the CurrencySign for Rateplan",
          "type": "string"
        },
        "ContractTermLength": {
          "format": "int32",
          "description": "Gets or sets the ContractTermLength for Rateplan",
          "type": "integer"
        },
        "MinimumContractTermLength": {
          "format": "int32",
          "description": "Gets or sets the MinimumContractTermLength for Rateplan",
          "type": "integer"
        },
        "Charges": {
          "description": "Gets or sets Charges in RatePlan for certain product",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.RD.Cart.VM.SubscriptionBilling.BaseChargeVM"
          }
        }
      }
    },
    "Webcom.API.RD.Cart.VM.SubscriptionBilling.BaseChargeVM": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "description": "Gets or sets identifier",
          "type": "integer"
        },
        "Type": {
          "description": "Gets or sets the Charges Type",
          "type": "string"
        },
        "RatePlanElement": {
          "description": "Gets or sets RatePlanElement",
          "type": "string"
        },
        "ValueOfSubscriptionParameter": {
          "$ref": "#/definitions/Webcom.API.RD.Cart.MathCellVM",
          "description": "Gets or sets value of subscription parameter"
        }
      }
    },
    "Webcom.API.SetupSPA.Categories.VM.CategoryVM": {
      "type": "object",
      "properties": {
        "Id": { "format": "int32", "type": "integer" },
        "Name": { "type": "string" },
        "Children": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.SetupSPA.Categories.VM.CategoryVM"
          }
        }
      }
    },
    "Webcom.API.Common.Models.PagedDataVM[Webcom.API.SetupSPA.CertificateManagement.VM.CertificateManagementTableRowVM]": {
      "description": "Paged data for provided type",
      "type": "object",
      "properties": {
        "PagedRecords": {
          "description": "List of paged records",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.SetupSPA.CertificateManagement.VM.CertificateManagementTableRowVM"
          }
        },
        "TotalNumberOfRecords": {
          "format": "int32",
          "description": "Total number of records",
          "type": "integer"
        }
      }
    },
    "Webcom.API.SetupSPA.CertificateManagement.VM.CertificateManagementTableRowVM": {
      "type": "object",
      "properties": {
        "Id": { "format": "int32", "type": "integer" },
        "Selector": { "type": "string" },
        "Domain": { "type": "string" },
        "EncryptionAlgorithm": { "type": "string" },
        "KeyData": { "type": "string" },
        "Active": { "type": "boolean" },
        "ValidFrom": { "type": "string" },
        "ValidTo": { "type": "string" },
        "Issuer": { "type": "string" },
        "Subject": { "type": "string" },
        "Thumbprint": { "type": "string" },
        "SoapUrl": { "type": "string" },
        "Purpose": { "type": "string" },
        "CertificateSettingsPurpose": {
          "format": "int32",
          "enum": [0, 1, 2, 3, 4],
          "type": "integer"
        }
      }
    },
    "Webcom.API.SetupSPA.CertificateManagement.CertificateSettingsEntryDialogVM": {
      "type": "object",
      "properties": {
        "certificatePath": { "type": "string" },
        "isDkim": { "type": "boolean" },
        "Id": { "format": "int32", "type": "integer" },
        "Selector": { "type": "string" },
        "Domain": { "type": "string" },
        "Active": { "type": "boolean" },
        "Encryption": { "format": "int32", "type": "integer" },
        "Certificate": { "type": "string" },
        "CertificatePublicKey": { "type": "string" },
        "CertificatePrivateKey": { "type": "string" },
        "CertificatePassword": { "type": "string" },
        "CertificateSettingsPurpose": { "format": "int32", "type": "integer" },
        "SoapUrl": { "type": "string" },
        "SelectedKeyOption": {
          "format": "int32",
          "enum": [0, 1, 2, 3],
          "type": "integer"
        },
        "KeySize": {
          "format": "int32",
          "enum": [1024, 2048, 3072],
          "type": "integer"
        }
      }
    },
    "Webcom.API.SetupSPA.ChangeSet.VM.ChangeSetVM": {
      "type": "object",
      "properties": {
        "Id": { "format": "int32", "type": "integer" },
        "Name": {
          "description": "Gets or sets Change set name",
          "type": "string"
        },
        "SystemId": {
          "description": "Gets or sets Change set System Id",
          "type": "string"
        },
        "Description": {
          "description": "Gets or sets Change set Description",
          "type": "string"
        },
        "UserName": {
          "description": "Gets or sets Change set UserName",
          "type": "string"
        },
        "Date": {
          "description": "Gets or sets Change set Created Date",
          "type": "string"
        },
        "IsActive": {
          "description": "Gets or sets Is Active",
          "type": "boolean"
        },
        "IsDefault": {
          "description": "Gets or sets Is default",
          "type": "boolean"
        }
      }
    },
    "Webcom.API.Common.Models.PagedDataVM[Webcom.API.SetupSPA.ChangeSet.VM.ChangeSetVM]": {
      "description": "Paged data for provided type",
      "type": "object",
      "properties": {
        "PagedRecords": {
          "description": "List of paged records",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.SetupSPA.ChangeSet.VM.ChangeSetVM"
          }
        },
        "TotalNumberOfRecords": {
          "format": "int32",
          "description": "Total number of records",
          "type": "integer"
        }
      }
    },
    "Webcom.API.SetupSPA.ChangeSet.VM.TenantEnvironmentVM": {
      "type": "object",
      "properties": {
        "Id": { "format": "int32", "type": "integer" },
        "EnvironmentId": { "format": "int32", "type": "integer" },
        "TargetEnvironmentLabel": { "type": "string" }
      }
    },
    "Webcom.API.Public.Clm.ClmMappingsResponse": {
      "description": "ClmMappingsResponse class",
      "type": "object",
      "properties": {
        "Mappings": {
          "description": "Gets or sets the mappings.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.Public.Clm.VM.ClmMappingVM"
          }
        }
      }
    },
    "Webcom.API.Public.Clm.VM.ClmMappingVM": {
      "description": "ClmMappingVM class",
      "type": "object",
      "properties": {
        "CpqObjectType": {
          "format": "int32",
          "description": "Gets or sets the type of the CPQ object.",
          "type": "integer"
        },
        "CpqObject": {
          "description": "Gets or sets the CPQ object.",
          "type": "string"
        },
        "ClmObjectType": {
          "format": "int32",
          "description": "Gets or sets the type of the CLM object.",
          "type": "integer"
        },
        "ClmObject": {
          "description": "Gets or sets the CLM object.",
          "type": "string"
        }
      }
    },
    "Webcom.API.Public.Clm.QuoteCommentResponse": {
      "type": "object",
      "properties": {
        "CartComments": { "type": "array", "items": { "type": "object" } },
        "ItemComments": { "type": "array", "items": { "type": "object" } },
        "Status": { "type": "string" }
      }
    },
    "Webcom.API.Admin.Providers.CLM.CLMFieldMappingsResponse": {
      "description": "CLM Field Mappings Response",
      "type": "object",
      "properties": {
        "Mappings": {
          "description": "Gets or sets the mappings.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.Admin.Providers.CLM.CLMObjectMappingVM"
          }
        },
        "CpqObjectTypes": {
          "description": "Gets or sets the CPQ field types.",
          "type": "array",
          "items": { "$ref": "#/definitions/Webcom.API.IdNamePair" }
        },
        "ClmCustomerObjects": {
          "description": "Gets or sets the CLM customer objects.",
          "type": "array",
          "items": { "type": "string" }
        },
        "ClmContactObjects": {
          "description": "Gets or sets the CLM contact objects.",
          "type": "array",
          "items": { "type": "string" }
        },
        "ClmContractObjects": {
          "description": "Gets or sets the CLM contract objects.",
          "type": "array",
          "items": { "type": "string" }
        },
        "QuoteFields": {
          "description": "Gets or sets the quote fields.",
          "type": "array",
          "items": { "type": "string" }
        },
        "VisitorFields": {
          "description": "Gets or sets the visitor fields.",
          "type": "array",
          "items": { "type": "string" }
        },
        "OwnerFields": {
          "description": "Gets or sets the owner fields.",
          "type": "array",
          "items": { "type": "string" }
        },
        "QuoteCustomFields": {
          "description": "Gets or sets the quote custom fields.",
          "type": "array",
          "items": { "type": "string" }
        },
        "BillToCustomerFields": {
          "description": "Gets or sets the bill to customer fields.",
          "type": "array",
          "items": { "$ref": "#/definitions/Webcom.API.IdNamePair" }
        },
        "ShipToCustomerFields": {
          "description": "Gets or sets the ship to customer fields.",
          "type": "array",
          "items": { "$ref": "#/definitions/Webcom.API.IdNamePair" }
        },
        "EndUserCustomerFields": {
          "description": "Gets or sets the end user customer fields.",
          "type": "array",
          "items": { "$ref": "#/definitions/Webcom.API.IdNamePair" }
        },
        "ErrorMessage": {
          "description": "Gets or sets the error message.",
          "type": "string"
        }
      }
    },
    "Webcom.API.Admin.Providers.CLM.CLMObjectMappingVM": {
      "description": "CLMObjectMappingVM",
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "description": "Gets or sets the identifier.",
          "type": "integer"
        },
        "CpqObjectType": {
          "format": "int32",
          "description": "Gets or sets the type of the CPQ object.",
          "type": "integer"
        },
        "CpqObject": {
          "description": "Gets or sets the CPQ object.",
          "type": "string"
        },
        "ClmObjectType": {
          "format": "int32",
          "description": "Gets or sets the type of the CLM object.",
          "type": "integer"
        },
        "ClmObject": {
          "description": "Gets or sets the CLM object.",
          "type": "string"
        }
      }
    },
    "Webcom.API.Admin.Providers.CLM.CLMFieldMappingsRequest": {
      "description": "CLMFieldMappingsRequest",
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "description": "Gets or sets the identifier.",
          "type": "integer"
        },
        "CpqObjectType": {
          "format": "int32",
          "description": "Gets or sets the type of the CPQ object.",
          "type": "integer"
        },
        "CpqObject": {
          "description": "Gets or sets the CPQ object.",
          "type": "string"
        },
        "ClmObjectType": {
          "format": "int32",
          "description": "Gets or sets the type of the CLM object.",
          "type": "integer"
        },
        "ClmObject": {
          "description": "Gets or sets the CLM object.",
          "type": "string"
        },
        "Direction": {
          "format": "int32",
          "description": "Gets or sets the direction.",
          "type": "integer"
        },
        "ContractType": {
          "description": "Gets or sets the type of the contract.",
          "type": "string"
        }
      }
    },
    "Webcom.API.Admin.Providers.CLM.CLMFieldMappingResponse": {
      "description": "CLMFieldMappingResponse",
      "type": "object",
      "properties": {
        "MappingId": {
          "format": "int32",
          "description": "Gets or sets the mapping identifier.",
          "type": "integer"
        },
        "ErrorMessage": {
          "description": "Gets or sets the error message.",
          "type": "string"
        }
      }
    },
    "Webcom.Configurator.Core.Clm.ClmStatusMapping": {
      "type": "object",
      "properties": {
        "Id": { "format": "int32", "type": "integer" },
        "ContractId": { "format": "int32", "type": "integer" },
        "ContractType": { "type": "string" },
        "CpqStatusId": { "format": "int32", "type": "integer" },
        "ClmStatusId": { "format": "int32", "type": "integer" },
        "ClmStatusName": { "type": "string" },
        "Direction": { "format": "int32", "enum": [0, 1], "type": "integer" },
        "EntityIdentificator": { "type": "string", "readOnly": true },
        "EntityName": { "type": "string", "readOnly": true }
      }
    },
    "Webcom.API.SetupSPA.Company.VM.CompanyVM": {
      "description": "Company VM",
      "type": "object",
      "properties": {
        "Id": { "description": "Id", "type": "string" },
        "Name": { "description": "Name", "type": "string" },
        "SystemId": { "description": "SystemId", "type": "string" },
        "CompanyCode": { "description": "CompanyCode", "type": "string" },
        "CrmAccountId": { "description": "CRMAccountId", "type": "string" },
        "Country": { "description": "Country", "type": "string" },
        "State": { "description": "StateId", "type": "string" },
        "Address1": { "description": "Address1", "type": "string" },
        "Address2": { "description": "Address2", "type": "string" },
        "Zip": { "description": "ZipCode", "type": "string" },
        "Phone": { "description": "Phone", "type": "string" },
        "City": { "description": "City", "type": "string" },
        "Fax": { "description": "Fax", "type": "string" },
        "Email": { "description": "Email", "type": "string" },
        "ImageLogoLink": { "description": "Image logo link", "type": "string" },
        "SelectedPermissions": {
          "description": "permissionIds",
          "type": "array",
          "items": { "format": "int32", "type": "integer" }
        }
      }
    },
    "Webcom.API.Common.Models.PagedDataVM[Webcom.API.SetupSPA.Users.VM.CompanyTableRowVM]": {
      "description": "Paged data for provided type",
      "type": "object",
      "properties": {
        "PagedRecords": {
          "description": "List of paged records",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.SetupSPA.Users.VM.CompanyTableRowVM"
          }
        },
        "TotalNumberOfRecords": {
          "format": "int32",
          "description": "Total number of records",
          "type": "integer"
        }
      }
    },
    "Webcom.API.SetupSPA.Users.VM.CompanyTableRowVM": {
      "description": "Represents view model of company table row",
      "type": "object",
      "properties": {
        "Id": { "format": "int32", "description": "Id", "type": "integer" },
        "Name": { "description": "Name", "type": "string" },
        "CompanyCode": { "description": "Code", "type": "string" },
        "Address": { "description": "Address", "type": "string" },
        "City": { "description": "City", "type": "string" },
        "State": { "description": "State", "type": "string" },
        "Country": { "description": "Country", "type": "string" }
      }
    },
    "Webcom.API.RD.CompareProducts.CompareProductsResponse": {
      "description": "Class CompareProductsResponse",
      "type": "object",
      "properties": {
        "Products": {
          "description": "Gets or sets the products.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.RD.CompareProducts.VM.ProductVM"
          }
        },
        "CurrencySign": {
          "description": "Gets or sets the currency sign.",
          "type": "string"
        },
        "ShowPrices": {
          "description": "Gets or sets a value indicating whether [show prices].",
          "type": "boolean"
        },
        "AttributesWithDifferentValues": {
          "description": "Gets or sets the attributes with different values.",
          "type": "array",
          "items": { "type": "string" }
        },
        "AttributesToCompare": {
          "description": "Gets or sets the attributes to compare.",
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "Webcom.API.RD.CompareProducts.VM.ProductVM": {
      "description": "Class ProductVM",
      "type": "object",
      "properties": {
        "Name": { "description": "Gets or sets the name.", "type": "string" },
        "Description": {
          "description": "Gets or sets the description.",
          "type": "string"
        },
        "PartNumberExistsInPricebook": {
          "description": "Gets or sets a value indicating whether [part number exists in priceboook].",
          "type": "boolean"
        },
        "ProductTypeId": {
          "format": "int32",
          "description": "Gets or sets the product type identifier.",
          "type": "integer"
        },
        "ProductTypeName": {
          "description": "Gets or sets the name of the product type.",
          "type": "string"
        },
        "IsReplaced": {
          "description": "Gets or sets a value indicating whether this instance is replaced.",
          "type": "boolean"
        },
        "PartNumber": {
          "description": "Gets or sets the part number.",
          "type": "string"
        },
        "Upc": { "description": "Gets or sets the upc.", "type": "string" },
        "LongDescription": {
          "description": "Gets or sets the long description.",
          "type": "string"
        },
        "Price": { "description": "Gets or sets the price.", "type": "string" },
        "CanAddToQuote": {
          "description": "Gets or sets a value indicating whether this instance can add to quote.",
          "type": "boolean"
        },
        "CanEnterQty": {
          "description": "Gets or sets a value indicating whether this instance can enter qty.",
          "type": "boolean"
        },
        "CanConfigure": {
          "description": "Gets or sets a value indicating whether this instance can configure.",
          "type": "boolean"
        },
        "Id": {
          "format": "int32",
          "description": "Gets or sets the identifier.",
          "type": "integer"
        },
        "CategoryId": {
          "format": "int32",
          "description": "Gets or sets the category identifier.",
          "type": "integer"
        },
        "CategoryName": {
          "description": "Gets or sets the name of the category.",
          "type": "string"
        },
        "CatalogCode": {
          "description": "Gets or sets the catalog code.",
          "type": "string"
        },
        "Image": { "description": "Gets or sets the image.", "type": "string" },
        "Attributes": {
          "description": "Gets or sets the attributes.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.RD.CompareProducts.VM.AttributeVM"
          }
        },
        "ErrorMessage": {
          "description": "Error message to show for the product in case of an error (eg. no prices available)",
          "type": "string"
        }
      }
    },
    "Webcom.API.RD.CompareProducts.VM.AttributeVM": {
      "description": "Class AttributeVM",
      "type": "object",
      "properties": {
        "Values": {
          "description": "Gets or sets the values.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.RD.CompareProducts.VM.AttributeValueVM"
          }
        },
        "Name": { "description": "Gets or sets the name.", "type": "string" }
      }
    },
    "Webcom.API.RD.CompareProducts.VM.AttributeValueVM": {
      "description": "Class FormulaBuilderAttributeValueVM",
      "type": "object",
      "properties": {
        "Name": { "description": "Gets or sets the name.", "type": "string" },
        "Id": {
          "format": "int32",
          "description": "Gets or sets the identifier.",
          "type": "integer"
        }
      }
    },
    "Webcom.API.RD.Configurator.ConfiguratorResponse": {
      "description": "Class ConfiguratorResponse.",
      "type": "object",
      "properties": {
        "ProductId": {
          "format": "int32",
          "description": "Gets or sets the product identifier.",
          "type": "integer"
        },
        "ProductName": {
          "description": "Gets or sets the product name.",
          "type": "string"
        },
        "ProductSystemId": {
          "description": "Gets or sets the product system id.",
          "type": "string"
        },
        "FavoritesEnabled": {
          "description": "Gets or sets a value indicating whether favorites are enabled.",
          "type": "boolean"
        },
        "ProductFavoritesInfo": {
          "$ref": "#/definitions/Webcom.API.RD.Configurator.ProductFavoritesInfoVM",
          "description": "Gets or sets the product favorites information."
        },
        "CartExists": {
          "description": "Gets or sets a value indicating whether [cart exists].",
          "type": "boolean"
        },
        "SuccessMessage": {
          "description": "Gets or sets the success message.",
          "type": "string"
        },
        "ErrorMessage": {
          "description": "Gets or sets the error message.",
          "type": "string"
        },
        "Value": { "description": "Gets or sets the value.", "type": "string" },
        "StdAttrCode": {
          "format": "int32",
          "description": "Gets or sets the standard attribute code.",
          "type": "integer"
        },
        "CurrencySign": {
          "description": "Gets or sets the currency sign.",
          "type": "string"
        },
        "CanAddToQuote": {
          "description": "Gets or sets a value indicating whether this instance can add to quote.",
          "type": "boolean"
        },
        "IsNestedProduct": {
          "description": "Gets or sets a value indicating whether this instance is nested product.",
          "type": "boolean"
        },
        "IsABS": {
          "description": "Gets or sets a value indicating whether this instance is abs.",
          "type": "boolean"
        },
        "ParentProductName": {
          "description": "Gets or sets the name of the parent product.",
          "type": "string"
        },
        "Completed": {
          "description": "Gets or sets a value indicating whether this {Webcom.API.RD.Configurator.ConfiguratorResponse} is completed.",
          "type": "boolean"
        },
        "HasIncompleteChildren": {
          "description": "Gets or sets a value indicating whether this instance has incomplete children.",
          "type": "boolean"
        },
        "IncompleteMessages": {
          "description": "Gets or sets the incomplete messages.",
          "type": "array",
          "items": { "type": "string" }
        },
        "IncompleteAttributes": {
          "type": "array",
          "items": { "type": "string" }
        },
        "InvalidMessages": { "type": "array", "items": { "type": "string" } },
        "ConfigurationTree": {
          "$ref": "#/definitions/DataModel.Model.ConfigurationTreeItem",
          "description": "Gets or sets the incomplete messages."
        },
        "FailedValidations": {
          "description": "Gets or sets the failed validations.",
          "type": "array",
          "items": { "type": "string" }
        },
        "ErrorMessages": {
          "description": "Gets or sets the product error messages.",
          "type": "array",
          "items": { "type": "string" }
        },
        "ABS": {
          "$ref": "#/definitions/Webcom.API.RD.Configurator.ABSSummaryVM",
          "description": "Gets or sets the abs."
        },
        "Responder": {
          "$ref": "#/definitions/Webcom.API.RD.Configurator.ResponderVM",
          "description": "Gets or sets the responder."
        },
        "Breadcrumbs": {
          "$ref": "#/definitions/Webcom.API.RD.Configurator.BreadcrumbsVM",
          "description": "Gets or sets the breadcrumbs."
        },
        "Tabs": {
          "description": "Gets or sets the tabs.",
          "type": "array",
          "items": { "$ref": "#/definitions/Webcom.API.RD.Configurator.TabVM" }
        },
        "Attributes": {
          "description": "Gets or sets the attributes.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.RD.Configurator.AttributeVM"
          }
        },
        "ConfigurationImport": {
          "$ref": "#/definitions/Webcom.API.RD.Configurator.ConfigurationImportVM",
          "description": "Gets or sets the configuration import."
        },
        "CurrentTemplateName": {
          "description": "Gets or sets the name of the current template.",
          "type": "string"
        },
        "MainItemsNumber": {
          "format": "int32",
          "description": "Gets or sets the number of current quote main items.",
          "type": "integer"
        },
        "HasGuid": {
          "description": "Gets or sets a value indicating whether this instance has unique identifier.",
          "type": "boolean"
        },
        "HiddenAttributes": {
          "description": "Gets or sets the hidden attributes.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.RD.Configurator.VM.Attribute.HiddenAttributeVm"
          }
        },
        "ConflictMessages": {
          "description": "Gets or sets the conflict messages.",
          "type": "array",
          "items": { "type": "string" }
        },
        "ProductNotLoaded": {
          "description": "Gets or sets flag to indicate if Product has been loaded into current Product Logic",
          "type": "boolean"
        },
        "ShouldShowConflictsTab": {
          "description": "Gets or sets flag to indicate if the conflicts tab in responder shoud be shown of not (used for VC integration)",
          "type": "boolean"
        },
        "NumberOfConflicts": {
          "format": "int32",
          "description": "Number of conflicts for the current configuration to be shown in responder (used for VC integration)",
          "type": "integer"
        },
        "IsSapConfigurableProduct": {
          "description": "Gets whether or not this is a configurable SAP product",
          "type": "boolean"
        }
      }
    },
    "Webcom.API.RD.Configurator.ProductFavoritesInfoVM": {
      "type": "object",
      "properties": {
        "IsInFavoriteEditMode": {
          "description": "Gets or sets a value indicating whether this instance is in favorite edit mode.",
          "type": "boolean"
        },
        "ProductName": {
          "description": "Gets or sets the name of the product.",
          "type": "string"
        },
        "ProductDescription": {
          "description": "Gets or sets the product description.",
          "type": "string"
        },
        "AllowToShareWithCompanyUsers": {
          "description": "Gets or sets a value indicating whether is allowed to share favorites with company users].",
          "type": "boolean"
        },
        "AllowToShareWithAllUsers": {
          "description": "Gets or sets a value indicating whether is allowed to share favorites with all users].",
          "type": "boolean"
        },
        "FavoriteId": {
          "format": "int32",
          "description": "Gets or sets the favorite identifier.",
          "type": "integer"
        },
        "FavoriteName": {
          "description": "Gets or sets the name of the favorite.",
          "type": "string"
        },
        "FavoriteDescription": {
          "description": "Gets or sets the favorite description.",
          "type": "string"
        },
        "VisibleToEveryone": {
          "description": "Gets or sets a value indicating whether favorite is visible to everyone.",
          "type": "boolean"
        },
        "VisibleForCompanyId": {
          "format": "int32",
          "description": "Gets or sets the favorite visible for company identifier.",
          "type": "integer"
        },
        "IsFavoriteShared": {
          "description": "Gets or sets a value indicating whether this instance of favorite is shared.",
          "type": "boolean"
        },
        "IsFavoritesVisible": {
          "description": "Gets or sets if favorites functionality should be visible",
          "type": "boolean"
        }
      }
    },
    "DataModel.Model.ConfigurationTreeItem": {
      "type": "object",
      "properties": {
        "Name": { "type": "string" },
        "IsComplete": { "type": "boolean" },
        "HasRequiredAttribute": { "type": "boolean" },
        "ContainerData": {
          "$ref": "#/definitions/DataModel.Model.ConfigurationTreeItem.AdditionalData"
        },
        "IncompleteAttributes": {
          "type": "array",
          "items": { "type": "string" }
        },
        "Children": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DataModel.Model.ConfigurationTreeItem"
          }
        }
      }
    },
    "Webcom.API.RD.Configurator.ABSSummaryVM": {
      "description": "Class ABSSummaryVM.",
      "type": "object",
      "properties": {
        "TotalMatches": {
          "format": "int32",
          "description": "Gets or sets the total matches.",
          "type": "integer"
        },
        "HasPriceRanges": {
          "description": "Gets or sets a value indicating whether this instance has price ranges.",
          "type": "boolean"
        },
        "PriceRanges": {
          "description": "Gets the price ranges.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.Configurator.Config.ABSPriceRange"
          },
          "readOnly": true
        }
      }
    },
    "Webcom.API.RD.Configurator.ResponderVM": {
      "description": "Class ResponderVM.",
      "type": "object",
      "properties": {
        "BaseMRCPrice": {
          "description": "Gets or sets the base MRC price.",
          "type": "string"
        },
        "BaseProductPrice": {
          "description": "Gets or sets the base product price.",
          "type": "string"
        },
        "BasePrice": {
          "description": "Gets or sets the base price.",
          "type": "string"
        },
        "PartNumber": {
          "description": "Gets or sets the part number.",
          "type": "string"
        },
        "Name": {
          "description": "Gets or sets the product name.",
          "type": "string"
        },
        "Description": {
          "description": "Gets or sets the product description.",
          "type": "string"
        },
        "LongDescription": {
          "description": "Gets or sets the product long description.",
          "type": "string"
        },
        "TotalMRCPrice": {
          "description": "Gets or sets the total MRC price.",
          "type": "string"
        },
        "TotalPrice": {
          "description": "Gets or sets the total price.",
          "type": "string"
        },
        "TotalPriceMissingError": {
          "description": "Gets or sets the total price missing error.",
          "type": "string"
        },
        "LineItems": {
          "description": "Gets or sets the line items.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.RD.Configurator.ResponderLineItemVM"
          }
        },
        "Attributes": {
          "description": "Gets or sets the attributes.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.RD.Configurator.ResponderAttributeVM"
          }
        },
        "ResponderTemplateName": {
          "description": "Gets or sets the name of the responder template.",
          "type": "string"
        },
        "ProductImage": {
          "description": "Gets or sets the product image path.",
          "type": "string"
        },
        "HideResetConfiguration": {
          "description": "Hide ResetConfiguration icon in the responder.",
          "type": "boolean"
        },
        "ExtendedBasePrice": {
          "description": "Gets or sets Extended Base Price",
          "type": "string"
        },
        "ExtendedBaseMRCPrice": {
          "description": "Gets or sets Extended Base MRC Price",
          "type": "string"
        }
      }
    },
    "Webcom.API.RD.Configurator.BreadcrumbsVM": {
      "description": "Class BreadcrumbsVM.",
      "type": "object",
      "properties": {
        "Items": {
          "description": "Gets or sets the items.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.RD.Configurator.BreadcrumbItemVM"
          }
        },
        "ShowCurrentCart": {
          "description": "Gets or sets a value indicating whether [show current cart].",
          "type": "boolean"
        }
      }
    },
    "Webcom.API.RD.Configurator.TabVM": {
      "description": "Class TabVM.",
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "description": "Gets or sets the identifier.",
          "type": "integer"
        },
        "IsIncomplete": {
          "description": "Gets or sets a value indicating whether this instance is incomplete.",
          "type": "boolean"
        },
        "IsSelected": {
          "description": "Gets or sets a value indicating whether this instance is selected.",
          "type": "boolean"
        },
        "Name": { "description": "Gets or sets the name.", "type": "string" },
        "DisplayName": {
          "description": "Gets or sets the display name.",
          "type": "string"
        }
      }
    },
    "Webcom.API.RD.Configurator.AttributeVM": {
      "description": "Class AttributeVM.",
      "type": "object",
      "properties": {
        "Name": { "description": "Gets or sets the name.", "type": "string" },
        "Description": {
          "description": "Gets or sets the description.",
          "type": "string"
        },
        "PA_ID": {
          "format": "int32",
          "description": "Gets or sets the p a_ identifier.",
          "type": "integer"
        },
        "DisplayAs": {
          "format": "int32",
          "description": "Gets or sets the display as.",
          "type": "integer"
        },
        "Hint": { "description": "Gets or sets the hint.", "type": "string" },
        "Incomplete": {
          "description": "Gets or sets a value indicating whether this {Webcom.API.RD.Configurator.AttributeVM} is incomplete.",
          "type": "boolean"
        },
        "Required": {
          "description": "Gets or sets a value indicating whether this {Webcom.API.RD.Configurator.AttributeVM} is required.",
          "type": "boolean"
        },
        "Label": { "description": "Gets or sets the label.", "type": "string" },
        "StdAttrCode": {
          "format": "int32",
          "description": "Gets or sets the standard attribute code.",
          "type": "integer"
        },
        "DataType": {
          "description": "Gets or sets the type of the data.",
          "type": "string"
        },
        "MLR": {
          "format": "int32",
          "description": "Gets or sets the MLR.",
          "type": "integer"
        },
        "MLC": {
          "format": "int32",
          "description": "Gets or sets the MLC.",
          "type": "integer"
        },
        "UserInput": {
          "description": "Gets or sets the user input.",
          "type": "string"
        },
        "Quantity": {
          "description": "Gets or sets the quantity.",
          "type": "string"
        },
        "IsWholeRow": {
          "description": "Gets or sets a value indicating whether this instance is whole row.",
          "type": "boolean"
        },
        "IsEnabled": {
          "description": "Gets or sets a value indicating whether this instance is enabled.",
          "type": "boolean"
        },
        "IsLineItem": {
          "description": "Gets or sets a value indicating whether this instance is line item.",
          "type": "boolean"
        },
        "Container": {
          "$ref": "#/definitions/Webcom.API.RD.Configurator.ContainerVM",
          "description": "Gets or sets the container."
        },
        "DrillDown": {
          "$ref": "#/definitions/Webcom.API.RD.Configurator.DrillDownVM",
          "description": "Gets or sets the drill down."
        },
        "AutoComplete": {
          "$ref": "#/definitions/Webcom.API.RD.Configurator.AutoCompleteItemVM",
          "description": "Gets or sets the auto-complete."
        },
        "Values": {
          "description": "Gets or sets the values.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.RD.Configurator.AttributeValueVM"
          }
        },
        "ValidationMessage": {
          "description": "Message that sould be displayed if validation fails",
          "type": "string"
        },
        "ValidationRules": {
          "description": "Validation rules for numeric attributes",
          "type": "array",
          "items": { "type": "string" }
        },
        "HasConflict": {
          "description": "Flag that indicates whether the attribute has conflict or not (used for VC integration)",
          "type": "boolean"
        }
      }
    },
    "Webcom.API.RD.Configurator.ConfigurationImportVM": {
      "description": "Class ConfigurationImportVM.",
      "type": "object",
      "properties": {
        "ShowProductConfigurationTemplate": {
          "description": "Gets or sets a value indicating whether [show product configuration template].",
          "type": "boolean"
        },
        "AllowConfigurationImport": {
          "description": "Gets or sets a value indicating whether [allow configuration import].",
          "type": "boolean"
        },
        "ConfigurationTemplate": {
          "description": "Gets or sets the configuration template.",
          "type": "string"
        },
        "ConfigurationFileName": {
          "description": "Gets or sets the name of the configuration file.",
          "type": "string"
        }
      }
    },
    "Webcom.API.RD.Configurator.VM.Attribute.HiddenAttributeVm": {
      "description": "Hidden attribute View Model",
      "type": "object",
      "properties": {
        "StdAttrCode": {
          "format": "int32",
          "description": "Gets or sets the standard attribute code.",
          "type": "integer"
        },
        "Name": {
          "description": "Gets or sets the name of attribute.",
          "type": "string"
        },
        "PA_ID": {
          "format": "int32",
          "description": "Gets or sets the product attribute identifier.",
          "type": "integer"
        },
        "Label": { "description": "Gets or sets the label.", "type": "string" },
        "Hint": { "description": "Gets or sets the hint.", "type": "string" },
        "UserInput": {
          "description": "Gets or sets the user input.",
          "type": "string"
        },
        "Quantity": {
          "description": "Gets or sets the quantity.",
          "type": "string"
        }
      }
    },
    "DataModel.Model.ConfigurationTreeItem.AdditionalData": {
      "type": "object",
      "properties": {
        "RowId": { "format": "int32", "type": "integer" },
        "AttributeCode": { "format": "int32", "type": "integer" }
      }
    },
    "Webcom.Configurator.Config.ABSPriceRange": {
      "type": "object",
      "properties": {
        "Id": { "format": "int32", "type": "integer" },
        "Lower": { "type": "string" },
        "Upper": { "type": "string" },
        "NumberOfProducts": { "format": "int32", "type": "integer" },
        "IsSelected": { "type": "boolean" },
        "NotComplete": { "type": "boolean" }
      }
    },
    "Webcom.API.RD.Configurator.ResponderLineItemVM": {
      "description": "Class ResponderLineItemVM.",
      "type": "object",
      "properties": {
        "DisplayValue": {
          "description": "Gets or sets the display value.",
          "type": "string"
        },
        "Label": { "description": "Gets or sets the label.", "type": "string" },
        "StdAttrCode": {
          "format": "int32",
          "description": "Gets or sets the standard attribute code.",
          "type": "integer"
        },
        "Name": {
          "description": "Gets or sets the Product attribute name.",
          "type": "string"
        },
        "PAV_ID": {
          "format": "int32",
          "description": "Gets or sets the pa v_ identifier.",
          "type": "integer"
        },
        "Quantity": {
          "description": "Gets or sets the quantity.",
          "type": "string"
        },
        "PartNumber": {
          "description": "Gets or sets the part number.",
          "type": "string"
        },
        "Price": { "description": "Gets or sets the price.", "type": "string" },
        "RecurringPrice": {
          "description": "Gets or sets the recurring price.",
          "type": "string"
        },
        "BasePrice": {
          "description": "Gets or sets the base price.",
          "type": "string"
        },
        "MissingPriceBook": {
          "description": "Gets or sets a value indicating whether [missing price book].",
          "type": "boolean"
        },
        "ShowOneTimePrice": {
          "description": "Gets or sets a value indicating whether [show one time price].",
          "type": "boolean"
        },
        "ShowRecurringPrice": {
          "description": "Gets or sets a value indicating whether [show recurring price].",
          "type": "boolean"
        },
        "CustomLabel": {
          "description": "Gets or sets the custom label.",
          "type": "string"
        },
        "Inconsistent": {
          "description": "Gets or sets inconsitency for CPS characteristic (CPQ attribute)",
          "type": "boolean"
        }
      }
    },
    "Webcom.API.RD.Configurator.ResponderAttributeVM": {
      "description": "Class ResponderAttributeVM.",
      "type": "object",
      "properties": {
        "Label": { "description": "Gets or sets the label.", "type": "string" },
        "Name": { "description": "Gets or sets the name.", "type": "string" },
        "Description": {
          "description": "Gets or sets the description.",
          "type": "string"
        },
        "Quantity": {
          "description": "Gets or sets the quantity.",
          "type": "string"
        },
        "StdAttrCode": {
          "format": "int32",
          "description": "Gets or sets the standard attribute code.",
          "type": "integer"
        },
        "ShowOneTimePrice": {
          "description": "Gets or sets a value indicating whether [show one time price].",
          "type": "boolean"
        },
        "ShowRecurringPrice": {
          "description": "Gets or sets a value indicating whether [show recurring price].",
          "type": "boolean"
        },
        "TotalAttributePrice": {
          "description": "Gets or sets the total attribute price.",
          "type": "string"
        },
        "TotalAttributeRecurringPrice": {
          "description": "Gets or sets the total attribute recurring price.",
          "type": "string"
        },
        "TotalAttributeExtendedPrice": {
          "description": "Gets or sets the total attribute extended price.",
          "type": "string"
        },
        "TotalAttributeExtendedRecurringPrice": {
          "description": "Gets or sets the total attribute extended recurring price.",
          "type": "string"
        },
        "Values": {
          "description": "Gets or sets the values.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.RD.Configurator.ResponderAttributeValueVM"
          }
        },
        "CustomLabel": {
          "description": "Gets or sets the custom label.",
          "type": "string"
        },
        "Inconsistent": {
          "description": "Gets or sets the inconsitency of CPS characteristic (CPQ attribute)",
          "type": "boolean"
        },
        "Conflicts": {
          "description": "Gets or sets the conflicts arrived from CPS",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.RD.Configurator.ConflictVM"
          }
        },
        "IsVCAttribute": {
          "description": "Gets or sets the info whether the attribute is a VC attribute or not",
          "type": "boolean"
        }
      }
    },
    "Webcom.API.RD.Configurator.BreadcrumbItemVM": {
      "description": "Class BreadcrumbItemVM.",
      "type": "object",
      "properties": {
        "Name": { "description": "Gets or sets the name.", "type": "string" },
        "Url": { "description": "Gets or sets the URL.", "type": "string" }
      }
    },
    "Webcom.API.RD.Configurator.ContainerVM": {
      "description": "Class ContainerVM.",
      "type": "object",
      "properties": {
        "AllowMultipleCopy": {
          "description": "Gets or sets a value indicating whether [allow multiple copy].",
          "type": "boolean"
        },
        "CanAddNewRows": {
          "description": "Gets or sets a value indicating whether this instance can add new rows.",
          "type": "boolean"
        },
        "CanReorderRows": {
          "description": "Gets or sets a value indicating whether this instance can reorder rows.",
          "type": "boolean"
        },
        "HasActions": {
          "description": "Gets or sets a value indicating whether this instance has actions.",
          "type": "boolean"
        },
        "HasAnyFooterLabel": {
          "description": "Gets or sets a value indicating whether this instance has any footer label.",
          "type": "boolean"
        },
        "HasAnyTotal": {
          "description": "Gets or sets a value indicating whether this instance has any total.",
          "type": "boolean"
        },
        "HasPaging": {
          "description": "Gets or sets a value indicating whether this instance has paging.",
          "type": "boolean"
        },
        "CurrentPage": {
          "format": "int32",
          "description": "Gets or sets the current page.",
          "type": "integer"
        },
        "PageSize": {
          "format": "int32",
          "description": "Gets or sets the size of the page.",
          "type": "integer"
        },
        "TotalNumberOfRows": {
          "format": "int32",
          "description": "Gets or sets the total number of rows.",
          "type": "integer"
        },
        "HasSelectionColumn": {
          "description": "Gets or sets a value indicating whether this instance has selection column.",
          "type": "boolean"
        },
        "NumberOfSelectedRows": {
          "format": "int32",
          "description": "Gets or sets the number of selected rows.",
          "type": "integer"
        },
        "ShowOnlySelectedRows": {
          "description": "Gets or sets a value indicating whether [show only selected rows].",
          "type": "boolean"
        },
        "TotalNumberOfShownRows": {
          "format": "int32",
          "description": "Gets or sets the total number of shown rows.",
          "type": "integer"
        },
        "Columns": {
          "description": "Gets or sets the columns.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.RD.Configurator.ContainerColumnVM"
          }
        },
        "HiddenColumns": {
          "description": "Gets or sets the hidden columns.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.RD.Configurator.ContainerColumnVM"
          }
        },
        "Properties": {
          "description": "Gets or sets the properties.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.RD.Configurator.VM.Container.ContainerPropertyVM"
          }
        },
        "Rows": {
          "description": "Gets or sets the rows.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.RD.Configurator.ContainerRowVM"
          }
        },
        "FailedValidations": {
          "description": "Gets the failed validations.",
          "type": "array",
          "items": { "type": "string" },
          "readOnly": true
        },
        "Products": {
          "description": "Gets the products.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.RD.Configurator.ContainerProductVM"
          },
          "readOnly": true
        },
        "ShowProductPickerList": {
          "description": "Gets or sets a value indicating whether product picker list should be shown.",
          "type": "boolean"
        },
        "SortColumnId": {
          "format": "int32",
          "description": "Gets or sets an id of the sort column.",
          "type": "integer"
        },
        "SortDescending": {
          "description": "Gets or sets a value indicating whether container is sorted din descending order.",
          "type": "boolean"
        }
      }
    },
    "Webcom.API.RD.Configurator.DrillDownVM": {
      "description": "Class DrillDownVM.",
      "type": "object",
      "properties": {
        "MatchCount": {
          "format": "int32",
          "description": "Gets or sets the match count.",
          "type": "integer"
        },
        "ErrorMessage": {
          "description": "Gets or sets the error message.",
          "type": "string"
        },
        "Columns": {
          "description": "Gets or sets the columns.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.RD.Configurator.DrillDownColumnVM"
          }
        }
      }
    },
    "Webcom.API.RD.Configurator.AttributeValueVM": {
      "description": "Class FormulaBuilderAttributeValueVM.",
      "type": "object",
      "properties": {
        "ImageOff": {
          "description": "Gets or sets the image off.",
          "type": "string"
        },
        "ImageOn": {
          "description": "Gets or sets the image on.",
          "type": "string"
        },
        "PAV_ID": {
          "format": "int32",
          "description": "Gets or sets the pa v_ identifier.",
          "type": "integer"
        },
        "ProductSystemId": {
          "description": "Gets or sets the product system id.",
          "type": "string"
        },
        "Selected": {
          "description": "Gets or sets a value indicating whether this {Webcom.API.RD.Configurator.AttributeValueVM} is selected.",
          "type": "boolean"
        },
        "ValueDisplay": {
          "description": "Gets or sets the value display.",
          "type": "string"
        },
        "Quantity": {
          "description": "Gets or sets the quantity.",
          "type": "string"
        },
        "Description": {
          "description": "Gets or sets the description.",
          "type": "string"
        },
        "Price": { "description": "Gets or sets the price.", "type": "string" },
        "RelativePrice": {
          "description": "Gets or sets the relative price.",
          "type": "string"
        },
        "IsRelativePriceBigger": {
          "description": "Gets or sets a value indicating whether this instance is relative price bigger then selected.",
          "type": "boolean"
        },
        "RecurringPrice": {
          "description": "Gets or sets the recurring price.",
          "type": "string"
        },
        "ValueCode": {
          "description": "Gets or sets the value code.",
          "type": "string"
        }
      }
    },
    "Webcom.API.RD.Configurator.ResponderAttributeValueVM": {
      "description": "Class ResponderAttributeValueVM.",
      "type": "object",
      "properties": {
        "DisplayValue": {
          "description": "Gets or sets the display value.",
          "type": "string"
        },
        "Price": { "description": "Gets or sets the price.", "type": "string" },
        "RecurringPrice": {
          "description": "Gets or sets the recurring price.",
          "type": "string"
        },
        "ExtendedPrice": {
          "description": "Gets or sets the extended price.",
          "type": "string"
        },
        "ExtendedRecurringPrice": {
          "description": "Gets or sets the extended recurring price.",
          "type": "string"
        },
        "Quantity": {
          "description": "Gets or sets the quantity.",
          "type": "string"
        },
        "PAV_ID": {
          "format": "int32",
          "description": "Gets or sets the pa v_ identifier.",
          "type": "integer"
        },
        "Description": {
          "description": "Gets or sets the description.",
          "type": "string"
        },
        "MissingPriceBook": {
          "description": "Gets or sets a value indicating whether [missing price book].",
          "type": "boolean"
        }
      }
    },
    "Webcom.API.RD.Configurator.ConflictVM": {
      "description": "Conflict view model",
      "type": "object",
      "properties": {
        "Name": { "description": "Conflict name", "type": "string" },
        "Explanation": {
          "description": "Conflict explanation",
          "type": "string"
        }
      }
    },
    "Webcom.API.RD.Configurator.ContainerColumnVM": {
      "description": "Class ContainerColumnVM.",
      "type": "object",
      "properties": {
        "ColumnId": {
          "format": "int32",
          "description": "Gets or sets the column identifier.",
          "type": "integer"
        },
        "HeaderLabel": {
          "description": "Gets or sets the header label.",
          "type": "string"
        },
        "FooterLabel": {
          "description": "Gets or sets the footer label.",
          "type": "string"
        },
        "TotalValue": {
          "description": "Gets or sets the total value.",
          "type": "string"
        },
        "ReferencedStdAttrCode": {
          "format": "int32",
          "description": "Gets or sets the standard attribute code of referenced attribute.",
          "type": "integer"
        },
        "IsAutocomplete": {
          "description": "Gets or sets flag indicating column is autocomplete.",
          "type": "boolean"
        },
        "ColumnsToDisplay": {
          "description": "Gets or sets columns to display for autocomplete",
          "type": "string"
        }
      }
    },
    "Webcom.API.RD.Configurator.VM.Container.ContainerPropertyVM": {
      "description": "Class ContainerPropertyVM.",
      "type": "object",
      "properties": {
        "Name": {
          "description": "Gets or sets the container property name.",
          "type": "string"
        },
        "Value": {
          "description": "Gets or sets the container property parsed value.",
          "type": "string"
        }
      }
    },
    "Webcom.API.RD.Configurator.ContainerRowVM": {
      "description": "Class ContainerRowVM.",
      "type": "object",
      "properties": {
        "RowIndex": {
          "format": "int32",
          "description": "Gets or sets the index of the row.",
          "type": "integer"
        },
        "CanDelete": {
          "description": "Gets or sets a value indicating whether this instance can delete.",
          "type": "boolean"
        },
        "CanEdit": {
          "description": "Gets or sets a value indicating whether this instance can edit.",
          "type": "boolean"
        },
        "CanCopy": {
          "description": "Gets or sets a value indicating whether this instance can copy.",
          "type": "boolean"
        },
        "IsSelected": {
          "description": "Gets or sets a value indicating whether this instance is selected.",
          "type": "boolean"
        },
        "Values": {
          "description": "Gets the values.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.RD.Configurator.ContainerRowValueVM"
          },
          "readOnly": true
        },
        "HiddenValues": {
          "description": "Gets the hidden values.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.RD.Configurator.ContainerRowValueVM"
          },
          "readOnly": true
        }
      }
    },
    "Webcom.API.RD.Configurator.ContainerProductVM": {
      "description": "Class ContainerProductVM.",
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "description": "Gets or sets the identifier.",
          "type": "integer"
        },
        "Name": { "description": "Gets or sets the name.", "type": "string" }
      }
    },
    "Webcom.API.RD.Configurator.DrillDownColumnVM": {
      "description": "Class DrillDownColumnVM.",
      "type": "object",
      "properties": {
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        },
        "Type": {
          "format": "int32",
          "description": "Gets or sets the type.",
          "enum": [0, 1, 2],
          "type": "integer"
        },
        "Label": { "description": "Gets or sets the label.", "type": "string" },
        "IsEnabled": {
          "description": "Gets or sets a value indicating whether this instance is enabled.",
          "type": "boolean"
        },
        "CurrentValue": {
          "description": "Gets or sets the current value.",
          "type": "string"
        },
        "Values": {
          "description": "Gets or sets the values.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/System.Collections.Generic.KeyValuePair[System.String,System.String]"
          }
        },
        "ImageUrls": {
          "description": "Gets or sets the image urls.",
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "Webcom.API.RD.Configurator.ContainerRowValueVM": {
      "description": "Class ContainerRowValueVM.",
      "type": "object",
      "properties": {
        "ColumnId": {
          "format": "int32",
          "description": "Gets or sets the column identifier.",
          "type": "integer"
        },
        "EntityId": {
          "format": "int32",
          "description": "Gets or sets autocomplete selected entity id .",
          "type": "integer"
        },
        "IsEmpty": {
          "description": "Gets or sets a value indicating whether this instance is empty.",
          "type": "boolean"
        },
        "IsSelected": {
          "description": "Gets or sets a value indicating whether any attribute value of reference attribute is selected.",
          "type": "boolean"
        },
        "DisplayType": {
          "format": "int32",
          "description": "Gets or sets the display type.",
          "type": "integer"
        },
        "DataType": {
          "format": "int32",
          "description": "Gets or sets the type of the data.",
          "type": "integer"
        },
        "Value": { "description": "Gets or sets the value.", "type": "string" },
        "Options": {
          "description": "Gets the options.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.RD.Configurator.ContainerRowValueOptionVM"
          },
          "readOnly": true
        }
      }
    },
    "Webcom.API.RD.Configurator.ContainerRowValueOptionVM": {
      "description": "Class ContainerRowValueOptionVM.",
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "description": "Gets or sets the identifier.",
          "type": "integer"
        },
        "DisplayValue": {
          "description": "Gets or sets the display value.",
          "type": "string"
        },
        "IsSelected": {
          "description": "Gets or sets a value indicating whether this instance is selected.",
          "type": "boolean"
        }
      }
    },
    "Webcom.API.RD.Configurator.VM.ConfigurationTree.ConfigurationTreeVM": {
      "type": "object",
      "properties": {
        "Name": { "type": "string" },
        "IsComplete": { "type": "boolean" },
        "IsSelected": { "type": "boolean" },
        "HasRequiredAttribute": { "type": "boolean" },
        "HasIncompleteChildren": { "type": "boolean" },
        "ContainerData": {
          "$ref": "#/definitions/Webcom.API.RD.Configurator.VM.ConfigurationTree.ContainerDataVM"
        },
        "IncompleteAttributes": {
          "type": "array",
          "items": { "type": "string" }
        },
        "Children": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.RD.Configurator.VM.ConfigurationTree.ConfigurationTreeVM"
          }
        }
      }
    },
    "Webcom.API.RD.Configurator.VM.ConfigurationTree.ContainerDataVM": {
      "type": "object",
      "properties": {
        "RowId": { "format": "int32", "type": "integer" },
        "AttributeCode": { "format": "int32", "type": "integer" },
        "PavId": { "format": "int32", "type": "integer" },
        "UniqueIdentifier": { "type": "string" },
        "CanEditRows": { "type": "boolean" }
      }
    },
    "Webcom.API.RD.Configurator.VM.Responder.ConflictSummaryVM": {
      "description": "Conflict summary view model",
      "type": "object",
      "properties": {
        "Conflicts": {
          "description": "List of conflicts details",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.RD.Configurator.VM.Responder.ConflictTabVM"
          }
        }
      }
    },
    "Webcom.API.RD.Configurator.VM.Responder.ConflictTabVM": {
      "description": "Conflict view model for VC integration shown in the conflict summary tab",
      "type": "object",
      "properties": {
        "AttributeName": {
          "description": "Product attribute name",
          "type": "string"
        },
        "StandardAttributeCode": {
          "format": "int32",
          "description": "Standard attribute code",
          "type": "integer"
        },
        "Messages": {
          "description": "Conflict explanation",
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "Webcom.API.RD.GeoIP.GeoIPLoginRequest": {
      "description": "Login request for user from Honey pot \r\nHoney pot intercepts submit on Login form, repacks and validates user \r\nand then sends this model to our GeoIP api",
      "type": "object",
      "properties": {
        "Auth": {
          "description": "Honey pot authorization, this code will be saved somewhere",
          "type": "string"
        },
        "Headers": { "description": "Login form Headers", "type": "string" },
        "FormData": {
          "description": "Login form submitted data",
          "type": "string"
        },
        "CreateSession": {
          "description": "Create and return session",
          "type": "boolean"
        },
        "DisableUser": {
          "description": "Signal for disabling user (this is used for prevention of fraud (VPN or similar proxy))",
          "type": "boolean"
        }
      }
    },
    "Webcom.API.RD.GeoIP.GeoIPLoginResponse": {
      "description": "Model returned to Honey pot after validating user",
      "type": "object",
      "properties": {
        "UserValid": { "type": "boolean" },
        "UserDisabled": {
          "description": "User is not Active?",
          "type": "boolean"
        },
        "Cookies": {
          "description": "Standard cookies collection (asp session and so on)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.RD.GeoIP.GeoIPLoginResponseCookie"
          }
        },
        "Response": {
          "description": "This is response message (in our case standard text if login failed)",
          "type": "string"
        },
        "ResponseHeaders": {
          "description": "Response headers to be added to users next requests (session id and so on)",
          "type": "string"
        },
        "Redirect": {
          "description": "Redirect address after successful login",
          "type": "string"
        },
        "Company": {
          "description": "Users Company, this is important because Honey pot allows some companies in restricted countries",
          "type": "string"
        }
      }
    },
    "Webcom.API.RD.GeoIP.GeoIPLoginResponseCookie": {
      "description": "Modified Response Cookie (difference is in Expiration Time format)",
      "type": "object",
      "properties": {
        "Name": {
          "description": "Gets or sets the name of a cookie.",
          "type": "string"
        },
        "Path": {
          "description": "Gets or sets the virtual path to transmit with the current cookie.",
          "type": "string"
        },
        "Secure": {
          "description": "Gets or sets a value indicating whether to transmit the cookie using Secure Sockets\r\nLayer (SSL)--that is, over HTTPS only.",
          "type": "boolean"
        },
        "Shareable": {
          "description": "Determines whether the cookie is allowed to participate in output caching.",
          "type": "boolean"
        },
        "HttpOnly": {
          "description": "Gets or sets a value that specifies whether a cookie is accessible by client-side\r\n    script.",
          "type": "boolean"
        },
        "Domain": {
          "description": "Gets or sets the domain to associate the cookie with.",
          "type": "string"
        },
        "Expires": {
          "description": "Gets or sets the expiration date and time for the cookie.",
          "type": "string"
        },
        "Value": {
          "description": "Gets or sets an individual cookie value.",
          "type": "string"
        }
      }
    },
    "Webcom.API.Admin.Providers.CLM.ClmQuoteItemColumnMapping": {
      "type": "object",
      "properties": {
        "templateId": { "format": "int32", "type": "integer" },
        "selectedColumnIds": {
          "type": "array",
          "items": { "format": "int32", "type": "integer" }
        }
      }
    },
    "Webcom.API.SetupSPA.Customers.VM.CustomerVM": {
      "description": "Customer VM",
      "type": "object",
      "properties": {
        "Id": { "format": "int32", "description": "Id", "type": "integer" },
        "Password": { "description": "Password", "type": "string" },
        "FirstName": { "description": "First name", "type": "string" },
        "LastName": { "description": "Last name", "type": "string" },
        "Email": { "description": "Email", "type": "string" },
        "Address1": { "description": "Address 1", "type": "string" },
        "Address2": { "description": "Address 2", "type": "string" },
        "City": { "description": "City", "type": "string" },
        "Country": { "description": "Country", "type": "string" },
        "State": { "description": "State", "type": "string" },
        "Province": { "description": "Province", "type": "string" },
        "BusinessPhone": { "description": "Phone", "type": "string" },
        "BusinessFax": { "description": "Fax", "type": "string" },
        "ZipCode": { "description": "ZIP code", "type": "string" },
        "Title": { "description": "Title", "type": "string" }
      }
    },
    "Webcom.API.Public.Customers.CustomerMappingsApiResponse": {
      "type": "object",
      "properties": {
        "BillTo": {
          "$ref": "#/definitions/Webcom.API.Public.Customers.VM.CustomerMappingVM",
          "description": "Gets or sets the bill to."
        },
        "ShipTo": {
          "$ref": "#/definitions/Webcom.API.Public.Customers.VM.CustomerMappingVM",
          "description": "Gets or sets the ship to."
        },
        "EndUser": {
          "$ref": "#/definitions/Webcom.API.Public.Customers.VM.CustomerMappingVM",
          "description": "Gets or sets the end user."
        }
      }
    },
    "Webcom.API.Public.Customers.VM.CustomerMappingVM": {
      "type": "object",
      "properties": {
        "Account": {
          "$ref": "#/definitions/Webcom.API.Public.Customers.VM.AccountVM",
          "description": "Gets or sets the account."
        },
        "Contact": {
          "$ref": "#/definitions/Webcom.API.Public.Customers.VM.ContactVM",
          "description": "Gets or sets the contact."
        }
      }
    },
    "Webcom.API.Public.Customers.VM.AccountVM": {
      "type": "object",
      "properties": {
        "Fields": {
          "type": "array",
          "items": { "$ref": "#/definitions/Webcom.API.NameValuePair" }
        },
        "AccountObject": {
          "description": "Gets or sets the account object.",
          "type": "string"
        }
      }
    },
    "Webcom.API.Public.Customers.VM.ContactVM": {
      "type": "object",
      "properties": {
        "Fields": {
          "type": "array",
          "items": { "$ref": "#/definitions/Webcom.API.NameValuePair" }
        },
        "ContactObject": {
          "description": "Gets or sets the contact object.",
          "type": "string"
        }
      }
    },
    "Webcom.API.RD.Cart.CustomerFeedback.VM.CustomerFeedbackVM": {
      "type": "object",
      "properties": {
        "Comment": {
          "$ref": "#/definitions/Webcom.API.RD.Cart.CustomerFeedback.VM.QuoteCommentVM"
        },
        "LineItemTitle": { "type": "string" },
        "IsLineItemComment": { "type": "boolean" }
      }
    },
    "Webcom.API.RD.Cart.CustomerFeedback.VM.QuoteCommentVM": {
      "type": "object",
      "properties": {
        "Id": { "format": "int32", "type": "integer" },
        "IsMyComment": { "type": "boolean" },
        "UserFullName": { "type": "string" },
        "UserEmail": { "type": "string" },
        "UserCompany": { "type": "string" },
        "DateCreated": {
          "description": "Date in user format (Ex.24-May-1988)",
          "type": "string"
        },
        "TimeCreated": {
          "description": "Time of comment (Ex. 3:51 PM)",
          "type": "string"
        },
        "CommentText": { "type": "string" }
      }
    },
    "Webcom.API.RD.Cart.CustomerFeedback.CustomerFeedbackComment": {
      "type": "object",
      "properties": {
        "CommentText": { "type": "string" },
        "ItemNumber": { "format": "int32", "type": "integer" }
      }
    },
    "Webcom.API.RD.Customers.CustomerRoleResponse": {
      "description": "Class CustomerRoleResponse.",
      "type": "object",
      "properties": {
        "Customer": {
          "$ref": "#/definitions/Webcom.API.RD.Customers.CustomerVM",
          "description": "Gets or sets the customer."
        },
        "CustomerActions": {
          "description": "Gets or sets the customer actions.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.RD.Customers.CustomerActionVM"
          }
        },
        "ErrorMessage": {
          "description": "Gets or sets the error message.",
          "type": "string"
        },
        "HasError": {
          "description": "Gets or sets a value indicating whether this instance has error.",
          "type": "boolean"
        },
        "IsEditMode": {
          "description": "Gets or sets a value indicating whether this instance is edit mode.",
          "type": "boolean"
        },
        "CustomerAddedMessage": {
          "description": "Gets or sets the customer added message.",
          "type": "string"
        },
        "ShowCopyToBillTo": {
          "description": "Gets or sets a value indicating whether [show copy to bill to].",
          "type": "boolean"
        },
        "ShowCopyToShipTo": {
          "description": "Gets or sets a value indicating whether [show copy to ship to].",
          "type": "boolean"
        },
        "ShowCopyToEndTo": {
          "description": "Gets or sets a value indicating whether [show copy to end to].",
          "type": "boolean"
        },
        "IsCustomerBlockedFromDeletion": {
          "description": "Gets or sets a value indicating whether customer is blocked due data protection.",
          "type": "boolean"
        }
      }
    },
    "Webcom.API.RD.Customers.CustomerVM": {
      "description": "Class CustomerVM.",
      "type": "object",
      "properties": {
        "Fields": {
          "description": "Gets or sets the fields.",
          "type": "array",
          "items": { "$ref": "#/definitions/Webcom.API.RD.Customers.FieldVM" }
        },
        "Id": {
          "format": "int32",
          "description": "Gets or sets the identifier.",
          "type": "integer"
        },
        "RoleName": {
          "description": "Gets or sets the name of the role.",
          "type": "string"
        },
        "RoleType": {
          "format": "int32",
          "description": "Gets or sets the type of the role.",
          "type": "integer"
        },
        "Values": {
          "description": "Gets the values.",
          "type": "array",
          "items": { "type": "string" },
          "readOnly": true
        },
        "BlockedFromDeletion": {
          "description": "Gets the BlockedFromDeletion.",
          "type": "boolean"
        }
      }
    },
    "Webcom.API.RD.Customers.CustomerActionVM": {
      "description": "Class CustomerActionVM.",
      "type": "object",
      "properties": {
        "ActionId": {
          "format": "int32",
          "description": "Gets or sets the action identifier.",
          "type": "integer"
        },
        "Image": { "description": "Gets or sets the image.", "type": "string" },
        "Label": { "description": "Gets or sets the label.", "type": "string" }
      }
    },
    "Webcom.API.RD.Customers.FieldVM": {
      "description": "Class FieldVM.",
      "type": "object",
      "properties": {
        "ContentId": {
          "format": "int32",
          "description": "Gets or sets the content identifier.",
          "type": "integer"
        },
        "Editable": {
          "description": "Gets or sets a value indicating whether this {Webcom.API.RD.Customers.FieldVM} is editable.",
          "type": "boolean"
        },
        "FieldId": {
          "description": "Gets or sets the field identifier.",
          "type": "string"
        },
        "IsListItem": {
          "description": "Gets or sets a value indicating whether this instance is list item.",
          "type": "boolean"
        },
        "IsRequired": {
          "description": "Gets or sets a value indicating whether this instance is required.",
          "type": "boolean"
        },
        "Items": {
          "description": "Gets or sets the items.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.RD.Customers.OptionItemVM"
          }
        },
        "Label": { "description": "Gets or sets the label.", "type": "string" },
        "Value": { "description": "Gets or sets the value.", "type": "string" }
      }
    },
    "Webcom.API.RD.Customers.OptionItemVM": {
      "description": "Class OptionItemVM.",
      "type": "object",
      "properties": {
        "Label": { "description": "Gets or sets the label.", "type": "string" },
        "Value": { "description": "Gets or sets the value.", "type": "string" }
      }
    },
    "Webcom.API.RD.Customers.CustomerListRequest": {
      "description": "Class CustomerListRequest.",
      "type": "object",
      "properties": {
        "CurrentPage": {
          "format": "int32",
          "description": "Gets or sets the current page.",
          "type": "integer"
        },
        "CustomerRole": {
          "format": "int32",
          "description": "Gets or sets the customer role.",
          "type": "integer"
        },
        "ItemsPerPage": {
          "format": "int32",
          "description": "Gets or sets the items per page.",
          "type": "integer"
        },
        "Search": {
          "description": "Gets the search.",
          "type": "object",
          "additionalProperties": { "type": "string" },
          "readOnly": true
        },
        "SortColumn": {
          "description": "Gets or sets the sort column.",
          "type": "string"
        },
        "SortOrder": {
          "description": "Gets or sets the sort order.",
          "type": "string"
        },
        "Columns": {
          "description": "Gets or sets the list of requested columns. If this parameter is null, system will return default list of columns.",
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "Webcom.API.RD.Customers.CustomerListResponse": {
      "description": "Class CustomerListResponse.",
      "type": "object",
      "properties": {
        "ColumnsList": {
          "description": "Gets or sets the columns list.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.RD.Customers.CustomerColumnListItemVM"
          }
        },
        "Customers": {
          "description": "Gets the customers.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.RD.Customers.CustomerVM"
          },
          "readOnly": true
        },
        "ErrorInfo": {
          "description": "Gets or sets the error information.",
          "type": "string"
        },
        "IsLookupView": {
          "description": "Gets or sets a value indicating whether this instance is lookup view.",
          "type": "boolean"
        },
        "Pager": {
          "$ref": "#/definitions/Webcom.API.RD.Customers.PagerVM",
          "description": "Gets or sets the pager."
        },
        "SuccessInfo": {
          "description": "Gets or sets the success information.",
          "type": "string"
        }
      }
    },
    "Webcom.API.RD.Customers.CustomerColumnListItemVM": {
      "description": "Class CustomerColumnListItemVM.",
      "type": "object",
      "properties": {
        "DisplayName": {
          "description": "Gets or sets the display name.",
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        },
        "Type": { "description": "Gets or sets the type.", "type": "string" }
      }
    },
    "Webcom.API.RD.Customers.PagerVM": {
      "description": "Class PagerVM.",
      "type": "object",
      "properties": {
        "CurrentPage": {
          "format": "int32",
          "description": "Gets or sets the current page.",
          "type": "integer"
        },
        "ItemsPerPage": {
          "format": "int32",
          "description": "Gets or sets the items per page.",
          "type": "integer"
        },
        "TotalNumberOfItems": {
          "format": "int32",
          "description": "Gets or sets the total number of items.",
          "type": "integer"
        }
      }
    },
    "Webcom.API.RD.Customers.AccountInfoResponse": {
      "description": "Class AccountInfoResponse.",
      "type": "object",
      "properties": {
        "Fields": {
          "description": "Gets or sets the fields.",
          "type": "object",
          "additionalProperties": { "type": "string" }
        }
      }
    },
    "Webcom.API.RD.Customers.AddressesLookupResponse": {
      "description": "Class AddressesLookupResponse.",
      "type": "object",
      "properties": {
        "Addresses": {
          "description": "Gets or sets the addresses.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.RD.Customers.AddressResponse"
          }
        },
        "ByPostCode": {
          "description": "Gets or sets a value indicating whether [by post code].",
          "type": "boolean"
        },
        "ErrorMessage": {
          "description": "Gets or sets the error message.",
          "type": "string"
        },
        "HasError": {
          "description": "Gets or sets a value indicating whether this instance has error.",
          "type": "boolean"
        }
      }
    },
    "Webcom.API.RD.Customers.AddressResponse": {
      "description": "Class AddressResponse.",
      "type": "object",
      "properties": {
        "Address1": {
          "description": "Gets or sets the address1.",
          "type": "string"
        },
        "City": { "description": "Gets or sets the city.", "type": "string" },
        "Company": {
          "description": "Gets or sets the company.",
          "type": "string"
        },
        "Description": {
          "description": "Gets or sets the description.",
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        },
        "State": { "description": "Gets or sets the state.", "type": "string" }
      }
    },
    "Webcom.API.RD.Customers.AccountDetailsResponse": {
      "description": "Class AccountDetailsResponse.",
      "type": "object",
      "properties": {
        "AccountContactRoles": {
          "description": "Gets or sets the account contact roles.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.Configurator.Customers.CrmObjectInfo"
          }
        },
        "AccountContacts": {
          "description": "Gets or sets the account contacts.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.Configurator.Customers.CrmObjectInfo"
          }
        }
      }
    },
    "Webcom.Configurator.Customers.CrmObjectInfo": {
      "type": "object",
      "properties": {
        "Fields": {
          "type": "object",
          "additionalProperties": { "type": "string" }
        }
      }
    },
    "Webcom.API.RD.Customers.GetStatesRequest": {
      "type": "object",
      "properties": {
        "CountryAbb": {
          "description": "Gets or sets the country identifier.",
          "type": "string"
        }
      }
    },
    "Webcom.API.RD.Customers.CrmLookupResponse": {
      "description": "Class CrmLookupResponse.",
      "type": "object",
      "properties": {
        "Accounts": {
          "description": "Gets or sets the accounts.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.RD.Customers.CrmAccountVM"
          }
        },
        "ErrorMessage": {
          "description": "Gets or sets the error message.",
          "type": "string"
        },
        "HasError": {
          "description": "Gets or sets a value indicating whether this instance has error.",
          "type": "boolean"
        },
        "HasSelectedContact": {
          "description": "Gets or sets a value indicating whether this instance has selected contact.",
          "type": "boolean"
        },
        "IsCameFromSF": {
          "description": "Gets or sets a value indicating whether this instance is came from sf.",
          "type": "boolean"
        },
        "SelectedContact": {
          "$ref": "#/definitions/Webcom.Configurator.Customers.CrmObjectInfo",
          "description": "Gets or sets the selected contact."
        }
      }
    },
    "Webcom.API.RD.Customers.CrmAccountVM": {
      "description": "Class CrmAccountVM.",
      "type": "object",
      "properties": {
        "Account": {
          "$ref": "#/definitions/Webcom.Configurator.Customers.CrmObjectInfo",
          "description": "Gets or sets the account."
        },
        "PartnerAccounts": {
          "description": "Gets or sets the partner accounts.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.Configurator.Customers.CrmObjectInfo"
          }
        },
        "ChildAccounts": {
          "description": "Gets or sets the child accounts.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.Configurator.Customers.CrmObjectInfo"
          }
        },
        "OtherAccounts": {
          "description": "Gets or sets the other accounts.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.Configurator.Customers.CrmObjectInfo"
          }
        },
        "DisplayPartnerAccounts": {
          "description": "Gets or sets a value indicating whether [display partner accounts].",
          "type": "boolean"
        },
        "HasPartnerAccounts": {
          "description": "Gets or sets a value indicating whether this instance has partner accounts.",
          "type": "boolean"
        },
        "HasChildAccounts": {
          "description": "Gets or sets a value indicating whether this instance has child accounts.",
          "type": "boolean"
        },
        "HasOtherAccounts": {
          "description": "Gets or sets a value indicating whether this instance has other accounts.",
          "type": "boolean"
        },
        "ShowOtherAccounts": {
          "description": "Gets or sets a value indicating whether [show other accounts].",
          "type": "boolean"
        },
        "AccountTypeNameMl": {
          "description": "Gets or sets the account type name ml.",
          "type": "string"
        },
        "Tab": {
          "format": "int32",
          "description": "Gets or sets the tab.",
          "enum": [1, 2, 3],
          "type": "integer"
        },
        "RelatedAccountsNameMl": {
          "description": "Gets or sets the related accounts name ml.",
          "type": "string"
        },
        "HasSelectedContact": {
          "description": "Gets or sets a value indicating whether this instance has selected contact.",
          "type": "boolean"
        },
        "SelectedContact": {
          "$ref": "#/definitions/Webcom.Configurator.Customers.CrmObjectInfo",
          "description": "Gets or sets the selected contact."
        }
      }
    },
    "Webcom.API.RD.Customers.ShippingInfoResponse": {
      "description": "Class ShippingInfoResponse.",
      "type": "object",
      "properties": {
        "CustomerRoles": {
          "description": "Gets or sets the customer roles.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.RD.Customers.CustomerRoleResponse"
          }
        },
        "IsInViewMode": {
          "description": "Gets or sets a value indicating whether this instance is in view mode.",
          "type": "boolean"
        },
        "ShowPredictive": {
          "description": "Determines whether Predictive feature should be displayed",
          "type": "boolean"
        }
      }
    },
    "Webcom.API.RD.Customers.SearchResponse": {
      "description": "Class SearchResponse.",
      "type": "object",
      "properties": {
        "CustomerBlocked": {
          "description": "Gets or sets the block flag for customer.",
          "type": "boolean"
        },
        "CustomerCompany": {
          "description": "Gets or sets the customer company.",
          "type": "string"
        },
        "CustomerFirstName": {
          "description": "Gets or sets the first name of the customer.",
          "type": "string"
        },
        "CustomerId": {
          "format": "int32",
          "description": "Gets or sets the customer identifier.",
          "type": "integer"
        },
        "CustomerLastName": {
          "description": "Gets or sets the last name of the customer.",
          "type": "string"
        }
      }
    },
    "Webcom.API.RD.Customers.SaveCustomerRequest": {
      "description": "Class SaveCustomerRequest.",
      "type": "object",
      "properties": {
        "Filter": {
          "$ref": "#/definitions/Webcom.API.RD.Customers.CustomerListRequest"
        },
        "FieldValues": {
          "description": "Gets the field values.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.RD.Customers.CustomerFieldsParameterVM"
          },
          "readOnly": true
        },
        "Id": {
          "format": "int32",
          "description": "Gets or sets the identifier.",
          "type": "integer"
        },
        "IsUpdate": {
          "description": "Gets or sets a value indicating whether this instance is update.",
          "type": "boolean"
        },
        "RoleType": {
          "format": "int32",
          "description": "Gets or sets the type of the role.",
          "type": "integer"
        }
      }
    },
    "Webcom.API.RD.Customers.CustomerFieldsParameterVM": {
      "description": "Class CustomerFieldsParameterVM.",
      "type": "object",
      "properties": {
        "ContentId": {
          "format": "int32",
          "description": "Gets or sets the content identifier.",
          "type": "integer"
        },
        "Key": { "description": "Gets or sets the key.", "type": "string" },
        "Value": { "description": "Gets or sets the value.", "type": "string" }
      }
    },
    "Webcom.API.SetupSPA.DataDeletion.VM.DataDeletionSettingsVM": {
      "type": "object",
      "properties": {
        "QuoteDeletionSettings": {
          "$ref": "#/definitions/Webcom.API.SetupSPA.DataDeletion.VM.QuoteDeletionSettingsVM"
        },
        "UserDeletionSettings": {
          "$ref": "#/definitions/Webcom.API.SetupSPA.DataDeletion.VM.UserDeletionSettingsVM"
        },
        "CustomerDeletionSettings": {
          "$ref": "#/definitions/Webcom.API.SetupSPA.DataDeletion.VM.CustomerDeletionSettingsVM"
        },
        "AuditTrailDeletionSettings": {
          "$ref": "#/definitions/Webcom.API.SetupSPA.DataDeletion.VM.AuditTrailDeletionSettingsVM"
        },
        "DataDeletionSettings": {
          "$ref": "#/definitions/Webcom.API.SetupSPA.DataDeletion.VM.DataDeletionSettingsVM"
        },
        "DataProtectionLogSettings": {
          "$ref": "#/definitions/Webcom.API.SetupSPA.DataDeletion.VM.DataProtectionLogSettingsVM"
        }
      }
    },
    "Webcom.API.SetupSPA.DataDeletion.VM.QuoteDeletionSettingsVM": {
      "type": "object",
      "properties": {
        "Period": { "format": "int32", "type": "integer" },
        "SettingsByStatus": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.SetupSPA.DataDeletion.VM.QuoteDeletionSettingsByStatusVM"
          }
        },
        "BlockedQuotes": { "type": "array", "items": { "type": "string" } }
      }
    },
    "Webcom.API.SetupSPA.DataDeletion.VM.UserDeletionSettingsVM": {
      "type": "object",
      "properties": {
        "BlockedUsers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.SetupSPA.Common.LookupVM"
          }
        },
        "SettingsByReason": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.SetupSPA.DataDeletion.VM.UserDeletionSettingsByReasonVM"
          }
        }
      }
    },
    "Webcom.API.SetupSPA.DataDeletion.VM.CustomerDeletionSettingsVM": {
      "type": "object",
      "properties": {
        "Period": { "format": "int32", "type": "integer" },
        "BlockedCustomers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.SetupSPA.Common.LookupVM"
          }
        }
      }
    },
    "Webcom.API.SetupSPA.DataDeletion.VM.AuditTrailDeletionSettingsVM": {
      "type": "object",
      "properties": {
        "SettingsByType": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.SetupSPA.DataDeletion.VM.AuditTrailDeletionSettingsByTypeVM"
          }
        }
      }
    },
    "Webcom.API.SetupSPA.DataDeletion.VM.DataProtectionLogSettingsVM": {
      "type": "object",
      "properties": { "Period": { "format": "int32", "type": "integer" } }
    },
    "Webcom.API.SetupSPA.DataDeletion.VM.QuoteDeletionSettingsByStatusVM": {
      "type": "object",
      "properties": {
        "Status": { "format": "int32", "type": "integer" },
        "Period": { "format": "int32", "type": "integer" }
      }
    },
    "Webcom.API.SetupSPA.DataDeletion.VM.UserDeletionSettingsByReasonVM": {
      "type": "object",
      "properties": {
        "Period": { "format": "int32", "type": "integer" },
        "Reason": { "format": "int32", "enum": [0, 1], "type": "integer" }
      }
    },
    "Webcom.API.SetupSPA.DataDeletion.VM.AuditTrailDeletionSettingsByTypeVM": {
      "type": "object",
      "properties": {
        "Period": { "format": "int32", "type": "integer" },
        "Type": { "format": "int32", "enum": [0, 1], "type": "integer" }
      }
    },
    "Webcom.API.Common.Models.PagedDataVM[Webcom.API.SetupSPA.DataProtection.VM.DataProtectionLogVM]": {
      "description": "Paged data for provided type",
      "type": "object",
      "properties": {
        "PagedRecords": {
          "description": "List of paged records",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.SetupSPA.DataProtection.VM.DataProtectionLogVM"
          }
        },
        "TotalNumberOfRecords": {
          "format": "int32",
          "description": "Total number of records",
          "type": "integer"
        }
      }
    },
    "Webcom.API.SetupSPA.DataProtection.VM.DataProtectionLogVM": {
      "type": "object",
      "properties": {
        "Id": { "format": "int32", "type": "integer" },
        "EntityType": { "type": "string" },
        "EntityId": { "type": "string" },
        "Quote": { "type": "string" },
        "Field": { "type": "string" },
        "OldValue": { "type": "string" },
        "NewValue": { "type": "string" },
        "Action": { "type": "string" },
        "Description": { "type": "string" },
        "DatePerformed": { "type": "string" },
        "Performer": { "type": "string" }
      }
    },
    "Webcom.API.RD.Cart.DealViewResponse": {
      "type": "object",
      "properties": {
        "OwnerId": {
          "format": "int32",
          "description": "Gets or sets the owner identifier.",
          "type": "integer"
        },
        "QuoteId": {
          "format": "int32",
          "description": "Gets or sets the quote identifier.",
          "type": "integer"
        },
        "QuoteNumber": {
          "description": "Gets or sets the quote number.",
          "type": "string"
        },
        "UseRecurringPriceAndCost": {
          "description": "Gets or sets a value indicating whether [use recurring price and cost].",
          "type": "boolean"
        },
        "ItemColumns": {
          "description": "Gets or sets the item columns.",
          "type": "array",
          "items": { "$ref": "#/definitions/Webcom.API.RD.Cart.CellColumnVM" }
        },
        "DealSections": {
          "description": "Gets or sets the deal structure sections.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.Configurator.Core.DealStructure.DealStructureModel"
          }
        },
        "QICustomFieldDefinitions": {
          "description": "Gets or sets the quote item custom fields definitions.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.Quote.Common.DTO.QuoteItemCFDefinitionDTO"
          }
        },
        "TeamsVisible": {
          "description": "Gets or sets a value indicating whether [teams visible].",
          "type": "boolean"
        },
        "CanAccessSectionBuilder": {
          "description": "Gets or sets a value indicating whether this instance can access section builder.",
          "type": "boolean"
        },
        "CustomDistributionMaths": {
          "description": "Gets or sets a list of custom distribution scripts.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.Quote.Services.CalculateService.DbMath"
          }
        },
        "EditableSectionColumns": {
          "description": "Gets or sets a list of editable section columns.",
          "type": "array",
          "items": { "type": "string" },
          "readOnly": true
        },
        "WorkflowClientData": {
          "description": "Gets or sets the WorkflowContext client data that will be sent to the client.",
          "type": "object"
        },
        "ActiveEditableGroup": {
          "format": "int32",
          "description": "Gets or sets the active editable group.",
          "type": "integer"
        },
        "MainItemsNumber": {
          "format": "int32",
          "description": "Gets or sets the main items number.",
          "type": "integer"
        },
        "AdditionalDiscounts": {
          "description": "Gets or sets the additional discounts.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.RD.Cart.AdditionalDiscountVM"
          }
        },
        "AreAdditionalDiscountsEditable": {
          "description": "Gets or sets a value indicating whether [are additional discounts editable].",
          "type": "boolean"
        },
        "CanRedo": {
          "description": "Gets or sets a value indicating whether this instance can redo.",
          "type": "boolean"
        },
        "CanUndo": {
          "description": "Gets or sets a value indicating whether this instance can undo.",
          "type": "boolean"
        },
        "CartComment": {
          "$ref": "#/definitions/Webcom.API.RD.Cart.MathCellVM",
          "description": "Gets or sets the cart comment."
        },
        "CurrencySign": {
          "description": "Gets or sets the currency sign.",
          "type": "string"
        },
        "CustomFields": {
          "description": "Gets or sets the custom fields.",
          "type": "array",
          "items": { "$ref": "#/definitions/Webcom.API.RD.Cart.CustomFieldVM" }
        },
        "DiplayAddProdSection": {
          "description": "Gets or sets a value indicating whether [diplay add product section].",
          "type": "boolean"
        },
        "QuoteTables": {
          "description": "Gets or sets the cart tables.",
          "type": "array",
          "items": { "$ref": "#/definitions/Webcom.API.RD.Cart.QuoteTableVm" }
        },
        "Pricebooks": {
          "description": "Gets or sets pricebooks.",
          "type": "array",
          "items": { "$ref": "#/definitions/Webcom.API.IdNamePair" }
        },
        "DateModified": {
          "description": "Gets or sets the date modified.",
          "type": "string"
        },
        "HasUpdatableProducts": {
          "description": "Gets or sets a value indicating whether this instance has updatable products.",
          "type": "boolean"
        },
        "InitData": {
          "$ref": "#/definitions/Webcom.API.RD.Cart.CartInitDataVM",
          "description": "Gets or sets the initialize data."
        },
        "Items": {
          "description": "Gets or sets the items.",
          "type": "array",
          "items": { "$ref": "#/definitions/Webcom.API.RD.Cart.CartLineItemVM" }
        },
        "MarketId": {
          "format": "int32",
          "description": "Gets or sets the market identifier.",
          "type": "integer"
        },
        "PricebookId": {
          "format": "int32",
          "description": "Gets or sets the pricebook identifier.",
          "type": "integer"
        },
        "IsPricebookAvailable": {
          "description": "Gets or sets pricebook availability.",
          "type": "boolean"
        },
        "Message": {
          "$ref": "#/definitions/Webcom.API.RD.Cart.MessageVM",
          "description": "Gets or sets the message."
        },
        "MessageOnLanding": {
          "$ref": "#/definitions/Webcom.API.RD.Cart.MessageVM",
          "description": "Gets or sets the message on landing."
        },
        "ScriptingMessages": {
          "description": "Gets or sets the scripting messages.",
          "type": "array",
          "items": { "type": "string" }
        },
        "ErrorInfo": {
          "description": "Gets or sets the error information.",
          "type": "string"
        },
        "SuccessInfo": {
          "description": "Gets or sets the success information.",
          "type": "string"
        },
        "NonPrimaryActions": {
          "description": "Gets or sets the non primary actions.",
          "type": "array",
          "items": { "$ref": "#/definitions/Webcom.API.RD.Cart.CartActionVM" }
        },
        "OrderStatusId": {
          "format": "int32",
          "description": "Gets or sets the order status identifier.",
          "type": "integer"
        },
        "OrderStatuses": {
          "description": "Gets or sets the order statuses.",
          "type": "array",
          "items": { "$ref": "#/definitions/Webcom.API.IdNamePair" }
        },
        "PrimaryActions": {
          "description": "Gets or sets the primary actions.",
          "type": "array",
          "items": { "$ref": "#/definitions/Webcom.API.RD.Cart.CartActionVM" }
        },
        "ProductTypes": {
          "description": "Gets or sets the product types.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.RD.Cart.ProductTypeRowVM"
          }
        },
        "ProductTypesTotal": {
          "$ref": "#/definitions/Webcom.API.RD.Cart.RowVM",
          "description": "Gets or sets the product types total."
        },
        "ShippingOptionId": {
          "format": "int32",
          "description": "Gets or sets the shipping option identifier.",
          "type": "integer"
        },
        "SubTotalsWithDiscounts": {
          "description": "Gets or sets the sub totals with discounts.",
          "type": "array",
          "items": { "$ref": "#/definitions/Webcom.API.RD.Cart.RowVM" }
        },
        "TotalShippingCost": {
          "$ref": "#/definitions/Webcom.API.RD.Cart.EditableCellVM",
          "description": "Gets or sets the total shipping cost."
        },
        "TotalStateTax": {
          "$ref": "#/definitions/Webcom.API.RD.Cart.MathCellVM",
          "description": "Gets or sets the total state tax."
        },
        "MRCTotalStateTax": {
          "$ref": "#/definitions/Webcom.API.RD.Cart.MathCellVM",
          "description": "Gets or sets the MRC total state tax."
        },
        "NRCTotalStateTax": {
          "$ref": "#/definitions/Webcom.API.RD.Cart.MathCellVM",
          "description": "Gets or sets the NRC total state tax."
        },
        "TotalVat": {
          "$ref": "#/definitions/Webcom.API.RD.Cart.MathCellVM",
          "description": "Gets or sets the total vat."
        },
        "MRCTotalVat": {
          "$ref": "#/definitions/Webcom.API.RD.Cart.MathCellVM",
          "description": "Gets or sets the MRC total vat."
        },
        "NRCTotalVat": {
          "$ref": "#/definitions/Webcom.API.RD.Cart.MathCellVM",
          "description": "Gets or sets the NRC total vat."
        },
        "Totals": {
          "description": "Gets or sets the totals.",
          "type": "array",
          "items": { "$ref": "#/definitions/Webcom.API.RD.Cart.RowVM" }
        },
        "Approval": {
          "$ref": "#/definitions/Webcom.API.RD.Cart.ApprovalVM",
          "description": "Gets or sets the approval."
        },
        "TotalAmount": {
          "$ref": "#/definitions/Webcom.API.RD.Cart.MathCellVM",
          "description": "Gets or sets the total amount."
        },
        "MRCTotalAmount": {
          "$ref": "#/definitions/Webcom.API.RD.Cart.MathCellVM",
          "description": "Gets or sets the MRC total amount."
        },
        "PromotionsCartInfo": {
          "$ref": "#/definitions/Webcom.API.RD.Cart.PromotionsCartInfoVM",
          "description": "Gets or sets the promotions cart information."
        },
        "TotalItems": {
          "format": "int32",
          "description": "Gets or sets the total number of all items in cart.",
          "type": "integer"
        },
        "CartItemToHighlight": {
          "format": "int32",
          "description": "Gets or sets the cart item to highlight.",
          "type": "integer"
        },
        "TabsData": {
          "$ref": "#/definitions/Webcom.API.RD.Cart.CartTabsVM",
          "description": "Gets or sets the tabs data."
        },
        "InvalidAutocompleteEntities": {
          "$ref": "#/definitions/Webcom.API.RD.Cart.InvalidAutocompleteEntitiesVM",
          "description": "Gets or sets invalid autocomplete entities to display as a warning message on the cart page"
        },
        "EffectiveDate": {
          "description": "Gets or sets the effective date.",
          "type": "string"
        },
        "VisitorId": {
          "format": "int32",
          "description": "Gets or sets the visitor id.",
          "type": "integer"
        },
        "ExternalId": { "description": "Gets externalid", "type": "string" }
      }
    },
    "Webcom.Configurator.Core.DealStructure.DealStructureModel": {
      "type": "object",
      "properties": {
        "Id": { "format": "int32", "type": "integer" },
        "QuoteId": { "format": "int32", "type": "integer" },
        "HierarchyId": { "type": "string" },
        "SectionPath": { "type": "string" },
        "Level": { "format": "int32", "type": "integer" },
        "CanContainProducts": { "type": "boolean" },
        "CanBeDistributed": { "type": "boolean" },
        "Rank": { "format": "int32", "type": "integer" },
        "DistributionParentPath": { "type": "string" },
        "DistributionPercent": { "format": "double", "type": "number" },
        "Teams": { "type": "string" },
        "SelectedTeams": {
          "type": "array",
          "items": { "format": "int32", "type": "integer" }
        },
        "CanManageSection": { "type": "boolean" },
        "CustomFields": {
          "type": "object",
          "additionalProperties": { "type": "object" }
        },
        "DistributionMethod": { "format": "int32", "type": "integer" }
      }
    },
    "Webcom.Quote.Common.DTO.QuoteItemCFDefinitionDTO": {
      "type": "object",
      "properties": {
        "Name": { "type": "string" },
        "Label": { "type": "string" },
        "Type": {
          "format": "int32",
          "enum": [1, 2, 3, 4, 5],
          "type": "integer"
        },
        "StdAttrCode": { "format": "int32", "type": "integer" },
        "DecimalPlaces": { "format": "int32", "type": "integer" }
      }
    },
    "Webcom.Quote.Services.CalculateService.DbMath": {
      "type": "object",
      "properties": {
        "Id": { "format": "int32", "type": "integer" },
        "Implementation": { "type": "string" },
        "IsCustom": { "type": "boolean" },
        "EngineType": { "format": "int32", "type": "integer" },
        "Script": { "type": "string" },
        "Name": { "type": "string" },
        "QuoteItemCustomFieldName": { "type": "string" },
        "IsActive": { "type": "boolean" }
      }
    },
    "Webcom.API.RD.Cart.VM.Sections.SectionDistributionRequest": {
      "type": "object",
      "properties": {
        "DealStructure": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.Configurator.Core.DealStructure.DealStructureModel"
          }
        },
        "SourceId": { "format": "int32", "type": "integer" }
      }
    },
    "Webcom.API.RD.Cart.VM.Sections.SectionTotalsRequest": {
      "type": "object",
      "properties": {
        "QuoteId": { "format": "int32", "type": "integer" },
        "FilterQuery": {
          "type": "array",
          "items": { "type": "array", "items": { "type": "string" } }
        }
      }
    },
    "Webcom.API.RD.Cart.VM.Sections.SectionTotalsVM": {
      "type": "object",
      "properties": {
        "Value": { "type": "string" },
        "ValueType": { "format": "int32", "type": "integer" },
        "ColumnName": { "type": "string" }
      }
    },
    "Webcom.API.Common.Models.PagedDataVM[Webcom.API.SetupSPA.EventSubscription.VM.EventSubscriptionTableRowVM]": {
      "description": "Paged data for provided type",
      "type": "object",
      "properties": {
        "PagedRecords": {
          "description": "List of paged records",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.SetupSPA.EventSubscription.VM.EventSubscriptionTableRowVM"
          }
        },
        "TotalNumberOfRecords": {
          "format": "int32",
          "description": "Total number of records",
          "type": "integer"
        }
      }
    },
    "Webcom.API.SetupSPA.EventSubscription.VM.EventSubscriptionTableRowVM": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "Name": { "type": "string" },
        "Description": { "type": "string" },
        "Url": { "type": "string" },
        "EventName": { "type": "string" }
      }
    },
    "Webcom.API.SetupSPA.EventSubscription.VM.EventSubscriptionVM": {
      "type": "object",
      "properties": {
        "HttpMethod": { "type": "string" },
        "Authentication": { "type": "string" },
        "Filter": { "type": "string" },
        "Id": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "Name": { "type": "string" },
        "Description": { "type": "string" },
        "Url": { "type": "string" },
        "EventName": { "type": "string" }
      }
    },
    "Webcom.API.SetupSPA.Common.UpdateInfoVM[System.Guid]": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "ModifiedBy": { "type": "string" },
        "ModifiedDate": { "type": "string" }
      }
    },
    "Webcom.API.RD.Favorites.FavoritesResponse": {
      "type": "object",
      "properties": {
        "Success": {
          "description": "Gets or sets the response successfully.",
          "type": "boolean"
        },
        "Message": {
          "description": "Gets or sets the response message.",
          "type": "string"
        },
        "FavoritesSharingRights": {
          "$ref": "#/definitions/Webcom.API.RD.Favorites.FavoritesSharingRightsVM",
          "description": "Gets or sets the favorites sharing rights."
        },
        "Pager": {
          "$ref": "#/definitions/Webcom.API.RD.Favorites.PagerVM",
          "description": "Gets or sets the pager data."
        },
        "Favorites": {
          "description": "Gets or sets the list of favorites.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.RD.Favorites.FavoriteVM"
          }
        }
      }
    },
    "Webcom.API.RD.Favorites.FavoritesSharingRightsVM": {
      "type": "object",
      "properties": {
        "AllowToShareWithCompanyUsers": {
          "description": "Gets or sets a value indicating whether user is allowed to share with company users.",
          "type": "boolean"
        },
        "AllowToShareWithAllUsers": {
          "description": "Gets or sets a value indicating whether user is allowed to share with all users.",
          "type": "boolean"
        }
      }
    },
    "Webcom.API.RD.Favorites.PagerVM": {
      "type": "object",
      "properties": {
        "PageSize": {
          "format": "int32",
          "description": "Gets or sets the size of the page.",
          "type": "integer"
        },
        "CurrentPage": {
          "format": "int32",
          "description": "Gets or sets the current page.",
          "type": "integer"
        },
        "TotalRecords": {
          "format": "int32",
          "description": "Gets or sets the total records in favorites list.",
          "type": "integer"
        },
        "BasedOnProductFilter": {
          "format": "int32",
          "description": "Gets or sets the based on product filter.",
          "type": "integer"
        },
        "NameFilter": {
          "description": "Gets or sets the name filter.",
          "type": "string"
        }
      }
    },
    "Webcom.API.RD.Favorites.FavoriteVM": {
      "type": "object",
      "properties": {
        "FavoriteId": {
          "format": "int32",
          "description": "Gets or sets the favorite identifier.",
          "type": "integer"
        },
        "IsMyFavorite": {
          "description": "Gets or sets the created by user identifier.",
          "type": "boolean"
        },
        "FavoriteName": {
          "description": "Gets or sets the name of the favorite.",
          "type": "string"
        },
        "FavoriteCategory": {
          "description": "Gets or sets the favorite category.",
          "type": "string"
        },
        "FavoriteDescription": {
          "description": "Gets or sets the favorite description.",
          "type": "string"
        },
        "FavoritePartNumber": {
          "description": "Gets or sets the favorite part number.",
          "type": "string"
        },
        "BaseOnProductId": {
          "format": "int32",
          "description": "Gets or sets the base on product identifier.",
          "type": "integer"
        },
        "BaseOnProductName": {
          "description": "Gets or sets the name of the base on product.",
          "type": "string"
        },
        "VisibleForCompanyId": {
          "format": "int32",
          "description": "Gets or sets the visible for company identifier.",
          "type": "integer"
        },
        "VisibleToEveryone": {
          "description": "Gets or sets a value indicating whether favorite is visible to everyone.",
          "type": "boolean"
        },
        "CanEnterQty": {
          "description": "Gets or sets a value indicating whether this instance can enter qty.",
          "type": "boolean"
        },
        "IsSimple": {
          "description": "Gets or sets a value indicating whether this instance is simple.",
          "type": "boolean"
        },
        "IsShared": {
          "description": "Gets or sets a value indicating whether this instance is shared.",
          "type": "boolean"
        },
        "EndStatus": {
          "format": "int32",
          "description": "Gets or sets the end status.",
          "type": "integer"
        }
      }
    },
    "Webcom.API.RD.Favorites.FavoritesRequest": {
      "type": "object",
      "properties": {
        "BaseOnProductFilterId": {
          "format": "int32",
          "description": "Gets or sets the base on product filter identifier.",
          "type": "integer"
        },
        "PageSize": {
          "format": "int32",
          "description": "Gets or sets the size of the page.",
          "type": "integer"
        },
        "PageNumberFilter": {
          "format": "int32",
          "description": "Gets or sets the page number filter.",
          "type": "integer"
        },
        "SortColumnOrderType": {
          "description": "Gets or sets the type of the sort column order.",
          "type": "string"
        },
        "SortColumnName": {
          "description": "Gets or sets the name of the sort column.",
          "type": "string"
        },
        "ShowMyCompanyFavorites": {
          "description": "Gets or sets a value indicating whether user wants to see favorites from his company.",
          "type": "boolean"
        },
        "ShowMyFavorites": {
          "description": "Gets or sets a value indicating whether user wants to see his own favorites.",
          "type": "boolean"
        },
        "ShowOthersFavorites": {
          "description": "Gets or sets a value indicating whether user wants to see others favorites.",
          "type": "boolean"
        },
        "NameFilter": {
          "description": "Gets or sets the favorite name filter.",
          "type": "string"
        },
        "DescriptionFilter": {
          "description": "Gets or sets the favorite description filter.",
          "type": "string"
        },
        "PartNumberFilter": {
          "description": "Gets or sets the favorite part number filter.",
          "type": "string"
        },
        "BaseOnProductFilter": {
          "description": "Gets or sets the base on product filter.",
          "type": "string"
        },
        "CategoriesFilter": {
          "description": "Gets or sets the favorite categories filter.",
          "type": "string"
        }
      }
    },
    "Webcom.API.RD.Favorites.FavoriteActionResponse": {
      "type": "object",
      "properties": {
        "Success": {
          "description": "Gets or sets a value indicating whether favorite action is successfully.",
          "type": "boolean"
        },
        "Message": {
          "description": "Gets or sets the message of favorite action.",
          "type": "string"
        },
        "ProductId": {
          "format": "int32",
          "description": "Gets or sets the product identifier.",
          "type": "integer"
        },
        "FavoriteId": {
          "format": "int32",
          "description": "Gets or sets the favorite identifier.",
          "type": "integer"
        },
        "FavoriteName": {
          "description": "Gets or sets the name of the favorite.",
          "type": "string"
        },
        "IsFavoriteShared": {
          "description": "Gets or sets the is favorite shared.",
          "type": "boolean"
        }
      }
    },
    "Webcom.API.RD.Favorites.AddToQuoteResponse": {
      "type": "object",
      "properties": {
        "Success": {
          "description": "Gets or sets a value indicating whether adding to quote is successfully.",
          "type": "boolean"
        },
        "Message": {
          "description": "Gets or sets the message after adding to quote.",
          "type": "string"
        },
        "MainItemsNumber": {
          "format": "int32",
          "description": "Gets or sets the main items number after adding to quote.",
          "type": "integer"
        }
      }
    },
    "Webcom.API.RD.Favorites.ProductNameDescriptonResponse": {
      "description": "Product name and description response",
      "type": "object",
      "properties": {
        "Name": {
          "description": "Gets or sets the name of the product.",
          "type": "string"
        },
        "Description": {
          "description": "Gets or sets the product description.",
          "type": "string"
        }
      }
    },
    "Webcom.Common.Provisioning.Entities.Group": {
      "description": "Groups container that are meant to enable expression \r\nof common Group or role based access control models",
      "type": "object",
      "properties": {
        "DisplayName": {
          "description": "Gets or sets a human readable name for the Group.",
          "type": "string"
        },
        "Members": {
          "description": "Gets or sets a list of members of the Group. Canonical Types \r\n\"User\" and \"Group\" are READ-ONLY. The value must be the \"id\" \r\nof a SCIM resource, either a User, or a Group.  The intention \r\nof the Group type is to allow the Service Provider to support \r\nnested Groups. Service Providers MAY require Consumers to \r\nprovide a non-empty members value based on the \"required\" \r\nsub attribute of the \"members\" attribute in Group Resource Schema.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.Common.Provisioning.Entities.MultivaluedAttribute"
          }
        },
        "ExternalId": {
          "description": "Gets or sets an identifier for the Resource as defined by the Service\r\nConsumer.  The externalId may simplify identification of the\r\nResource between Service Consumer and Service provider by allowing\r\nthe Consumer to refer to the Resource with its own identifier,\r\nobviating the need to store a local mapping between the local\r\nidentifier of the Resource and the identifier used by the Service\r\nProvider.  Each Resource MAY include a non-empty externalId value.\r\nThe value of the externalId attribute is always issued be the\r\nService Consumer and can never be specified by the Service\r\nProvider.  The Service Provider MUST always interpret the\r\nexternalId as scoped to the Service Consumer's tenant.",
          "type": "string"
        },
        "Meta": {
          "$ref": "#/definitions/Webcom.Common.Provisioning.Entities.Meta",
          "description": "Gets or sets a complex attribute containing resource metadata.  All sub-\r\nattributes are OPTIONAL"
        },
        "id": {
          "description": "Gets or sets unique identifier for the SCIM Resource as defined by the Service\r\nProvider.  Each representation of the Resource MUST include a non-\r\nempty id value.  This identifier MUST be unique across the Service\r\nProvider's entire set of Resources.  It MUST be a stable, non-\r\nre-assignable identifier that does not change when the same\r\nResource is returned in subsequent requests.  The value of the id\r\nattribute is always issued by the Service Provider and MUST never\r\nbe specified by the Service Consumer.",
          "type": "string"
        }
      }
    },
    "Webcom.Common.Provisioning.Entities.MultivaluedAttribute": {
      "description": "Complex attribute container that is used for storing \r\nattributes for emails, phones, ims etc.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Gets or sets the attribute's significant value; e.g., the e-mail address,\r\nphone number, etc.  Attributes that define a \"value\" sub-attribute\r\nMAY be alternately represented as a collection of primitive types.",
          "type": "string"
        },
        "Primary": {
          "description": "Gets or sets a value indicating whether the value use 'primary' or preferred\r\nattribute value for this attribute, e.g. the preferred mailing\r\naddress or primary e-mail address.  The primary attribute value\r\n'true' MUST appear no more than once.",
          "type": "boolean"
        },
        "Type": {
          "description": "Gets or sets a label indicating the attribute's function; e.g., \"work\" or \"home\".",
          "type": "string"
        },
        "operation": {
          "description": "Gets or sets a label indicating the attribute's operation; e.g., \"delete\".",
          "type": "string"
        }
      }
    },
    "Webcom.Common.Provisioning.Entities.Meta": {
      "description": "Defines a complex attribute containing resource metadata.  \r\nAll sub-attributes are OPTIONAL",
      "type": "object",
      "properties": {
        "LastModified": {
          "format": "date-time",
          "description": "Gets or sets the most recent DateTime the details of this\r\nResource were updated at the Service Provider.  If this\r\nResource has never been modified since its initial creation,\r\nthe value MUST be the same as the value of created.  The\r\nattribute MUST be a DateTime.",
          "type": "string"
        },
        "Created": {
          "format": "date-time",
          "description": "Gets or sets the date and time the Resource was added to the Service\r\nProvider.  The attribute MUST be a DateTime.",
          "type": "string"
        },
        "Location": {
          "description": "Gets or sets the URI of the Resource being returned.  This value MUST\r\nbe the same as the Location HTTP response header.",
          "type": "string"
        },
        "Version": {
          "description": "Gets or sets the version of the Resource being returned.  This value\r\nmust be the same as the ETag HTTP response header.",
          "type": "string"
        }
      }
    },
    "Webcom.API.SetupSPA.GuestUser.GuestUserVM": {
      "type": "object",
      "properties": {
        "CustomMessage": { "type": "string" },
        "SingleSignOnKey": { "type": "string" },
        "SingleSignOnVector": { "type": "string" },
        "SendSingleSignOnLink": { "type": "boolean" },
        "User": { "type": "string" },
        "CanNotAddQuote": { "type": "boolean" },
        "CanProceedWithOutRegistration": { "type": "boolean" },
        "CanSystemPrePopulateCustomerRoleBased": { "type": "boolean" },
        "UserType": { "type": "string" },
        "ExpirationPeriod": { "format": "int32", "type": "integer" },
        "OrderingParent": { "type": "string" },
        "ManagingParent": { "type": "string" },
        "OptionalFields": {
          "type": "array",
          "items": { "format": "int32", "type": "integer" }
        },
        "AllowUserRegistration": { "type": "boolean" }
      }
    },
    "System.Threading.CancellationToken": {
      "type": "object",
      "properties": {
        "IsCancellationRequested": { "type": "boolean", "readOnly": true },
        "CanBeCanceled": { "type": "boolean", "readOnly": true },
        "WaitHandle": {
          "$ref": "#/definitions/System.Threading.WaitHandle",
          "readOnly": true
        }
      }
    },
    "System.Threading.WaitHandle": {
      "type": "object",
      "properties": {
        "Handle": { "type": "object" },
        "SafeWaitHandle": {
          "$ref": "#/definitions/Microsoft.Win32.SafeHandles.SafeWaitHandle"
        }
      }
    },
    "Microsoft.Win32.SafeHandles.SafeWaitHandle": {
      "type": "object",
      "properties": {
        "IsInvalid": { "type": "boolean", "readOnly": true },
        "IsClosed": { "type": "boolean", "readOnly": true }
      }
    },
    "Webcom.API.RD.Scripting.VM.ScriptingPropertyVM": {
      "description": "It represents a class with its type, name and functions and properties of that class",
      "type": "object",
      "properties": {
        "Name": {
          "description": "Gets or sets the name.\r\n<para>Ex: Items, Quote, User</para>",
          "type": "string"
        },
        "Type": {
          "description": "Gets or sets the type.\r\n<para>Ex: Scripting.IMainItems, Scripting.IQuote </para>",
          "type": "string"
        },
        "PropertiesAndFunctions": {
          "description": "Gets or sets the properties and functions of a class",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.RD.Scripting.VM.ScriptingPropertyVM"
          }
        },
        "Description": {
          "$ref": "#/definitions/Webcom.API.RD.Scripting.VM.DescriptionVM",
          "description": "Gets or sets the description.\r\n<para>This description will be read from XML file</para>"
        },
        "IsPrimitive": {
          "description": "Gets or sets a value indicating whether this instance is primitive. So based on this we will show/hide hyperlink",
          "type": "boolean"
        },
        "AssemblyName": {
          "description": "Gets or sets the name of the assembly.",
          "type": "string"
        },
        "IsFunction": {
          "description": "Gets or sets a value indicating whether member is a function.",
          "type": "boolean"
        },
        "FunctionArgs": {
          "description": "Gets or sets the function arguments.\r\nEmpty is member is not a function (if IsFunction == false).",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.RD.Scripting.VM.FunctionArgVM"
          }
        }
      }
    },
    "Webcom.API.RD.Scripting.VM.DescriptionVM": {
      "type": "object",
      "properties": {
        "Title": { "description": "Gets or sets the title.", "type": "string" },
        "Summary": {
          "description": "Gets or sets the summary.",
          "type": "string"
        }
      }
    },
    "Webcom.API.RD.Scripting.VM.FunctionArgVM": {
      "description": "Function argument view mode.",
      "type": "object",
      "properties": {
        "Name": {
          "description": "Gets or sets the name of the function argument.",
          "type": "string"
        },
        "Type": {
          "description": "Gets or sets the type of the function argument.",
          "type": "string"
        },
        "Description": {
          "description": "Gets or sets the description of function argument.",
          "type": "string"
        }
      }
    },
    "Webcom.API.SetupSPA.IronPython.VM.ScriptVM": {
      "type": "object",
      "properties": { "Script": { "type": "string" } }
    },
    "Webcom.API.SetupSPA.Common.LookupVM[System.Int32]": {
      "description": "Lookup view model",
      "type": "object",
      "properties": {
        "Id": { "format": "int32", "type": "integer" },
        "Text": { "type": "string" }
      }
    },
    "Webcom.API.Common.Models.PagedDataVM[Webcom.API.SetupSPA.PageRecommendation.VM.PageRecommendationVM]": {
      "description": "Paged data for provided type",
      "type": "object",
      "properties": {
        "PagedRecords": {
          "description": "List of paged records",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.SetupSPA.PageRecommendation.VM.PageRecommendationVM"
          }
        },
        "TotalNumberOfRecords": {
          "format": "int32",
          "description": "Total number of records",
          "type": "integer"
        }
      }
    },
    "Webcom.API.SetupSPA.PageRecommendation.VM.PageRecommendationVM": {
      "description": "Pages recomended for a start page in UserType settings",
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "description": "Id of the page",
          "type": "integer"
        },
        "Name": {
          "description": "Symbolic name of the Page presented to the user",
          "type": "string"
        },
        "Url": { "description": "Relative url to the Page", "type": "string" }
      }
    },
    "Webcom.API.Common.Models.PagedDataVM[Webcom.API.SetupSPA.Permission.VM.PermissionGroupRowVM]": {
      "description": "Paged data for provided type",
      "type": "object",
      "properties": {
        "PagedRecords": {
          "description": "List of paged records",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.SetupSPA.Permission.VM.PermissionGroupRowVM"
          }
        },
        "TotalNumberOfRecords": {
          "format": "int32",
          "description": "Total number of records",
          "type": "integer"
        }
      }
    },
    "Webcom.API.SetupSPA.Permission.VM.PermissionGroupRowVM": {
      "description": "VM",
      "type": "object",
      "properties": {
        "Id": { "format": "int32", "type": "integer" },
        "Name": { "type": "string" },
        "Description": { "type": "string" },
        "Members": { "type": "string" }
      }
    },
    "Webcom.API.SetupSPA.Permission.VM.PermissionGroupVM": {
      "description": "VM for add / edit permission group",
      "type": "object",
      "properties": {
        "Id": { "format": "int32", "type": "integer" },
        "Name": { "type": "string" },
        "Description": { "type": "string" },
        "SystemId": { "type": "string" },
        "Condition": { "type": "string" },
        "SelectedPermissions": {
          "$ref": "#/definitions/Webcom.API.SetupSPA.Permission.VM.SelectedPermissionGroupsVM"
        }
      }
    },
    "Webcom.API.SetupSPA.Permission.VM.SelectedPermissionGroupsVM": {
      "type": "object",
      "properties": {
        "ManualPermissions": {
          "type": "array",
          "items": { "format": "int32", "type": "integer" }
        },
        "CompanyPermissions": {
          "type": "array",
          "items": { "format": "int32", "type": "integer" }
        },
        "MarketPermissions": {
          "type": "array",
          "items": { "format": "int32", "type": "integer" }
        },
        "MultiBrandingPermissions": {
          "type": "array",
          "items": { "format": "int32", "type": "integer" }
        },
        "UserTypePermissions": {
          "type": "array",
          "items": { "format": "int32", "type": "integer" }
        },
        "Users": {
          "type": "array",
          "items": { "format": "int32", "type": "integer" }
        }
      }
    },
    "Webcom.API.Common.Models.FilteredRequest": {
      "description": "Represents filtered request",
      "type": "object",
      "properties": {
        "Filters": {
          "description": "Filters",
          "type": "array",
          "items": { "$ref": "#/definitions/Webcom.API.Common.Models.FilterVM" }
        },
        "QuickFilter": { "description": "QuickFilter", "type": "string" },
        "OrderBy": {
          "$ref": "#/definitions/Webcom.API.Common.Models.OrderVM",
          "description": "Order by"
        },
        "Pager": {
          "$ref": "#/definitions/Webcom.API.Common.Models.PagerVM",
          "description": "Pager"
        }
      }
    },
    "Webcom.API.Common.Models.FilterVM": {
      "description": "Represents filter",
      "type": "object",
      "properties": {
        "Name": { "description": "Filter name", "type": "string" },
        "Value": { "description": "Filter value", "type": "string" },
        "ValueTo": { "description": "Filter value to", "type": "string" },
        "Operator": {
          "format": "int32",
          "description": "Filter operator (bigger, smaller, equal), used on dates and similar",
          "enum": [0, 1, 2, 3, 4, 5, 6, 7],
          "type": "integer"
        }
      }
    },
    "Webcom.API.Common.Models.OrderVM": {
      "description": "Represents order",
      "type": "object",
      "properties": {
        "Name": {
          "description": "Field name used for sorting",
          "type": "string"
        },
        "Direction": {
          "format": "int32",
          "description": "Sorting direction (asc/desc)",
          "enum": [0, 1],
          "type": "integer"
        }
      }
    },
    "Webcom.API.Common.Models.PagedDataVM[Webcom.API.SetupSPA.Users.VM.UserTableRowVM]": {
      "description": "Paged data for provided type",
      "type": "object",
      "properties": {
        "PagedRecords": {
          "description": "List of paged records",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.SetupSPA.Users.VM.UserTableRowVM"
          }
        },
        "TotalNumberOfRecords": {
          "format": "int32",
          "description": "Total number of records",
          "type": "integer"
        }
      }
    },
    "Webcom.API.SetupSPA.Users.VM.UserTableRowVM": {
      "description": "User table row VM",
      "type": "object",
      "properties": {
        "UserId": {
          "format": "int32",
          "description": "User id",
          "type": "integer"
        },
        "Username": { "description": "Username", "type": "string" },
        "FirstName": { "description": "First name", "type": "string" },
        "LastName": { "description": "Last name", "type": "string" },
        "Email": { "description": "Email", "type": "string" },
        "UserType": { "description": "User type", "type": "string" },
        "Company": { "description": "Company", "type": "string" },
        "Address": { "description": "Address", "type": "string" },
        "ZipCode": { "description": "Zip code", "type": "string" },
        "ManagingParent": {
          "description": "Managing parent",
          "type": "string"
        },
        "OrderingParent": {
          "description": "Ordering parent",
          "type": "string"
        },
        "ApprovalParent": {
          "description": "Approval parent",
          "type": "string"
        },
        "Territory": { "description": "Territory", "type": "string" },
        "Active": { "description": "Is user active", "type": "boolean" },
        "CreatedBy": { "description": "Created by", "type": "string" },
        "DateCreated": { "description": "Date created", "type": "string" },
        "ModifiedBy": { "description": "Modified by", "type": "string" },
        "DateModified": { "description": "Date modified", "type": "string" },
        "FederationId": { "description": "Federation id", "type": "string" },
        "Brand": { "description": "Brand name", "type": "string" },
        "ProxyLoginLink": {
          "description": "Link for login as proxy user",
          "type": "string"
        },
        "BlockedFromDeletion": {
          "description": "Is user blocked from deletion",
          "type": "boolean"
        }
      }
    },
    "Webcom.API.SetupSPA.Permission.VM.PermissionGroupsVM": {
      "type": "object",
      "properties": {
        "ManualPermissions": {
          "$ref": "#/definitions/Webcom.API.SetupSPA.Common.MultiListBoxItemVM"
        },
        "CompanyPermissions": {
          "$ref": "#/definitions/Webcom.API.SetupSPA.Common.MultiListBoxItemVM"
        },
        "MarketPermissions": {
          "$ref": "#/definitions/Webcom.API.SetupSPA.Common.MultiListBoxItemVM"
        },
        "MultiBrandingPermissions": {
          "$ref": "#/definitions/Webcom.API.SetupSPA.Common.MultiListBoxItemVM"
        },
        "UserTypePermissions": {
          "$ref": "#/definitions/Webcom.API.SetupSPA.Common.MultiListBoxItemVM"
        },
        "Users": {
          "$ref": "#/definitions/Webcom.API.SetupSPA.Common.MultiListBoxItemVM"
        }
      }
    },
    "Webcom.API.SetupSPA.Common.MultiListBoxItemVM": {
      "description": "Multi list box item VM",
      "type": "object",
      "properties": {
        "Id": { "format": "int32", "description": "Id", "type": "integer" },
        "Name": { "description": "Name", "type": "string" },
        "ParentId": {
          "format": "int32",
          "description": "Parent id",
          "type": "integer"
        },
        "IsVisible": { "description": "Is visible", "type": "boolean" },
        "IsCollapsed": { "description": "Is collapsed", "type": "boolean" },
        "IsAsync": { "description": "Is async", "type": "boolean" },
        "Children": {
          "description": "Children",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.SetupSPA.Common.MultiListBoxItemVM"
          }
        }
      }
    },
    "System.Collections.Generic.KeyValuePair[System.Int32,System.String]": {
      "type": "object",
      "properties": {
        "key": { "format": "int32", "type": "integer" },
        "value": { "type": "string" }
      }
    },
    "Webcom.API.Common.Models.PagedDataVM[Webcom.API.SetupSPA.Pricebook.VM.PricebookRowVM]": {
      "description": "Paged data for provided type",
      "type": "object",
      "properties": {
        "PagedRecords": {
          "description": "List of paged records",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.SetupSPA.Pricebook.VM.PricebookRowVM"
          }
        },
        "TotalNumberOfRecords": {
          "format": "int32",
          "description": "Total number of records",
          "type": "integer"
        }
      }
    },
    "Webcom.API.SetupSPA.Pricebook.VM.PricebookRowVM": {
      "type": "object",
      "properties": {
        "TableEntryId": { "format": "int32", "type": "integer" },
        "Id": { "type": "string" },
        "Name": { "type": "string" },
        "PartNumber": { "type": "string" },
        "PriceCode": { "type": "string" },
        "LblCurrencySign": { "type": "string" },
        "Price": { "format": "double", "type": "number" },
        "Cost": { "format": "double", "type": "number" },
        "RecurringPrice": { "format": "double", "type": "number" },
        "RecurringCost": { "format": "double", "type": "number" },
        "PriceDescription": { "type": "string" }
      }
    },
    "Webcom.API.Admin.Pricebooks.PricebooksResponse": {
      "description": "Represents pricebooks main page response",
      "type": "object",
      "properties": {
        "Markets": {
          "description": "Markets",
          "type": "array",
          "items": { "$ref": "#/definitions/Webcom.API.IdNamePair" }
        },
        "MarketFilter": { "description": "Market filter", "type": "string" }
      }
    },
    "Webcom.API.Admin.Pricebooks.PricebookSettingsVM": {
      "description": "Represents pricebook settings",
      "type": "object",
      "properties": {
        "PriceSource": {
          "format": "int32",
          "description": "Default source for product and attribute prices use",
          "enum": [0, 1],
          "type": "integer"
        },
        "HideProductsWithoutPrices": {
          "description": "Hide simple products without prices when using pricebook lookups",
          "type": "boolean"
        },
        "HideAttributeValuesWithoutPrices": {
          "description": "Hide attribute values without prices when using pricebook lookups",
          "type": "boolean"
        },
        "PreventQuotingPartNumbers": {
          "description": "Prevent users from quoting part numbers that haven't got a price in pricebooks",
          "type": "boolean"
        },
        "PreventAddingProductSelections": {
          "description": "Prevent users from adding product selections containing attributes that don’t have a price in pricebooks",
          "type": "boolean"
        }
      }
    },
    "Webcom.API.Admin.Pricebooks.PricebooksPerMarketResponse": {
      "description": "Response for GetPricebooksPerMarketInitData",
      "type": "object",
      "properties": {
        "MarketName": {
          "description": "Market of the pricebooks",
          "type": "string"
        },
        "Pricebooks": {
          "description": "Pricebooks in specified market",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.Admin.Pricebooks.PricebookTableVM"
          }
        },
        "Pager": {
          "$ref": "#/definitions/Webcom.API.Admin.Pricebooks.PagerVM",
          "description": "Returns paging information"
        },
        "Search": {
          "description": "Gets the search.",
          "type": "object",
          "additionalProperties": { "type": "string" }
        },
        "SortColumn": {
          "description": "Gets or sets the sort column.",
          "type": "string"
        },
        "SortOrder": {
          "description": "Gets or sets the sort order.",
          "type": "string"
        }
      }
    },
    "Webcom.API.Admin.Pricebooks.PricebookTableVM": {
      "description": "Pricebook data",
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "description": "Pricebook id",
          "type": "integer"
        },
        "Level": {
          "format": "int32",
          "description": "Pricebook level",
          "type": "integer"
        },
        "Name": { "description": "Pricebook name", "type": "string" },
        "ParentName": {
          "description": "Pricebook parent name",
          "type": "string"
        },
        "Description": {
          "description": "Pricebook description",
          "type": "string"
        },
        "Code": { "description": "Pricebook code", "type": "string" },
        "ValidFrom": {
          "description": "Pricebook valid from",
          "type": "string"
        },
        "ValidUntil": {
          "description": "Pricebook valid until",
          "type": "string"
        }
      }
    },
    "Webcom.API.Admin.Pricebooks.PagerVM": {
      "description": "Class PagerVM.",
      "type": "object",
      "properties": {
        "CurrentPage": {
          "format": "int32",
          "description": "Gets or sets the current page.",
          "type": "integer"
        },
        "ItemsPerPage": {
          "format": "int32",
          "description": "Gets or sets the items per page.",
          "type": "integer"
        },
        "TotalNumberOfItems": {
          "format": "int32",
          "description": "Gets or sets the total number of items.",
          "type": "integer"
        }
      }
    },
    "Webcom.API.Admin.Pricebooks.History.FilterDataRequest": {
      "description": "Class PricebookHistoryVM.",
      "type": "object",
      "properties": {
        "CurrentPage": {
          "format": "int32",
          "description": "Gets or sets the current page.",
          "type": "integer"
        },
        "ItemsPerPage": {
          "format": "int32",
          "description": "Gets or sets the items per page.",
          "type": "integer"
        },
        "Search": {
          "description": "Gets the search.",
          "type": "object",
          "additionalProperties": { "type": "string" }
        },
        "SortColumn": {
          "description": "Gets or sets the sort column.",
          "type": "string"
        },
        "SortOrder": {
          "description": "Gets or sets the sort order.",
          "type": "string"
        }
      }
    },
    "Webcom.API.Admin.Pricebooks.PricebookEntriesResponse": {
      "description": "Pricebook entries response.",
      "type": "object",
      "properties": {
        "Pager": {
          "$ref": "#/definitions/Webcom.API.Admin.Pricebooks.PagerVM",
          "description": "Returns paging information."
        },
        "PricebookEntries": {
          "description": "List of pricebook entries of particular pricebook.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.Admin.Pricebooks.PricebookEntryVM"
          }
        },
        "ShowEffectiveDates": {
          "description": "True if effective dates should be included in the response and displayed on the UI",
          "type": "boolean"
        },
        "Search": {
          "description": "Gets the search.",
          "type": "object",
          "additionalProperties": { "type": "string" }
        },
        "SortColumn": {
          "description": "Gets or sets the sort column.",
          "type": "string"
        },
        "SortOrder": {
          "description": "Gets or sets the sort order.",
          "type": "string"
        }
      }
    },
    "Webcom.API.Admin.Pricebooks.PricebookEntryVM": {
      "description": "Pricebook entry.",
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "description": "Pricebook entries table Id.",
          "type": "integer"
        },
        "PartNumber": { "description": "Part number.", "type": "string" },
        "PriceCode": { "description": "Price code.", "type": "string" },
        "Price": {
          "format": "double",
          "description": "Price.",
          "type": "number"
        },
        "Cost": {
          "format": "double",
          "description": "Cost.",
          "type": "number"
        },
        "RecurringPrice": {
          "format": "double",
          "description": "Recurring price.",
          "type": "number"
        },
        "RecurringCost": {
          "format": "double",
          "description": "Recurring cost.",
          "type": "number"
        },
        "PriceDescription": {
          "description": "Price description.",
          "type": "string"
        },
        "ValidFrom": { "description": "Valid from date.", "type": "string" },
        "ValidUntil": { "description": "Valid until date.", "type": "string" }
      }
    },
    "Webcom.API.Admin.Pricebooks.History.PricebookHistoryResponse": {
      "description": "Class PricebookHistoryResponse.",
      "type": "object",
      "properties": {
        "HistoryRecords": {
          "description": "Gets the history records.",
          "type": "array",
          "items": { "type": "array", "items": { "type": "string" } }
        },
        "Pager": {
          "$ref": "#/definitions/Webcom.API.Admin.Pricebooks.PagerVM",
          "description": "Gets or sets the pager."
        },
        "Search": {
          "description": "Gets the search.",
          "type": "object",
          "additionalProperties": { "type": "string" }
        },
        "SortColumn": {
          "description": "Gets or sets the sort column.",
          "type": "string"
        },
        "SortOrder": {
          "description": "Gets or sets the sort order.",
          "type": "string"
        }
      }
    },
    "Webcom.API.Admin.Pricebooks.PricebookDefinitionResponse": {
      "description": "Represents pricebook definition response",
      "type": "object",
      "properties": {
        "PricebookDefinition": {
          "$ref": "#/definitions/Webcom.API.Admin.Pricebooks.PricebookDefinitionVM",
          "description": "Pricebook definition"
        },
        "MarketPricebooks": {
          "description": "Market pricebooks",
          "type": "array",
          "items": { "$ref": "#/definitions/Webcom.API.IdNamePair" }
        },
        "VisibilityBuilder": {
          "$ref": "#/definitions/Webcom.API.Admin.Pricebooks.PricebookVisibilityBuilderVM",
          "description": "Visibility builder"
        }
      }
    },
    "Webcom.API.Admin.Pricebooks.PricebookDefinitionVM": {
      "description": "Represents pricebook table definition",
      "type": "object",
      "properties": {
        "MarketId": {
          "format": "int32",
          "description": "Market id",
          "type": "integer"
        },
        "MarketName": { "description": "Market name", "type": "string" },
        "MarketCode": {
          "description": "Gets or sets market code",
          "type": "string"
        },
        "DistributionChannel": {
          "description": "Gets or sets distribution channel",
          "type": "string"
        },
        "IsSAPErpConnected": {
          "description": "Gets or sets whether or not current tenant \r\nis connected with the SAP ERP system",
          "type": "boolean"
        },
        "ParentId": {
          "format": "int32",
          "description": "Parent id",
          "type": "integer"
        },
        "Id": { "format": "int32", "description": "Id", "type": "integer" },
        "Name": { "description": "Name", "type": "string" },
        "Code": { "description": "Code", "type": "string" },
        "Description": { "description": "Description", "type": "string" },
        "Level": {
          "format": "int32",
          "description": "Level",
          "type": "integer"
        },
        "NumberOfRecords": {
          "format": "int32",
          "description": "Number of records",
          "type": "integer"
        },
        "AdvancedVisibility": {
          "description": "Advanced visibility",
          "type": "boolean"
        },
        "VisibilityConditions": {
          "description": "Pricebook visibility conditions",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.Admin.Pricebooks.PricebookVisibilityConditionVM"
          }
        },
        "VisibilityFormula": {
          "description": "Visibility formula",
          "type": "string"
        },
        "ValidFrom": { "description": "Valid from", "type": "string" },
        "ValidUntil": { "description": "Valid until", "type": "string" }
      }
    },
    "Webcom.API.Admin.Pricebooks.PricebookVisibilityBuilderVM": {
      "description": "Pricebook visibility builder",
      "type": "object",
      "properties": {
        "FieldTypes": {
          "description": "Field types",
          "type": "array",
          "items": { "$ref": "#/definitions/Webcom.API.IdNamePair" }
        },
        "UserFields": {
          "description": "User fields",
          "type": "array",
          "items": { "$ref": "#/definitions/Webcom.API.IdNamePair" }
        },
        "CustomFields": {
          "description": "Custom fields",
          "type": "array",
          "items": {
            "type": "array",
            "items": { "$ref": "#/definitions/Webcom.API.IdNamePair" }
          }
        },
        "CustomerFields": {
          "description": "Customer fields",
          "type": "array",
          "items": { "$ref": "#/definitions/Webcom.API.IdNamePair" }
        },
        "Operators": {
          "description": "Operators",
          "type": "array",
          "items": { "$ref": "#/definitions/Webcom.API.IdNamePair" }
        }
      }
    },
    "Webcom.API.Admin.Pricebooks.PricebookVisibilityConditionVM": {
      "description": "Pricebook visibility condition",
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "description": "Pricebook visibility condition id",
          "type": "integer"
        },
        "FieldTypeId": {
          "format": "int32",
          "description": "Field type id",
          "type": "integer"
        },
        "FieldId": {
          "format": "int32",
          "description": "Field id",
          "type": "integer"
        },
        "CustomFieldId": {
          "format": "int32",
          "description": "Custom field id",
          "type": "integer"
        },
        "OperatorId": {
          "format": "int32",
          "description": "Operator id",
          "type": "integer"
        },
        "Value": { "description": "Value", "type": "string" },
        "Delete": {
          "description": "Whether pricebook visibility condition is marked for deletion",
          "type": "boolean"
        }
      }
    },
    "Webcom.API.Admin.Pricebooks.SavePricebookDefinitionResponse": {
      "description": "Represents response of save pricebook definition action",
      "type": "object",
      "properties": {
        "PricebookId": {
          "format": "int32",
          "description": "Pricebook id",
          "type": "integer"
        },
        "ErrorMessage": { "description": "Error message", "type": "string" },
        "VisibilityConditions": {
          "description": "List of visibility conditions",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.Admin.Pricebooks.PricebookVisibilityConditionVM"
          }
        }
      }
    },
    "Webcom.API.Admin.Pricebooks.SavePricebookEntryResponse": {
      "description": "Response returned when saving a pricebook entry",
      "type": "object",
      "properties": {
        "PricebookEntryId": {
          "format": "int32",
          "description": "Pricebook Entry Id.",
          "type": "integer"
        },
        "ErrorMessage": { "description": "Error message.", "type": "string" }
      }
    },
    "Webcom.API.Admin.Pricebooks.ExportEntriesResponse": {
      "description": "ExportEntriesResponse class.",
      "type": "object",
      "properties": {
        "ErrorMessage": {
          "description": "Error message if it occurred during pricebook entries export.",
          "type": "string"
        },
        "FileLocation": {
          "description": "Location of the exported file.",
          "type": "string"
        }
      }
    },
    "Webcom.API.RD.ProductDetails.ProductDetailsResponse": {
      "type": "object",
      "properties": {
        "Product": {
          "$ref": "#/definitions/Webcom.API.RD.ProductDetails.VM.ProductVM",
          "description": "Gets or sets the product."
        },
        "CurrencySign": {
          "description": "Gets or sets the currency sign.",
          "type": "string"
        },
        "ShowPrices": {
          "description": "Gets or sets a value indicating whether [show prices].",
          "type": "boolean"
        },
        "IsComparingEnabled": {
          "description": "Gets the value of application parameter to see whether comparing is enabled",
          "type": "boolean",
          "readOnly": true
        }
      }
    },
    "Webcom.API.RD.ProductDetails.VM.ProductVM": {
      "description": "Class ProductVM",
      "type": "object",
      "properties": {
        "SelectedForCompare": {
          "description": "Gets or sets a value indicating whether this instance is added to compare.",
          "type": "boolean"
        },
        "Name": { "description": "Gets or sets the name.", "type": "string" },
        "PartNumber": {
          "description": "Gets or sets the part number.",
          "type": "string"
        },
        "PartNumberExistsInPricebook": {
          "description": "Gets or sets a value indicating whether [part number exists in pricebook].",
          "type": "boolean"
        },
        "Description": {
          "description": "Gets or sets the description.",
          "type": "string"
        },
        "DynamicDescription": {
          "description": "Gets or sets the dynamic description.",
          "type": "string"
        },
        "LongDescription": {
          "description": "Gets or sets the long description.",
          "type": "string"
        },
        "Price": { "description": "Gets or sets the price.", "type": "string" },
        "EndStatus": {
          "format": "int32",
          "description": "Gets or sets the end status.",
          "type": "integer"
        },
        "CurrencySign": {
          "description": "Gets or sets the currency sign.",
          "type": "string"
        },
        "CanAddToQuote": {
          "description": "Gets or sets a value indicating whether this instance can add to quote.",
          "type": "boolean"
        },
        "CanEnterQty": {
          "description": "Gets or sets a value indicating whether this instance can enter qty.",
          "type": "boolean"
        },
        "CanConfigure": {
          "description": "Gets or sets a value indicating whether this instance can configure.",
          "type": "boolean"
        },
        "Id": {
          "format": "int32",
          "description": "Gets or sets the identifier.",
          "type": "integer"
        },
        "Categories": {
          "description": "Gets or sets the category.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.RD.ProductDetails.VM.CategoryVM"
          }
        },
        "Image": { "description": "Gets or sets the image.", "type": "string" },
        "ProductType": {
          "$ref": "#/definitions/Webcom.API.RD.ProductDetails.VM.ProductTypeVM",
          "description": "Gets or sets the type of the product."
        },
        "Weigth": {
          "description": "Gets or sets the weigth.",
          "type": "string"
        },
        "UPC": { "description": "Gets or sets the upc.", "type": "string" },
        "MPN": { "description": "Gets or sets the MPN.", "type": "string" },
        "Inventory": {
          "description": "Gets or sets the inventory.",
          "type": "string"
        },
        "ExternalId": {
          "description": "Gets or sets the external identifier.",
          "type": "string"
        },
        "LeadTime": {
          "description": "Gets or sets the lead time.",
          "type": "string"
        },
        "ProductVersion": {
          "description": "Gets or sets the product version.",
          "type": "string"
        },
        "RecurringPrice": {
          "format": "double",
          "description": "Gets or sets the recurring price.",
          "type": "number"
        },
        "RecurringCost": {
          "format": "double",
          "description": "Gets or sets the recurring cost.",
          "type": "number"
        },
        "PricingCode": {
          "description": "Gets or sets the pricing code.",
          "type": "string"
        },
        "Attributes": {
          "description": "Gets or sets the attributes.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.RD.ProductDetails.VM.AttributeVM"
          }
        },
        "ErrorMessage": {
          "description": "Error message to show for the product in case of an error (eg. no prices available)",
          "type": "string"
        },
        "IsSubscriptionBillingProduct": {
          "description": "Is product Subscription billing product",
          "type": "boolean"
        },
        "HasRatePlanForMarket": {
          "description": "Does product have rate plan for market",
          "type": "boolean"
        }
      }
    },
    "Webcom.API.RD.ProductDetails.VM.CategoryVM": {
      "description": "Class CategoryVM",
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "description": "Gets or sets the identifier.",
          "type": "integer"
        },
        "Name": { "description": "Gets or sets the name.", "type": "string" }
      }
    },
    "Webcom.API.RD.ProductDetails.VM.ProductTypeVM": {
      "description": "Class ProductTypeVM",
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "description": "Gets or sets the identifier.",
          "type": "integer"
        },
        "Name": { "description": "Gets or sets the name.", "type": "string" }
      }
    },
    "Webcom.API.RD.ProductDetails.VM.AttributeVM": {
      "description": "Class AttributeVM",
      "type": "object",
      "properties": {
        "Values": {
          "description": "Gets or sets the values.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.RD.ProductDetails.VM.AttributeValueVM"
          }
        },
        "Name": { "description": "Gets or sets the name.", "type": "string" },
        "IsDisplayed": {
          "description": "Gets or sets a value indicating whether this instance is displayed.",
          "type": "boolean"
        },
        "MLLabel": {
          "description": "Gets or sets the ml label.",
          "type": "string"
        }
      }
    },
    "Webcom.API.RD.ProductDetails.VM.AttributeValueVM": {
      "description": "Class FormulaBuilderAttributeValueVM",
      "type": "object",
      "properties": {
        "Value": { "description": "Gets or sets the name.", "type": "string" },
        "ValueCode": {
          "description": "Gets or sets the value code.",
          "type": "string"
        },
        "IsSelected": {
          "description": "Gets or sets a value indicating whether this instance is selected.",
          "type": "boolean"
        }
      }
    },
    "Webcom.API.Common.Models.PagedDataVM[Webcom.API.SetupSPA.Products.VM.ProductsTableRowVM]": {
      "description": "Paged data for provided type",
      "type": "object",
      "properties": {
        "PagedRecords": {
          "description": "List of paged records",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.SetupSPA.Products.VM.ProductsTableRowVM"
          }
        },
        "TotalNumberOfRecords": {
          "format": "int32",
          "description": "Total number of records",
          "type": "integer"
        }
      }
    },
    "Webcom.API.SetupSPA.Products.VM.ProductsTableRowVM": {
      "description": "Product for sending to client",
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "description": "Identitifier",
          "type": "integer"
        },
        "Name": { "description": "Name", "type": "string" },
        "PartNumber": { "description": "Part number", "type": "string" },
        "Type": { "description": "Product type", "type": "string" },
        "Category": { "description": "Category", "type": "string" },
        "Permissions": { "description": "Permissions", "type": "string" },
        "DisplayType": { "description": "Display Type", "type": "string" },
        "ModifiedDate": {
          "description": "Date of last modification",
          "type": "string"
        },
        "Active": { "description": "Is active", "type": "boolean" },
        "SystemId": { "description": "System Id", "type": "string" },
        "Description": { "description": "Description", "type": "string" },
        "IsSimple": { "description": "Is product simple", "type": "boolean" },
        "IsProductAlias": {
          "description": "Is product actually product alias",
          "type": "boolean"
        },
        "IsSapProduct": { "description": "Is SAP product", "type": "boolean" },
        "AliasParentProductId": {
          "format": "int32",
          "description": "Alias Parent Product Id",
          "type": "integer"
        },
        "IsSbProduct": {
          "description": "Is product that uses Subscription Billing pricing",
          "type": "boolean"
        }
      }
    },
    "Webcom.API.SetupSPA.Products.VM.ProductVM": {
      "type": "object",
      "properties": {
        "SubscriptionBillingInfo": {
          "$ref": "#/definitions/Webcom.API.SetupSPA.Products.VM.SubscriptionBillingInfoVM"
        },
        "Id": { "format": "int32", "type": "integer" },
        "SystemId": { "type": "string" },
        "Name": { "type": "string" },
        "DisplayTypeId": {
          "format": "int32",
          "enum": [0, 1, 2, 3, 4, 5],
          "type": "integer"
        },
        "ProductTypeId": { "format": "int32", "type": "integer" },
        "CatalogCode": { "type": "string" },
        "UnitOfMeasure": { "type": "string" },
        "Description": { "type": "string" },
        "Categories": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.SetupSPA.Products.VM.ProductCategoryVM"
          }
        },
        "CreatedDate": { "type": "string" },
        "ModifiedDate": { "type": "string" },
        "CreatedBy": { "type": "string" },
        "ModifiedBy": { "type": "string" },
        "ProductVersion": { "type": "string" },
        "Image": { "type": "string" },
        "DisplayTypePricingId": {
          "format": "int32",
          "enum": [0, 1, 2, 3],
          "type": "integer"
        },
        "PricingCode": { "type": "string" },
        "Price": { "format": "double", "type": "number" },
        "CostBuilder": { "type": "string" },
        "PriceBuilder": { "type": "string" },
        "BaseRecurringPrice": { "format": "double", "type": "number" },
        "RecurringPriceFormula": { "type": "string" },
        "RecurringCostFormula": { "type": "string" },
        "UseCustomPricing": { "type": "boolean" },
        "Active": { "type": "boolean" },
        "VisibleToEveryone": { "type": "boolean" },
        "PermissionSelected": {
          "type": "array",
          "items": { "format": "int32", "type": "integer" }
        },
        "PermissionStartDate": { "type": "string" },
        "PermissionEndDate": { "type": "string" },
        "EndStatus": {
          "format": "int32",
          "enum": [0, 1, 2],
          "type": "integer"
        },
        "ReplacementProductSystemId": { "type": "string" },
        "ReplacementProductName": { "type": "string" },
        "ExternalId": { "type": "string" },
        "UPC": { "type": "string" },
        "MPN": { "type": "string" },
        "Inventory": { "format": "int32", "type": "integer" },
        "LeadTime": { "type": "string" },
        "FamilyCode": { "type": "string" },
        "Weight": { "type": "string" },
        "ImageLarge": { "type": "string" },
        "DescriptionLong": { "type": "string" },
        "ExecuteRulesOnce": { "type": "boolean" },
        "AllowConfigurationImport": { "type": "boolean" },
        "Script": { "type": "string" },
        "ConfigurationTemplate": { "type": "string" },
        "UpdateAsset": { "type": "boolean" },
        "AlwaysAllowRenewal": { "type": "boolean" },
        "IsSapProduct": { "type": "boolean" },
        "RatePlanTemplateId": { "type": "string" },
        "DescriptionBuilder": { "type": "string" },
        "UserCanEnterQuantity": { "type": "string" },
        "SkipRelatedProductsLoading": { "type": "boolean" },
        "DefaultItemType": { "type": "string" },
        "UserCanChangeItemType": { "type": "string" },
        "Value3": { "type": "string" },
        "Shippings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.SetupSPA.Products.VM.ShippingCostVM"
          }
        },
        "Layout": {
          "$ref": "#/definitions/Webcom.API.SetupSPA.Products.VM.ProductLayoutVM"
        }
      }
    },
    "Webcom.API.SetupSPA.Products.VM.SubscriptionBillingInfoVM": {
      "type": "object",
      "properties": {
        "ContractTerms": {
          "$ref": "#/definitions/Webcom.API.SetupSPA.SubscriptionBilling.VM.ContractTermsVM"
        },
        "MarketRatePlans": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.SetupSPA.SubscriptionBilling.VM.MarketRatePlanVM"
          }
        }
      }
    },
    "Webcom.API.SetupSPA.Products.VM.ProductCategoryVM": {
      "type": "object",
      "properties": {
        "Id": { "format": "int32", "type": "integer" },
        "Name": { "type": "string" },
        "Rank": { "format": "int32", "type": "integer" }
      }
    },
    "Webcom.API.SetupSPA.Products.VM.ShippingCostVM": {
      "type": "object",
      "properties": {
        "Id": { "format": "int32", "type": "integer" },
        "Expression": { "type": "string" }
      }
    },
    "Webcom.API.SetupSPA.Products.VM.ProductLayoutVM": {
      "type": "object",
      "properties": {
        "Tabs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.SetupSPA.Products.VM.ProductTabVM"
          }
        },
        "ResponderAttributes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.SetupSPA.Products.VM.ResponderAttributeVM"
          }
        },
        "ResponderLineItems": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.SetupSPA.Products.VM.ResponderAttributeVM"
          }
        },
        "ResponderTemplateId": { "format": "int32", "type": "integer" }
      }
    },
    "Webcom.API.SetupSPA.SubscriptionBilling.VM.ContractTermsVM": {
      "type": "object",
      "properties": {
        "ContractTermLength": {
          "format": "int32",
          "description": "Length of contract in months",
          "type": "integer"
        },
        "MinimumContractTermLength": {
          "format": "int32",
          "description": "Minimum length of contract in months - earliest time when contract can be terminated",
          "type": "integer"
        }
      }
    },
    "Webcom.API.SetupSPA.SubscriptionBilling.VM.MarketRatePlanVM": {
      "description": "VM that contains RatePlan mapping and MarketId",
      "type": "object",
      "properties": {
        "MarketId": {
          "format": "int32",
          "description": "Market for selected rate plan",
          "type": "integer"
        },
        "RatePlan": {
          "$ref": "#/definitions/Webcom.API.SetupSPA.SubscriptionBilling.VM.RatePlanVM",
          "description": "Rate plan VM mapping"
        }
      }
    },
    "Webcom.API.SetupSPA.Products.VM.ProductTabVM": {
      "type": "object",
      "properties": {
        "Id": { "format": "int32", "type": "integer" },
        "Code": { "format": "int32", "type": "integer" },
        "Name": { "type": "string" },
        "Rank": { "format": "int32", "type": "integer" },
        "TemplateId": { "format": "int32", "type": "integer" },
        "RDTemplateId": { "format": "int32", "type": "integer" },
        "Attributes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.SetupSPA.Products.VM.ConfiguratorAttributeVM"
          }
        },
        "VisibilityId": { "format": "int32", "type": "integer" },
        "VisibilityCondition": { "type": "string" }
      }
    },
    "Webcom.API.SetupSPA.Products.VM.ResponderAttributeVM": {
      "type": "object",
      "properties": {
        "Id": { "format": "int32", "type": "integer" },
        "StandardAttributeCode": { "format": "int32", "type": "integer" },
        "Name": { "type": "string" },
        "Rank": { "format": "int32", "type": "integer" },
        "Value": {
          "$ref": "#/definitions/Webcom.API.SetupSPA.Products.VM.ResponderAttributeValueVM"
        }
      }
    },
    "Webcom.API.SetupSPA.SubscriptionBilling.VM.RatePlanVM": {
      "description": "RatePlan view model extented from SB RatePlan",
      "type": "object",
      "properties": {
        "RatePlanTemplate": {
          "$ref": "#/definitions/Webcom.API.SetupSPA.SubscriptionBilling.VM.RatePlanTemplateVM",
          "description": "RatePlanTemplate for this RatePlan"
        },
        "Id": { "description": "RatePlan ID", "type": "string" },
        "Code": { "description": "RatePlan Code", "type": "string" },
        "Description": {
          "description": "RatePlan Description",
          "type": "string"
        },
        "Snapshots": {
          "description": "List of Snapshots",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.SetupSPA.SubscriptionBilling.VM.SnapshotVM"
          }
        },
        "Tags": {
          "description": "List of Tags",
          "type": "array",
          "items": { "type": "string" }
        },
        "MarketId": {
          "format": "int32",
          "description": "Gets or sets the market id.",
          "type": "integer"
        }
      }
    },
    "Webcom.API.SetupSPA.Products.VM.ConfiguratorAttributeVM": {
      "type": "object",
      "properties": {
        "Id": { "format": "int32", "type": "integer" },
        "StandardAttributeCode": { "format": "int32", "type": "integer" },
        "Name": { "type": "string" },
        "Rank": { "format": "int32", "type": "integer" },
        "DisplayAs": {
          "format": "int32",
          "enum": [
            1,
            2,
            3,
            4,
            5,
            6,
            50,
            57,
            71,
            91,
            92,
            93,
            94,
            95,
            96,
            97,
            98,
            99,
            100,
            101,
            102,
            103,
            951,
            999
          ],
          "type": "integer"
        },
        "ButtonText": { "type": "string" },
        "Values": { "type": "array", "items": { "type": "string" } },
        "ContainerValue": {
          "$ref": "#/definitions/Webcom.API.SetupSPA.Products.VM.ContainerLayoutValueVM"
        },
        "IsWholeRow": { "type": "boolean" },
        "DataType": { "type": "string" }
      }
    },
    "Webcom.API.SetupSPA.Products.VM.ResponderAttributeValueVM": {
      "type": "object",
      "properties": {
        "DisplayValue": { "type": "string" },
        "Price": { "format": "double", "type": "number" }
      }
    },
    "Webcom.API.SetupSPA.SubscriptionBilling.VM.RatePlanTemplateVM": {
      "type": "object",
      "properties": {
        "Id": { "type": "string" },
        "Number": { "format": "int32", "type": "integer" },
        "Description": { "type": "string" },
        "Parameters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.SetupSPA.SubscriptionBilling.VM.RatePlanTemplateParameterVM"
          }
        },
        "Tags": { "type": "array", "items": { "type": "string" } },
        "Currency": {
          "$ref": "#/definitions/Webcom.API.SetupSPA.SubscriptionBilling.VM.CurrencyParameterVM"
        },
        "Periodicity": {
          "$ref": "#/definitions/Webcom.API.SetupSPA.SubscriptionBilling.VM.PeriodicityParameterVM"
        },
        "Charges": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.SetupSPA.SubscriptionBilling.VM.ChargesVM"
          }
        },
        "PossibleMarkets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.SetupSPA.Common.LookupVM"
          }
        },
        "MarketCurrencyMapping": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.SetupSPA.Common.LookupVM"
          }
        },
        "SubscriptionParameters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.SetupSPA.SubscriptionBilling.VM.SubscriptionParameterVM"
          }
        },
        "PercentageOperationLookups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.SetupSPA.Common.LookupVM"
          }
        }
      }
    },
    "Webcom.API.SetupSPA.SubscriptionBilling.VM.SnapshotVM": {
      "type": "object",
      "properties": {
        "EffectiveAt": {
          "description": "Snapshot Effective At",
          "type": "string"
        },
        "Parameters": {
          "description": "List of RatePlan parameters",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.SetupSPA.SubscriptionBilling.VM.RatePlanParameterVM"
          }
        }
      }
    },
    "Webcom.API.SetupSPA.Products.VM.ContainerLayoutValueVM": {
      "type": "object",
      "properties": {
        "CanAddNewRow": { "type": "boolean" },
        "HasActions": { "type": "boolean" },
        "Columns": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.SetupSPA.Products.VM.ContainerColumnLayoutVM"
          }
        },
        "Rows": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.SetupSPA.Products.VM.ContainerRowLayoutVM"
          }
        }
      }
    },
    "Webcom.API.SetupSPA.SubscriptionBilling.VM.RatePlanTemplateParameterVM": {
      "type": "object",
      "properties": {
        "Code": { "type": "string" },
        "Description": { "type": "string" },
        "Type": {
          "format": "int32",
          "enum": [0, 1, 2, 3, 4, 5, 6, 7, 8],
          "type": "integer"
        }
      }
    },
    "Webcom.API.SetupSPA.SubscriptionBilling.VM.CurrencyParameterVM": {
      "type": "object",
      "properties": {
        "Value": { "type": "string" },
        "ParameterCode": { "type": "string" }
      }
    },
    "Webcom.API.SetupSPA.SubscriptionBilling.VM.PeriodicityParameterVM": {
      "type": "object",
      "properties": {
        "Value": { "type": "string" },
        "ParameterCode": { "type": "string" },
        "ViewValue": { "type": "string" }
      }
    },
    "Webcom.API.SetupSPA.SubscriptionBilling.VM.ChargesVM": {
      "type": "object",
      "properties": {
        "Id": { "type": "string" },
        "ChargeType": { "type": "string" },
        "RatingType": { "type": "string" },
        "Metric": {
          "$ref": "#/definitions/Webcom.API.SetupSPA.SubscriptionBilling.VM.MetricVM"
        },
        "Billing": {
          "$ref": "#/definitions/Webcom.API.SetupSPA.SubscriptionBilling.VM.BillingVM"
        },
        "CustomAmountCode": { "type": "string" },
        "PriceModel": {
          "$ref": "#/definitions/Webcom.API.SetupSPA.SubscriptionBilling.VM.PriceModelVM"
        }
      }
    },
    "Webcom.API.SetupSPA.SubscriptionBilling.VM.SubscriptionParameterVM": {
      "type": "object",
      "properties": { "Code": { "type": "string" } }
    },
    "Webcom.API.SetupSPA.SubscriptionBilling.VM.RatePlanParameterVM": {
      "type": "object",
      "properties": {
        "Code": { "description": "RatePlanParameter Code", "type": "string" },
        "Value": { "description": "RatePlanParameter Value", "type": "string" },
        "InputValue": {
          "description": "RatePlanParameter InputValue",
          "type": "string"
        },
        "Type": {
          "format": "int32",
          "description": "RatePlanParameter Type.",
          "enum": [0, 1, 2, 3, 4, 5, 6, 7, 8],
          "type": "integer"
        },
        "PercentageOperation": {
          "format": "int32",
          "description": "RatePlanParameter PercentageOperation.",
          "enum": [0, 1, 2],
          "type": "integer"
        }
      }
    },
    "Webcom.API.SetupSPA.Products.VM.ContainerColumnLayoutVM": {
      "type": "object",
      "properties": {
        "ColumnId": { "format": "int32", "type": "integer" },
        "ColumnName": { "type": "string" },
        "DisplayAs": {
          "format": "int32",
          "enum": [0, 1, 2, 3, 4, 5, 7, 9, 10, 11, 12],
          "type": "integer"
        },
        "Values": { "type": "array", "items": { "type": "string" } }
      }
    },
    "Webcom.API.SetupSPA.Products.VM.ContainerRowLayoutVM": {
      "type": "object",
      "properties": {
        "RowId": { "format": "int32", "type": "integer" },
        "Values": { "type": "array", "items": { "type": "string" } }
      }
    },
    "Webcom.API.SetupSPA.SubscriptionBilling.VM.MetricVM": {
      "type": "object",
      "properties": {
        "MetricId": { "type": "string" },
        "Source": { "type": "string" },
        "TechnicalResourceType": { "type": "string" }
      }
    },
    "Webcom.API.SetupSPA.SubscriptionBilling.VM.BillingVM": {
      "type": "object",
      "properties": {
        "BilledInAdvance": {
          "$ref": "#/definitions/Webcom.API.SetupSPA.SubscriptionBilling.VM.BooleanParameterVM"
        },
        "Proratable": {
          "$ref": "#/definitions/Webcom.API.SetupSPA.SubscriptionBilling.VM.BooleanParameterVM"
        }
      }
    },
    "Webcom.API.SetupSPA.SubscriptionBilling.VM.PriceModelVM": {
      "type": "object",
      "properties": {
        "FixedRate": {
          "$ref": "#/definitions/Webcom.API.SetupSPA.SubscriptionBilling.VM.FixedRateVM"
        },
        "FixedFee": {
          "$ref": "#/definitions/Webcom.API.SetupSPA.SubscriptionBilling.VM.FixedFeeVM"
        },
        "BlockRate": {
          "$ref": "#/definitions/Webcom.API.SetupSPA.SubscriptionBilling.VM.BlockRateVM"
        },
        "AllUnitVolumeRate": {
          "$ref": "#/definitions/Webcom.API.SetupSPA.SubscriptionBilling.VM.AllUnitVolumeRateVM"
        },
        "TierRate": {
          "$ref": "#/definitions/Webcom.API.SetupSPA.SubscriptionBilling.VM.TierRateVM"
        },
        "PercentageRate": {
          "$ref": "#/definitions/Webcom.API.SetupSPA.SubscriptionBilling.VM.PercentageRateVM"
        }
      }
    },
    "Webcom.API.SetupSPA.SubscriptionBilling.VM.BooleanParameterVM": {
      "type": "object",
      "properties": {
        "Value": { "type": "boolean" },
        "ParameterCode": { "type": "string" }
      }
    },
    "Webcom.API.SetupSPA.SubscriptionBilling.VM.FixedRateVM": {
      "type": "object",
      "properties": {
        "Id": { "type": "string" },
        "Price": {
          "$ref": "#/definitions/Webcom.API.SetupSPA.SubscriptionBilling.VM.AmountParameterVM"
        }
      }
    },
    "Webcom.API.SetupSPA.SubscriptionBilling.VM.FixedFeeVM": {
      "type": "object",
      "properties": {
        "Id": { "type": "string" },
        "Price": {
          "$ref": "#/definitions/Webcom.API.SetupSPA.SubscriptionBilling.VM.AmountParameterVM"
        }
      }
    },
    "Webcom.API.SetupSPA.SubscriptionBilling.VM.BlockRateVM": {
      "type": "object",
      "properties": {
        "Id": { "type": "string" },
        "IncludedQuantity": {
          "$ref": "#/definitions/Webcom.API.SetupSPA.SubscriptionBilling.VM.IncludedQuantityParameterVM"
        },
        "BlockSize": {
          "$ref": "#/definitions/Webcom.API.SetupSPA.SubscriptionBilling.VM.BlockSizeParameterVM"
        },
        "PricePerBlock": {
          "$ref": "#/definitions/Webcom.API.SetupSPA.SubscriptionBilling.VM.AmountParameterVM"
        }
      }
    },
    "Webcom.API.SetupSPA.SubscriptionBilling.VM.AllUnitVolumeRateVM": {
      "type": "object",
      "properties": {
        "Id": { "type": "string" },
        "Tiers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.SetupSPA.SubscriptionBilling.VM.AllUnitVolumeTierVM"
          }
        },
        "BlockSize": {
          "$ref": "#/definitions/Webcom.API.SetupSPA.SubscriptionBilling.VM.BlockSizeParameterVM"
        },
        "MinimumBlocks": {
          "$ref": "#/definitions/Webcom.API.SetupSPA.SubscriptionBilling.VM.MinimumBlocksParameterVM"
        }
      }
    },
    "Webcom.API.SetupSPA.SubscriptionBilling.VM.TierRateVM": {
      "type": "object",
      "properties": {
        "Id": { "type": "string" },
        "BlockSize": {
          "$ref": "#/definitions/Webcom.API.SetupSPA.SubscriptionBilling.VM.BlockSizeParameterVM"
        },
        "MinimumBlocks": {
          "$ref": "#/definitions/Webcom.API.SetupSPA.SubscriptionBilling.VM.MinimumBlocksParameterVM"
        },
        "Tiers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.SetupSPA.SubscriptionBilling.VM.TierVM"
          }
        }
      }
    },
    "Webcom.API.SetupSPA.SubscriptionBilling.VM.PercentageRateVM": {
      "type": "object",
      "properties": {
        "Id": { "type": "string" },
        "Ratio": {
          "$ref": "#/definitions/Webcom.API.SetupSPA.SubscriptionBilling.VM.PercentageParameterVM"
        },
        "PricePerUnit": {
          "$ref": "#/definitions/Webcom.API.SetupSPA.SubscriptionBilling.VM.AmountParameterVM"
        }
      }
    },
    "Webcom.API.SetupSPA.SubscriptionBilling.VM.AmountParameterVM": {
      "type": "object",
      "properties": {
        "Value": { "format": "double", "type": "number" },
        "ParameterCode": { "type": "string" }
      }
    },
    "Webcom.API.SetupSPA.SubscriptionBilling.VM.IncludedQuantityParameterVM": {
      "type": "object",
      "properties": {
        "Value": { "format": "int64", "type": "integer" },
        "ParameterCode": { "type": "string" }
      }
    },
    "Webcom.API.SetupSPA.SubscriptionBilling.VM.BlockSizeParameterVM": {
      "type": "object",
      "properties": {
        "Value": { "format": "int64", "type": "integer" },
        "ParameterCode": { "type": "string" }
      }
    },
    "Webcom.API.SetupSPA.SubscriptionBilling.VM.AllUnitVolumeTierVM": {
      "type": "object",
      "properties": {
        "Bound": {
          "$ref": "#/definitions/Webcom.API.SetupSPA.SubscriptionBilling.VM.BoundParameterVM"
        },
        "PricePerUnit": {
          "$ref": "#/definitions/Webcom.API.SetupSPA.SubscriptionBilling.VM.AmountParameterVM"
        },
        "FixedPrice": {
          "$ref": "#/definitions/Webcom.API.SetupSPA.SubscriptionBilling.VM.AmountParameterVM"
        },
        "PricePerBlock": {
          "$ref": "#/definitions/Webcom.API.SetupSPA.SubscriptionBilling.VM.AmountParameterVM"
        }
      }
    },
    "Webcom.API.SetupSPA.SubscriptionBilling.VM.MinimumBlocksParameterVM": {
      "type": "object",
      "properties": {
        "Value": { "format": "int64", "type": "integer" },
        "ParameterCode": { "type": "string" }
      }
    },
    "Webcom.API.SetupSPA.SubscriptionBilling.VM.TierVM": {
      "type": "object",
      "properties": {
        "Bound": {
          "$ref": "#/definitions/Webcom.API.SetupSPA.SubscriptionBilling.VM.BoundParameterVM"
        },
        "PricePerUnit": {
          "$ref": "#/definitions/Webcom.API.SetupSPA.SubscriptionBilling.VM.AmountParameterVM"
        },
        "PricePerBlock": {
          "$ref": "#/definitions/Webcom.API.SetupSPA.SubscriptionBilling.VM.AmountParameterVM"
        }
      }
    },
    "Webcom.API.SetupSPA.SubscriptionBilling.VM.PercentageParameterVM": {
      "type": "object",
      "properties": {
        "Value": { "type": "string" },
        "RatioType": {
          "format": "int32",
          "enum": [0, 1, 2],
          "type": "integer"
        },
        "ParameterCode": { "type": "string" }
      }
    },
    "Webcom.API.SetupSPA.SubscriptionBilling.VM.BoundParameterVM": {
      "type": "object",
      "properties": {
        "Value": { "format": "int64", "type": "integer" },
        "ParameterCode": { "type": "string" }
      }
    },
    "Webcom.API.SetupSPA.Common.UpdateInfoVM": {
      "type": "object",
      "properties": {
        "Id": { "format": "int32", "type": "integer" },
        "ModifiedBy": { "type": "string" },
        "ModifiedDate": { "type": "string" }
      }
    },
    "Webcom.API.Common.Models.PagedDataVM[Webcom.API.SetupSPA.Products.VM.ProductsVersionRowVM]": {
      "description": "Paged data for provided type",
      "type": "object",
      "properties": {
        "PagedRecords": {
          "description": "List of paged records",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.SetupSPA.Products.VM.ProductsVersionRowVM"
          }
        },
        "TotalNumberOfRecords": {
          "format": "int32",
          "description": "Total number of records",
          "type": "integer"
        }
      }
    },
    "Webcom.API.SetupSPA.Products.VM.ProductsVersionRowVM": {
      "description": "ProductsVersionRowVM",
      "type": "object",
      "properties": {
        "IsSAPProduct": {
          "description": "Gets or set whether the product was created/synchronized from SAP system",
          "type": "boolean"
        },
        "ProductNameByVersion": {
          "description": "ProductNameByVersion",
          "type": "string"
        },
        "CreatedBy": { "description": "Created By", "type": "string" },
        "CreatedDate": { "description": "Created Date", "type": "string" },
        "ProductSystemId": {
          "description": "Product System Id",
          "type": "string"
        },
        "ProductId": {
          "format": "int32",
          "description": "Product Id",
          "type": "integer"
        },
        "ProductVersionName": {
          "description": "Product Version Name",
          "type": "string"
        },
        "SAPKBId": {
          "format": "int32",
          "description": "Gets or sets Knowladgebase id",
          "type": "integer"
        },
        "SAPHashingVersion": {
          "description": "Gets or sets Knowladgebase hash version",
          "type": "string"
        },
        "SAPKBVersion": {
          "description": "Gets or sets Knowladgebase version",
          "type": "string"
        },
        "SAPKBBuildNumber": {
          "format": "int32",
          "description": "Gets or sets Knowladgebase build number",
          "type": "integer"
        },
        "SAPEffectiveDate": {
          "description": "Gets or sets SAP effective date",
          "type": "string"
        },
        "Id": { "format": "int32", "description": "Id", "type": "integer" },
        "Description": { "description": "Description", "type": "string" },
        "VersionNumber": {
          "format": "int32",
          "description": "VersionNumber",
          "type": "integer"
        },
        "IsActive": { "description": "Is Active", "type": "boolean" }
      }
    },
    "Webcom.API.SetupSPA.Products.VM.ProductVersionSimpleVM": {
      "description": "ProductVersionSimpleVM",
      "type": "object",
      "properties": {
        "Id": { "format": "int32", "description": "Id", "type": "integer" },
        "Description": { "description": "Description", "type": "string" },
        "ProductVersionName": {
          "description": "Product Version Name",
          "type": "string"
        },
        "VersionNumber": {
          "format": "int32",
          "description": "VersionNumber",
          "type": "integer"
        },
        "IsActive": { "description": "Is Active", "type": "boolean" }
      }
    },
    "Webcom.API.Common.Models.PagedDataVM[Webcom.API.SetupSPA.Products.VM.ProductAttributeRowVM]": {
      "description": "Paged data for provided type",
      "type": "object",
      "properties": {
        "PagedRecords": {
          "description": "List of paged records",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.SetupSPA.Products.VM.ProductAttributeRowVM"
          }
        },
        "TotalNumberOfRecords": {
          "format": "int32",
          "description": "Total number of records",
          "type": "integer"
        }
      }
    },
    "Webcom.API.SetupSPA.Products.VM.ProductAttributeRowVM": {
      "description": "Data for product attributes grid",
      "type": "object",
      "properties": {
        "Id": { "format": "int32", "description": "Id", "type": "integer" },
        "StandardAttributeCode": {
          "format": "int32",
          "description": "Standard attribute code, this is not visible in table, but it is used for accessing attribute info if user click edit",
          "type": "integer"
        },
        "Name": { "description": "Attribute name", "type": "string" },
        "IsLineItem": { "description": "Is line Item", "type": "boolean" },
        "DisplayType": {
          "description": "Display type (Drop down...)",
          "type": "string"
        },
        "NumberOfValues": {
          "description": "Display type (Drop down...)",
          "type": "string"
        },
        "Tabs": { "description": "Is attribute displayed", "type": "string" },
        "ProductId": {
          "format": "int32",
          "description": "Product id",
          "type": "integer"
        },
        "IsRequired": {
          "description": "Is attribute required",
          "type": "boolean"
        }
      }
    },
    "Webcom.API.Common.Models.PagedDataVM[Webcom.API.SetupSPA.Products.VM.ProductAliasAttributeRowVM]": {
      "description": "Paged data for provided type",
      "type": "object",
      "properties": {
        "PagedRecords": {
          "description": "List of paged records",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.SetupSPA.Products.VM.ProductAliasAttributeRowVM"
          }
        },
        "TotalNumberOfRecords": {
          "format": "int32",
          "description": "Total number of records",
          "type": "integer"
        }
      }
    },
    "Webcom.API.SetupSPA.Products.VM.ProductAliasAttributeRowVM": {
      "description": "Alias attribute row",
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "description": "Alias attribute id (product attribute id)",
          "type": "integer"
        },
        "Name": { "description": "Attribute name", "type": "string" },
        "DisplayType": {
          "description": "Attribute display type",
          "type": "string"
        },
        "DisplayPermission": {
          "description": "Attribute display permission",
          "type": "string"
        },
        "Values": {
          "description": "Comma separated selected attribute values",
          "type": "string"
        }
      }
    },
    "Webcom.API.SetupSPA.Products.VM.ProductAliasVM": {
      "description": "Product alias VM",
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "description": "Product alias id",
          "type": "integer"
        },
        "Alias": {
          "$ref": "#/definitions/Webcom.API.SetupSPA.Products.VM.ProductVM",
          "description": "Alias product"
        },
        "ProductId": {
          "format": "int32",
          "description": "Original product id",
          "type": "integer"
        },
        "ProductName": {
          "description": "Original product name",
          "type": "string"
        }
      }
    },
    "Webcom.API.SetupSPA.Products.VM.ProductAliasAttributeVM": {
      "description": "Product alias attribute",
      "type": "object",
      "properties": {
        "PaId": {
          "format": "int32",
          "description": "Product attribute id",
          "type": "integer"
        },
        "Name": { "description": "Attribute name", "type": "string" },
        "DisplayAs": {
          "description": "Attribute display type",
          "type": "string"
        },
        "IsFreeForm": {
          "description": "Is attribute free form",
          "type": "boolean"
        },
        "FreeFormValue": { "description": "Free form value", "type": "string" },
        "DisplayType": {
          "format": "int32",
          "description": "Display type within configurator (show, readonly, hidden)",
          "enum": [0, 1, 2],
          "type": "integer"
        },
        "SelectedAttributeValueIds": {
          "description": "Selected attribute value ids",
          "type": "array",
          "items": { "format": "int32", "type": "integer" }
        }
      }
    },
    "Webcom.API.SetupSPA.Products.VM.ProducDefinitionLookupVM": {
      "type": "object",
      "properties": {
        "ProductDisplayTypes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.SetupSPA.Common.LookupVM"
          }
        },
        "Types": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.SetupSPA.Common.LookupVM"
          }
        },
        "PricingMechanisme": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.SetupSPA.Common.LookupVM"
          }
        },
        "LineItemInfoCustomColumnsCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Webcom.API.SetupSPA.Products.VM.AttributeInstanceLookupVM": {
      "type": "object",
      "properties": {
        "AvailableDisplayTypes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.SetupSPA.Common.LookupVM[DataModel.DisplayAttributeAs]"
          }
        },
        "ConfigControlDefns": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.SetupSPA.Common.LookupVM[System.Int32]"
          }
        },
        "ShowTransferToContainer": { "type": "boolean" },
        "UseRecurringPriceAndCost": { "type": "boolean" }
      }
    },
    "Webcom.API.SetupSPA.Common.LookupVM[DataModel.DisplayAttributeAs]": {
      "description": "Lookup view model",
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "enum": [
            1,
            2,
            3,
            4,
            5,
            6,
            50,
            57,
            71,
            91,
            92,
            93,
            94,
            95,
            96,
            97,
            98,
            99,
            100,
            101,
            102,
            103,
            951,
            999
          ],
          "type": "integer"
        },
        "Text": { "type": "string" }
      }
    },
    "Webcom.API.SetupSPA.Products.VM.AttributeInstanceVM": {
      "type": "object",
      "properties": {
        "Id": { "format": "int32", "type": "integer" },
        "ProductId": { "format": "int32", "type": "integer" },
        "AttributeName": { "type": "string" },
        "Description": { "type": "string" },
        "AttributeId": { "format": "int32", "type": "integer" },
        "LineItem": { "type": "boolean" },
        "Required": { "type": "boolean" },
        "DisplayAs": {
          "format": "int32",
          "enum": [
            1,
            2,
            3,
            4,
            5,
            6,
            50,
            57,
            71,
            91,
            92,
            93,
            94,
            95,
            96,
            97,
            98,
            99,
            100,
            101,
            102,
            103,
            951,
            999
          ],
          "type": "integer"
        },
        "AttributeImageColumns": { "format": "int32", "type": "integer" },
        "SpanAttribute": { "type": "boolean" },
        "AttributeConfigControlId": { "format": "int32", "type": "integer" },
        "Label": { "type": "string" },
        "Hint": { "type": "string" },
        "ShowPrice": { "type": "boolean" },
        "ShowRecurringPrice": { "type": "boolean" },
        "Width": { "format": "int32", "type": "integer" },
        "Height": { "format": "int32", "type": "integer" },
        "AttributeQuantity": { "type": "string" },
        "StartDate": { "type": "string" },
        "EndDate": { "type": "string" },
        "EscapeText": { "type": "string" },
        "ValidInputFrom": { "type": "string" },
        "ValidInputTo": { "type": "string" },
        "TransferToContainer": { "type": "boolean" },
        "ExecuteRulesOnChange": { "type": "boolean" },
        "RefreshConfiguratorOnChange": { "type": "boolean" },
        "ExecuteScripts": { "type": "boolean" },
        "PositionX": { "type": "string" },
        "PositionY": { "type": "string" },
        "SizeWidth": { "type": "string" },
        "SizeHeight": { "type": "string" },
        "Background": { "type": "string" },
        "ABSOption": {
          "format": "int32",
          "enum": [0, 1, 2],
          "type": "integer"
        },
        "InheritProductType": {
          "$ref": "#/definitions/Webcom.API.SetupSPA.Common.LookupVM"
        },
        "ScriptOnRowAdded": { "type": "string" },
        "ScriptOnRowCopied": { "type": "string" },
        "ScriptOnRowDeleted": { "type": "string" },
        "ScriptOnCellEdited": { "type": "string" },
        "DataType": { "type": "string" },
        "IncludeHiddenAttrInKOContext": { "type": "boolean" },
        "LineItemInfo": {
          "$ref": "#/definitions/Webcom.API.SetupSPA.Products.VM.LineItemInfoVM"
        },
        "Values": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.SetupSPA.Products.VM.AttributeValueInstanceVM"
          }
        },
        "ContainerSettings": {
          "$ref": "#/definitions/Webcom.API.SetupSPA.Attributes.VM.ContainerSettingsVM"
        },
        "AttributeInstanceScripts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.SetupSPA.Products.VM.AttributeInstanceScriptVM"
          }
        },
        "ContainerTransferSettings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.SetupSPA.Products.VM.ContainerTransferSettingVM"
          }
        }
      }
    },
    "Webcom.API.SetupSPA.Products.VM.LineItemInfoVM": {
      "type": "object",
      "properties": {
        "ExpCanEnterQty": { "type": "string" },
        "ExpPropagateQtyFromMI": { "type": "string" },
        "Rank": { "format": "int32", "type": "integer" },
        "Value1": { "type": "string" },
        "Value2": { "type": "string" },
        "Value3": { "type": "string" }
      }
    },
    "Webcom.API.SetupSPA.Products.VM.AttributeValueInstanceVM": {
      "type": "object",
      "properties": {
        "Id": { "format": "int32", "type": "integer" },
        "DisplaytoUser": { "type": "boolean" },
        "Display": { "description": "from attributevalue", "type": "string" },
        "ListAsLineItemWhenPriceIsZero": { "type": "boolean" },
        "SortRank": { "format": "int32", "type": "integer" },
        "Price": { "format": "double", "type": "number" },
        "DefaultQuantity": { "format": "double", "type": "number" },
        "PriceBuilder": { "type": "string" },
        "RecurringPriceBuilder": { "type": "string" },
        "CatalogCode": { "type": "string" },
        "CostBuilder": { "type": "string" },
        "RecurringCostBuilder": { "type": "string" },
        "DescriptionBuilder": { "type": "string" },
        "PricingCode": { "type": "string" },
        "UsePricebook": { "type": "boolean" },
        "Preselected": { "type": "boolean" },
        "RefProduct": {
          "$ref": "#/definitions/Webcom.API.SetupSPA.Products.VM.AttributeValueProductRefVM"
        },
        "ImageOn": { "type": "string" },
        "ImageOff": { "type": "string" },
        "Value": {
          "$ref": "#/definitions/Webcom.API.SetupSPA.Attributes.VM.AttributeValueVM"
        },
        "ABSCategories": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.SetupSPA.Common.LookupVM[System.Int32]"
          }
        }
      }
    },
    "Webcom.API.SetupSPA.Products.VM.AttributeInstanceScriptVM": {
      "type": "object",
      "properties": {
        "Rank": { "format": "int32", "type": "integer" },
        "Id": { "format": "int32", "type": "integer" },
        "Text": { "type": "string" }
      }
    },
    "Webcom.API.SetupSPA.Products.VM.ContainerTransferSettingVM": {
      "type": "object",
      "properties": {
        "Id": { "format": "int32", "type": "integer" },
        "PaId": { "format": "int32", "type": "integer" },
        "AttributeName": { "type": "string" },
        "PropagateChanges": { "type": "boolean" }
      }
    },
    "Webcom.API.SetupSPA.Products.VM.AttributeValueProductRefVM": {
      "type": "object",
      "properties": {
        "Id": { "format": "int32", "type": "integer" },
        "UseCustomPricing": { "type": "boolean" },
        "DisplayTypeId": {
          "format": "int32",
          "enum": [1, 2, 3, 4, 5],
          "type": "integer"
        },
        "PriceBuilder": { "type": "string" },
        "CostBuilder": { "type": "string" },
        "RecurringPriceFormula": { "type": "string" },
        "RecurringCostFormula": { "type": "string" },
        "Name": { "type": "string" },
        "DescriptionBuilder": { "type": "string" }
      }
    },
    "Webcom.API.SetupSPA.Products.VM.AdvancedRuleVM": {
      "type": "object",
      "properties": {
        "Id": { "format": "int32", "type": "integer" },
        "Active": { "type": "boolean" },
        "StartDate": { "type": "string" },
        "EndDate": { "type": "string" },
        "Name": { "type": "string" },
        "Description": { "type": "string" },
        "Condition": { "type": "string" },
        "Action": { "type": "string" },
        "CreatedDate": { "type": "string" },
        "ModifiedDate": { "type": "string" },
        "CreatedBy": { "type": "string" },
        "ModifiedBy": { "type": "string" }
      }
    },
    "Webcom.API.SetupSPA.Products.VM.AttributeTriggerDefinitionVM": {
      "description": "VM for Attribute Trigger definition and rules",
      "type": "object",
      "properties": {
        "AttributeName": { "description": "Attribute name", "type": "string" },
        "Description": { "description": "Description", "type": "string" },
        "DateModified": { "description": "Date Modified", "type": "string" },
        "ModifiedBy": { "description": "Modified by", "type": "string" },
        "DateCreated": { "description": "Date Created", "type": "string" },
        "CreatedBy": { "description": "Created By", "type": "string" },
        "ChangeTrigger": { "description": "Change Trigger", "type": "string" },
        "IsChangeTriggerEngine": {
          "description": "Is Change Trigger Engine",
          "type": "boolean"
        },
        "SelectTrigger": { "description": "Select Trigger", "type": "string" },
        "IsSelectTriggerEngine": {
          "description": "Is Select Trigger Engine",
          "type": "boolean"
        },
        "ResetTrigger": { "description": "Reset Trigger", "type": "string" },
        "IsResetTriggerEngine": {
          "description": "Is Reset Trigger Engine",
          "type": "boolean"
        },
        "ProductId": {
          "format": "int32",
          "description": "Product Id",
          "type": "integer"
        },
        "ProductAttributeId": {
          "format": "int32",
          "description": "Product Attribute Id",
          "type": "integer"
        }
      }
    },
    "Webcom.API.SetupSPA.Products.VM.ProductValidationMessageVM": {
      "type": "object",
      "properties": {
        "Id": { "format": "int32", "type": "integer" },
        "IsActive": { "type": "boolean" },
        "StartDate": { "type": "string" },
        "EndDate": { "type": "string" },
        "ShowInResponder": { "type": "boolean" },
        "MakeProductUncomplete": { "type": "boolean" },
        "Name": { "type": "string" },
        "Description": { "type": "string" },
        "ConditionSource": { "type": "string" },
        "MessageSource": { "type": "string" }
      }
    },
    "Webcom.API.SetupSPA.Products.VM.ProductScriptVM": {
      "type": "object",
      "properties": {
        "Id": { "format": "int32", "type": "integer" },
        "Name": { "type": "string" },
        "Description": { "type": "string" },
        "Active": { "type": "boolean" },
        "ModifiedBy": { "type": "string" },
        "DateModified": { "type": "string" },
        "StartDate": { "type": "string" },
        "EndDate": { "type": "string" },
        "Script": { "type": "string" },
        "ProductId": { "format": "int32", "type": "integer" },
        "ScriptEngineType": { "format": "int32", "type": "integer" },
        "EventIds": {
          "type": "array",
          "items": { "format": "int32", "type": "integer" }
        },
        "HistoryRecords": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.SetupSPA.Products.VM.ScriptHistoryRecordVM"
          }
        }
      }
    },
    "Webcom.API.SetupSPA.Products.VM.ScriptHistoryRecordVM": {
      "type": "object",
      "properties": {
        "VersionNumber": { "format": "int32", "type": "integer" },
        "Id": { "format": "int32", "type": "integer" },
        "Description": { "type": "string" },
        "Content": { "type": "string" },
        "ChangedBy": { "type": "string" },
        "Created": { "type": "string" }
      }
    },
    "Webcom.API.SetupSPA.Products.VM.EventHandlerScriptVM": {
      "type": "object",
      "properties": {
        "EventHandlerId": { "format": "int32", "type": "integer" },
        "Rank": { "format": "int32", "type": "integer" },
        "ProductId": { "format": "int32", "type": "integer" },
        "EventId": { "format": "int32", "type": "integer" },
        "ScriptId": { "format": "int32", "type": "integer" },
        "ScriptName": { "type": "string" }
      }
    },
    "Webcom.API.Common.Models.PagedDataVM[Webcom.API.SetupSPA.Products.VM.ScriptHistoryRecordVM]": {
      "description": "Paged data for provided type",
      "type": "object",
      "properties": {
        "PagedRecords": {
          "description": "List of paged records",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.SetupSPA.Products.VM.ScriptHistoryRecordVM"
          }
        },
        "TotalNumberOfRecords": {
          "format": "int32",
          "description": "Total number of records",
          "type": "integer"
        }
      }
    },
    "Webcom.API.SetupSPA.Products.VM.AttributeValuesListVM": {
      "type": "object",
      "properties": {
        "ProductId": { "format": "int32", "type": "integer" },
        "StandardAttributeCode": { "format": "int32", "type": "integer" },
        "AttributeValues": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.SetupSPA.Attributes.VM.AttributeValueVM"
          }
        }
      }
    },
    "Webcom.API.SetupSPA.Products.VM.ProductTypeLightVM": {
      "description": "Product Type (Light)",
      "type": "object",
      "properties": {
        "Id": { "format": "int32", "type": "integer" },
        "Name": { "type": "string" },
        "SystemId": { "type": "string" },
        "Rank": { "format": "int32", "type": "integer" }
      }
    },
    "Webcom.API.Common.Models.PagedDataVM[Webcom.API.SetupSPA.Products.VM.ContainerTransferSettingVM]": {
      "description": "Paged data for provided type",
      "type": "object",
      "properties": {
        "PagedRecords": {
          "description": "List of paged records",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.SetupSPA.Products.VM.ContainerTransferSettingVM"
          }
        },
        "TotalNumberOfRecords": {
          "format": "int32",
          "description": "Total number of records",
          "type": "integer"
        }
      }
    },
    "Webcom.API.Common.Models.PagedDataVM[Webcom.API.SetupSPA.Products.VM.ProductSimpleRulesRowVM]": {
      "description": "Paged data for provided type",
      "type": "object",
      "properties": {
        "PagedRecords": {
          "description": "List of paged records",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.SetupSPA.Products.VM.ProductSimpleRulesRowVM"
          }
        },
        "TotalNumberOfRecords": {
          "format": "int32",
          "description": "Total number of records",
          "type": "integer"
        }
      }
    },
    "Webcom.API.SetupSPA.Products.VM.ProductSimpleRulesRowVM": {
      "type": "object",
      "properties": {
        "Id": { "format": "int32", "type": "integer" },
        "Condition": { "type": "string" },
        "Name": { "type": "string" },
        "Action": { "type": "string" },
        "Description": { "type": "string" },
        "Rank": { "type": "string" },
        "ModifiedDate": { "type": "string" },
        "ModifiedBy": { "type": "string" }
      }
    },
    "Webcom.API.Common.Models.PagedDataVM[Webcom.API.SetupSPA.Products.VM.ProductFormulaRulesRowVM]": {
      "description": "Paged data for provided type",
      "type": "object",
      "properties": {
        "PagedRecords": {
          "description": "List of paged records",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.SetupSPA.Products.VM.ProductFormulaRulesRowVM"
          }
        },
        "TotalNumberOfRecords": {
          "format": "int32",
          "description": "Total number of records",
          "type": "integer"
        }
      }
    },
    "Webcom.API.SetupSPA.Products.VM.ProductFormulaRulesRowVM": {
      "type": "object",
      "properties": {
        "Id": { "format": "int32", "type": "integer" },
        "Condition": { "type": "string" },
        "Name": { "type": "string" },
        "Action": { "type": "string" },
        "Description": { "type": "string" },
        "Rank": { "type": "string" },
        "Active": { "type": "boolean" },
        "ModifiedDate": { "type": "string" },
        "ModifiedBy": { "type": "string" }
      }
    },
    "Webcom.API.Common.Models.PagedDataVM[Webcom.API.SetupSPA.Products.VM.ProductAttributeTriggersRowVM]": {
      "description": "Paged data for provided type",
      "type": "object",
      "properties": {
        "PagedRecords": {
          "description": "List of paged records",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.SetupSPA.Products.VM.ProductAttributeTriggersRowVM"
          }
        },
        "TotalNumberOfRecords": {
          "format": "int32",
          "description": "Total number of records",
          "type": "integer"
        }
      }
    },
    "Webcom.API.SetupSPA.Products.VM.ProductAttributeTriggersRowVM": {
      "type": "object",
      "properties": {
        "Id": { "format": "int32", "type": "integer" },
        "AttributeName": { "type": "string" },
        "Condition": { "type": "string" },
        "Action": { "type": "string" },
        "Description": { "type": "string" },
        "ModifiedDate": { "type": "string" },
        "ModifiedBy": { "type": "string" }
      }
    },
    "Webcom.API.SetupSPA.Common.RankingItemVM": {
      "description": "Used for ranking of items",
      "type": "object",
      "properties": {
        "Id": { "format": "int32", "description": "Id", "type": "integer" },
        "Position": {
          "format": "int32",
          "description": "Rank",
          "type": "integer"
        },
        "Name": { "description": "Name", "type": "string" }
      }
    },
    "Webcom.API.SetupSPA.Products.VM.SimpleRuleVM": {
      "type": "object",
      "properties": {
        "Id": { "format": "int32", "type": "integer" },
        "DependanceId": { "format": "int32", "type": "integer" },
        "ProductId": { "format": "int32", "type": "integer" },
        "Name": { "type": "string" },
        "Description": { "type": "string" },
        "Rank": { "format": "int32", "type": "integer" },
        "DependantPaId": { "format": "int32", "type": "integer" },
        "DependantPavIds": {
          "type": "array",
          "items": { "format": "int32", "type": "integer" }
        },
        "ConditioningPavIds": {
          "type": "array",
          "items": { "format": "int32", "type": "integer" }
        },
        "RuleType": {
          "format": "int32",
          "enum": [1, 2, 3, 4],
          "type": "integer"
        },
        "CreatedBy": { "type": "string" },
        "ModifiedBy": { "type": "string" },
        "CreatedDate": { "type": "string" },
        "ModifiedDate": { "type": "string" },
        "StartDate": { "type": "string" },
        "EndDate": { "type": "string" }
      }
    },
    "Webcom.API.SetupSPA.Attributes.VM.AttributeValueLookupVM": {
      "type": "object",
      "properties": {
        "ProductAttributeId": { "format": "int32", "type": "integer" },
        "Id": { "format": "int32", "type": "integer" },
        "Text": { "type": "string" }
      }
    },
    "Webcom.API.Common.Models.PagedDataVM[Webcom.API.SetupSPA.Products.VM.ProductMessagesRowVM]": {
      "description": "Paged data for provided type",
      "type": "object",
      "properties": {
        "PagedRecords": {
          "description": "List of paged records",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.SetupSPA.Products.VM.ProductMessagesRowVM"
          }
        },
        "TotalNumberOfRecords": {
          "format": "int32",
          "description": "Total number of records",
          "type": "integer"
        }
      }
    },
    "Webcom.API.SetupSPA.Products.VM.ProductMessagesRowVM": {
      "type": "object",
      "properties": {
        "Id": { "format": "int32", "description": "Id", "type": "integer" },
        "Name": { "description": "Name", "type": "string" },
        "Condition": { "description": "Condition", "type": "string" },
        "Message": { "description": "Messages message", "type": "string" },
        "Rank": { "format": "int32", "description": "Rank", "type": "integer" },
        "Description": { "description": "Description", "type": "string" },
        "Active": { "description": "Active", "type": "boolean" },
        "ShowInResponder": {
          "description": "Show in responder",
          "type": "boolean"
        },
        "MakeProductUncomplete": {
          "description": "Make product incomplete",
          "type": "boolean"
        },
        "ModifiedDate": {
          "description": "Date of last modification",
          "type": "string"
        },
        "ModifiedBy": {
          "description": "Username of user who made last modification",
          "type": "string"
        }
      }
    },
    "Webcom.API.Common.Models.PagedDataVM[Webcom.API.SetupSPA.Products.VM.ProductScriptRowVM]": {
      "description": "Paged data for provided type",
      "type": "object",
      "properties": {
        "PagedRecords": {
          "description": "List of paged records",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.SetupSPA.Products.VM.ProductScriptRowVM"
          }
        },
        "TotalNumberOfRecords": {
          "format": "int32",
          "description": "Total number of records",
          "type": "integer"
        }
      }
    },
    "Webcom.API.SetupSPA.Products.VM.ProductScriptRowVM": {
      "description": "Product Scripts for table representation",
      "type": "object",
      "properties": {
        "Id": { "format": "int32", "description": "Id", "type": "integer" },
        "Name": { "description": "Name", "type": "string" },
        "Execution": { "description": "Execution", "type": "string" },
        "Code": { "description": "Code", "type": "string" },
        "Description": { "description": "Description", "type": "string" },
        "Type": { "description": "Type", "type": "string" },
        "DateModified": { "description": "DateModified", "type": "string" },
        "Active": { "description": "Active", "type": "boolean" },
        "IsSystem": {
          "description": "Indicates if script is global",
          "type": "boolean",
          "readOnly": true
        }
      }
    },
    "Webcom.API.Admin.ProxyUser.ProxyUserResponse": {
      "type": "object",
      "properties": {
        "Tenants": {
          "description": "Gets or sets the product.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.Admin.ProxyUser.VM.TenantVM"
          }
        },
        "Users": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.Admin.ProxyUser.VM.UserVM"
          }
        }
      }
    },
    "Webcom.API.Admin.ProxyUser.VM.TenantVM": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "description": "Gets or sets the identifier.",
          "type": "integer"
        },
        "Name": { "description": "Gets or sets the name.", "type": "string" }
      }
    },
    "Webcom.API.Admin.ProxyUser.VM.UserVM": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "description": "Gets or sets the identifier.",
          "type": "integer"
        },
        "Username": {
          "description": "Gets or sets the username.",
          "type": "string"
        },
        "Name": { "description": "Gets or sets the name.", "type": "string" },
        "UserType": {
          "description": "Gets or sets the user type.",
          "type": "string"
        }
      }
    },
    "Webcom.API.SetupSPA.QuoteFields.VM.QuoteFieldLightVM": {
      "type": "object",
      "properties": {
        "Id": { "format": "int32", "type": "integer" },
        "RowType": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            21,
            22,
            23,
            24,
            25,
            26
          ],
          "type": "integer"
        },
        "ColumnType": { "type": "string" },
        "Label": { "type": "string" },
        "IsActive": { "type": "boolean" },
        "IsEditable": { "type": "boolean" },
        "Rank": { "format": "int32", "type": "integer" },
        "AggregationType": {
          "format": "int32",
          "enum": [0, 1, 2, 3, 4, 5],
          "type": "integer"
        },
        "TotalCalculationType": {
          "format": "int32",
          "enum": [0, 1, 2, 3],
          "type": "integer"
        }
      }
    },
    "Webcom.API.SetupSPA.QuoteFields.VM.QuoteFieldVM": {
      "type": "object",
      "properties": {
        "CustomField": {
          "$ref": "#/definitions/Webcom.API.SetupSPA.QuoteFields.VM.CustomFieldVM"
        },
        "Calculations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.SetupSPA.QuoteFields.VM.QuoteFieldCalculationVM"
          }
        },
        "VisibiliyPermissions": {
          "type": "array",
          "items": { "format": "int32", "type": "integer" }
        },
        "EditingPermissions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.SetupSPA.QuoteFields.VM.EditingPermissionsVM"
          }
        },
        "Id": { "format": "int32", "type": "integer" },
        "RowType": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            21,
            22,
            23,
            24,
            25,
            26
          ],
          "type": "integer"
        },
        "ColumnType": { "type": "string" },
        "Label": { "type": "string" },
        "IsActive": { "type": "boolean" },
        "IsEditable": { "type": "boolean" },
        "Rank": { "format": "int32", "type": "integer" },
        "AggregationType": {
          "format": "int32",
          "enum": [0, 1, 2, 3, 4, 5],
          "type": "integer"
        },
        "TotalCalculationType": {
          "format": "int32",
          "enum": [0, 1, 2, 3],
          "type": "integer"
        }
      }
    },
    "Webcom.API.SetupSPA.QuoteFields.VM.CustomFieldVM": {
      "type": "object",
      "properties": {
        "FieldId": { "format": "int32", "type": "integer" },
        "FieldTypeId": { "format": "int32", "type": "integer" },
        "FieldName": { "type": "string" },
        "FieldLabel": { "type": "string" },
        "IsAlwaysAvailableOnUI": { "type": "boolean" },
        "IsFilterable": { "type": "boolean" },
        "IsProtected": { "type": "boolean" },
        "IsSensitive": { "type": "boolean" }
      }
    },
    "Webcom.API.SetupSPA.QuoteFields.VM.QuoteFieldCalculationVM": {
      "type": "object",
      "properties": {
        "Id": { "format": "int32", "type": "integer" },
        "Name": { "type": "string" },
        "RowType": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            21,
            22,
            23,
            24,
            25,
            26
          ],
          "type": "integer"
        },
        "Description": { "type": "string" },
        "Script": { "type": "string" },
        "Rank": { "format": "int32", "type": "integer" },
        "ForceProxyGeneration": { "type": "boolean" },
        "IsCustom": { "type": "boolean" },
        "ExecuteOnDistribute": { "type": "boolean" },
        "IsActive": { "type": "boolean" },
        "EngineType": { "format": "int32", "type": "integer" },
        "Implementation": { "type": "string" }
      }
    },
    "Webcom.API.SetupSPA.QuoteFields.VM.EditingPermissionsVM": {
      "type": "object",
      "properties": {
        "PermissionId": { "format": "int32", "type": "integer" },
        "StatusId": { "format": "int32", "type": "integer" }
      }
    },
    "Webcom.Configurator.Core.QuoteV2.QuoteFields.QuoteFieldCalculation": {
      "type": "object",
      "properties": {
        "Id": { "format": "int32", "type": "integer" },
        "Implementation": { "type": "string" },
        "RowType": { "type": "string" },
        "Name": { "type": "string" },
        "Description": { "type": "string" },
        "IsCustom": { "type": "boolean" },
        "EngineType": { "format": "int32", "type": "integer" },
        "Script": { "type": "string" },
        "Rank": { "format": "int32", "type": "integer" },
        "ExecuteOnAddUpdateItem": { "type": "boolean" },
        "ExecuteOnDistribute": { "type": "boolean" },
        "IsActive": { "type": "boolean" },
        "EntityIdentificator": { "type": "string", "readOnly": true },
        "EntityName": { "type": "string", "readOnly": true }
      }
    },
    "Webcom.API.Common.Models.PagedDataVM[Webcom.API.SetupSPA.QuoteFields.VM.QuoteFieldCalculationScriptHistoryRecordVM]": {
      "description": "Paged data for provided type",
      "type": "object",
      "properties": {
        "PagedRecords": {
          "description": "List of paged records",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.SetupSPA.QuoteFields.VM.QuoteFieldCalculationScriptHistoryRecordVM"
          }
        },
        "TotalNumberOfRecords": {
          "format": "int32",
          "description": "Total number of records",
          "type": "integer"
        }
      }
    },
    "Webcom.API.SetupSPA.QuoteFields.VM.QuoteFieldCalculationScriptHistoryRecordVM": {
      "type": "object",
      "properties": {
        "Id": { "format": "int32", "type": "integer" },
        "CalculationId": { "format": "int32", "type": "integer" },
        "ChangedBy": { "type": "string" },
        "Created": { "type": "string" },
        "Content": { "type": "string" },
        "Description": { "type": "string" },
        "VersionNumber": { "format": "int32", "type": "integer" }
      }
    },
    "Webcom.API.SetupSPA.QuoteFields.VM.QuoteFieldPermissionVM": {
      "type": "object",
      "properties": {
        "VisibilityPermissions": {
          "type": "array",
          "items": { "type": "string" }
        },
        "EditingPermissions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.SetupSPA.QuoteFields.VM.EditingPermissionItemVM"
          }
        }
      }
    },
    "Webcom.API.SetupSPA.QuoteFields.VM.EditingPermissionItemVM": {
      "type": "object",
      "properties": {
        "Name": { "type": "string" },
        "Values": { "type": "array", "items": { "type": "string" } }
      }
    },
    "Webcom.API.Common.Models.PagedDataVM[Webcom.API.SetupSPA.QuoteFields.VM.DistributionCalculationTableRowVM]": {
      "description": "Paged data for provided type",
      "type": "object",
      "properties": {
        "PagedRecords": {
          "description": "List of paged records",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.SetupSPA.QuoteFields.VM.DistributionCalculationTableRowVM"
          }
        },
        "TotalNumberOfRecords": {
          "format": "int32",
          "description": "Total number of records",
          "type": "integer"
        }
      }
    },
    "Webcom.API.SetupSPA.QuoteFields.VM.DistributionCalculationTableRowVM": {
      "type": "object",
      "properties": {
        "Id": { "format": "int32", "type": "integer" },
        "Name": { "type": "string" },
        "Script": { "type": "string" },
        "IsActive": { "type": "boolean" }
      }
    },
    "Webcom.API.RD.Landing.QuoteRedirectResponse": {
      "description": "Response containing rederict url or error message",
      "type": "object",
      "properties": {
        "Message": {
          "description": "Gets or sets the message.",
          "type": "string"
        },
        "InfoMessage": {
          "description": "Gets or sets the info message displayed to user when after the change of quote status user does not have a permission to view quote anymore.",
          "type": "string"
        },
        "Success": {
          "description": "Gets or sets a value indicating whether this {Webcom.API.RD.Landing.QuoteRedirectResponse} is success.",
          "type": "boolean"
        },
        "Redirect": {
          "description": "Gets or sets a value indicating whether this {Webcom.API.RD.Landing.QuoteRedirectResponse} is success.",
          "type": "string"
        }
      }
    },
    "Webcom.Configurator.Models.QuoteList.QuoteListRequest": {
      "type": "object",
      "properties": {
        "SearchString": { "type": "string" },
        "Columns": { "type": "array", "items": { "type": "string" } },
        "Criteria": {
          "type": "array",
          "items": { "type": "array", "items": { "type": "string" } }
        },
        "Skip": { "format": "int32", "type": "integer" },
        "Take": { "format": "int32", "type": "integer" },
        "OrderBy": { "type": "array", "items": { "type": "string" } },
        "UsePaging": { "type": "boolean" },
        "TabId": { "format": "int32", "type": "integer" },
        "LoadDelegatedApproversQuotes": { "type": "boolean" }
      }
    },
    "Webcom.API.RD.QuoteList.ChangeStatusRequest": {
      "description": "Class ChangeStatusRequest.",
      "type": "object",
      "properties": {
        "NewStatus": {
          "format": "int32",
          "description": "Gets or sets the new status.",
          "type": "integer"
        },
        "ActionId": {
          "format": "int32",
          "description": "Gets or sets the action identifier.",
          "type": "integer"
        },
        "CryptedCartId": {
          "description": "Gets or sets the crypted cart identifier.",
          "type": "string"
        },
        "CryptedOwnerId": {
          "description": "Gets or sets the crypted owner identifier.",
          "type": "string"
        },
        "ApproverId": {
          "format": "int32",
          "description": "Gets or sets the approver identifier.",
          "type": "integer"
        }
      }
    },
    "Webcom.API.RD.QuoteList.ExecuteActionRequest": {
      "description": "Class ExecuteActionRequest.",
      "type": "object",
      "properties": {
        "ActionId": {
          "format": "int32",
          "description": "Gets or sets the action identifier.",
          "type": "integer"
        },
        "CryptedCartId": {
          "description": "Gets or sets the crypted cart identifier.",
          "type": "string"
        },
        "CryptedOwnerId": {
          "description": "Gets or sets the crypted owner identifier.",
          "type": "string"
        },
        "ApproverId": {
          "format": "int32",
          "description": "Gets or sets the approver identifier.",
          "type": "integer"
        }
      }
    },
    "Quote.Common.Workflow.ActionExecutionArguments": {
      "type": "object",
      "properties": {
        "GenerateHtml": { "type": "boolean" },
        "NoAction": { "type": "boolean" },
        "AddCustomActionToHistory": { "type": "boolean" },
        "PreviousArgument": {
          "$ref": "#/definitions/Quote.Common.Workflow.ActionExecutionArguments"
        },
        "Result": { "$ref": "#/definitions/Quote.Common.Workflow.Result" },
        "Custom": { "type": "object" },
        "DoNotContinueActionExecution": { "type": "boolean" },
        "RedirectToURL": { "type": "string" },
        "ClientScript": { "type": "string" },
        "NewOwnerId": { "format": "int32", "type": "integer" },
        "NewCartId": { "format": "int32", "type": "integer" },
        "MainAction": {
          "$ref": "#/definitions/Quote.Common.Workflow.GenericAction",
          "readOnly": true
        },
        "PreActions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Quote.Common.Workflow.GenericAction"
          },
          "readOnly": true
        },
        "PostActions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Quote.Common.Workflow.GenericAction"
          },
          "readOnly": true
        },
        "HasCartCompositeNumberChanged": {
          "type": "boolean",
          "readOnly": true
        },
        "OwnerId": { "format": "int32", "type": "integer", "readOnly": true },
        "CartId": { "format": "int32", "type": "integer", "readOnly": true },
        "TabId": { "format": "int32", "type": "integer", "readOnly": true },
        "OldStatusId": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "NewStatusId": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "MainActionId": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "WorkflowTransition": {
          "$ref": "#/definitions/Webcom.Configurator.Core.WorkflowTransition",
          "readOnly": true
        },
        "WorkflowClientData": { "type": "object" },
        "ChangeQuoteStatus": { "type": "boolean" }
      }
    },
    "Quote.Common.Workflow.Result": {
      "type": "object",
      "properties": {
        "Success": { "type": "boolean" },
        "Title": { "type": "string" },
        "SuccessInfo": { "type": "string" },
        "ActionRequiredFailed": { "type": "boolean" },
        "Messages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Quote.Common.Workflow.Result.Message"
          },
          "readOnly": true
        }
      }
    },
    "Quote.Common.Workflow.GenericAction": {
      "type": "object",
      "properties": {
        "WorkflowTransition": {
          "$ref": "#/definitions/Webcom.Configurator.Core.WorkflowTransition"
        },
        "ActionId": { "format": "int32", "type": "integer" },
        "MainAction": {
          "$ref": "#/definitions/Quote.Common.Workflow.GenericAction"
        },
        "Name": { "type": "string" },
        "NotSupported": { "type": "boolean" },
        "PreActionOverNewQuote": { "type": "boolean", "readOnly": true },
        "PostActionOverNewQuote": { "type": "boolean", "readOnly": true },
        "ClientScriptIncludeFiles": {
          "type": "array",
          "items": { "type": "string" },
          "readOnly": true
        },
        "UserActionScript": { "type": "string", "readOnly": true }
      }
    },
    "Webcom.Configurator.Core.WorkflowTransition": {
      "type": "object",
      "properties": {
        "OwnerId": { "format": "int32", "type": "integer" },
        "CartId": { "format": "int32", "type": "integer" },
        "StartStatus": {
          "$ref": "#/definitions/Webcom.Configurator.Core.OrderStatusDefn"
        },
        "MainAction": {
          "$ref": "#/definitions/Webcom.Configurator.Core.Action"
        },
        "EndStatus": {
          "$ref": "#/definitions/Webcom.Configurator.Core.OrderStatusDefn"
        },
        "TabId": { "format": "int32", "type": "integer" },
        "AutoReconfigure": { "type": "boolean" },
        "ConditionalReconfigure": { "type": "boolean" },
        "Condition": { "type": "string" },
        "PreActions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.Configurator.Core.PrePostActionHolder"
          }
        },
        "PostActions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.Configurator.Core.PrePostActionHolder"
          }
        },
        "Notifications": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.Configurator.Core.Notification"
          }
        },
        "PromptForUpgrade": { "type": "boolean" },
        "AutomaticallyUpgrade": { "type": "boolean" },
        "DisabledWhenIncomplete": { "type": "boolean" }
      }
    },
    "Quote.Common.Workflow.Result.Message": {
      "type": "object",
      "properties": {
        "Title": { "type": "string" },
        "Description": { "type": "string" },
        "ActionId": { "format": "int32", "type": "integer" },
        "ActionName": { "type": "string" }
      }
    },
    "Webcom.Configurator.Core.OrderStatusDefn": {
      "type": "object",
      "properties": {
        "fullyLoaded": { "type": "boolean" },
        "orderStatusId": { "format": "int32", "type": "integer" },
        "isEditable": { "type": "boolean" },
        "isDefaultStatus": { "type": "boolean" },
        "isLockStatus": { "type": "boolean" },
        "<OrderStatusIsEditable>k__BackingField": { "type": "string" },
        "<OrderStatusIsDefault>k__BackingField": { "type": "string" },
        "<OrderStatusIsLock>k__BackingField": { "type": "string" },
        "orderStatusName": { "type": "string" },
        "rank": { "format": "int32", "type": "integer" },
        "mlFields": {
          "type": "object",
          "additionalProperties": { "type": "string" }
        },
        "dictionaryId": { "format": "int32", "type": "integer" }
      }
    },
    "Webcom.Configurator.Core.Action": {
      "type": "object",
      "properties": {
        "ActionId": { "format": "int32", "type": "integer" },
        "CacheKey": { "type": "string", "readOnly": true },
        "Name": { "type": "string" },
        "RepeaterFlag": { "type": "string" },
        "GlobalFlag": { "type": "string" },
        "FileName": { "type": "string" },
        "Background": { "format": "int32", "type": "integer" },
        "Placement": { "type": "string" },
        "CanChangeStatus": { "type": "boolean" },
        "CanPerformCrmMappings": { "type": "boolean" },
        "SortOrder": { "format": "int32", "type": "integer" },
        "ActionDisplayLevel": { "type": "boolean" },
        "Image": { "type": "string" },
        "LightningImg": { "type": "string" },
        "SortDisplay": { "type": "string" },
        "Script": { "type": "string" },
        "Type": { "format": "int32", "enum": [0, 1], "type": "integer" },
        "ScriptEngineType": { "format": "int32", "type": "integer" },
        "GlobalCondition": { "type": "string" },
        "PreActionCondition": { "type": "string" },
        "PostActionCondition": { "type": "string" },
        "SystemId": { "type": "string" },
        "ModifiedById": { "format": "int32", "type": "integer" },
        "ModifiedByUsername": { "type": "string" },
        "DateModified": { "type": "string" },
        "MLFields": {
          "type": "object",
          "additionalProperties": { "type": "string" }
        },
        "MLName": { "type": "string", "readOnly": true },
        "NotSupported": { "type": "boolean" },
        "EntityIdentificator": { "type": "string", "readOnly": true },
        "EntityName": { "type": "string", "readOnly": true }
      }
    },
    "Webcom.Configurator.Core.PrePostActionHolder": {
      "type": "object",
      "properties": {
        "Id": { "format": "int32", "type": "integer" },
        "StartStatusId": { "format": "int32", "type": "integer" },
        "MainActionId": { "format": "int32", "type": "integer" },
        "EndStatusId": { "format": "int32", "type": "integer" },
        "TabId": { "format": "int32", "type": "integer" },
        "Action": { "$ref": "#/definitions/Webcom.Configurator.Core.Action" },
        "Rank": { "format": "int32", "type": "integer" }
      }
    },
    "Webcom.Configurator.Core.Notification": {
      "type": "object",
      "properties": {
        "notificationId": { "format": "int32", "type": "integer" },
        "name": { "type": "string" },
        "Contents": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.Configurator.Core.NotificationContent"
          }
        },
        "FullyLoaded": { "type": "boolean" },
        "NotificationQueueId": { "format": "int32", "type": "integer" },
        "NotificationId": { "format": "int32", "type": "integer" },
        "Name": { "type": "string" }
      }
    },
    "Webcom.Configurator.Core.NotificationContent": {
      "type": "object",
      "properties": {
        "notificationId": { "format": "int32", "type": "integer" },
        "NotificationContentId": { "format": "int32", "type": "integer" },
        "Subject": { "type": "string" },
        "Text": { "type": "string" },
        "NotificationId": { "format": "int32", "type": "integer" },
        "Condition": { "type": "string" },
        "Type": { "format": "int32", "type": "integer" },
        "Attachments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.Configurator.Core.NotificationAttachment"
          }
        },
        "EmailList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.Configurator.Core.EmailList"
          }
        },
        "EntityIdentificator": { "type": "string", "readOnly": true },
        "EntityName": { "type": "string", "readOnly": true }
      }
    },
    "Webcom.Configurator.Core.NotificationAttachment": {
      "type": "object",
      "properties": {
        "ContentId": { "format": "int32", "type": "integer" },
        "FileName": { "type": "string" },
        "Parse": { "type": "boolean" },
        "FullyLoaded": { "type": "boolean" }
      }
    },
    "Webcom.Configurator.Core.EmailList": {
      "type": "object",
      "properties": {
        "FullyLoaded": { "type": "boolean" },
        "ListId": { "format": "int32", "type": "integer" },
        "Name": { "type": "string" },
        "ContentId": { "format": "int32", "type": "integer" },
        "Recipient": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.Configurator.Core.EmailListRecipient"
          }
        },
        "EntityIdentificator": { "type": "string", "readOnly": true },
        "EntityName": { "type": "string", "readOnly": true }
      }
    },
    "Webcom.Configurator.Core.EmailListRecipient": {
      "type": "object",
      "properties": {
        "ListId": { "format": "int32", "type": "integer" },
        "UserId": { "format": "int32", "type": "integer" },
        "Tag": { "type": "string" },
        "RecipientName": { "type": "string" },
        "RecipientEMail": { "type": "string" },
        "GroupId": { "format": "int32", "type": "integer" },
        "FullyLoaded": { "type": "boolean" }
      }
    },
    "Webcom.API.Public.Quote.VM.QuoteRevisionVM": {
      "description": "Quote revision",
      "type": "object",
      "properties": {
        "QuoteId": { "description": "Quote ID", "type": "string" },
        "OwnerId": { "description": "Owner ID", "type": "string" },
        "Name": { "description": "Name of revision", "type": "string" },
        "Description": { "description": "Description", "type": "string" },
        "DateCreated": {
          "description": "Date when quote revision was created",
          "type": "string"
        },
        "DateModified": {
          "description": "Date when quote revision was last modified",
          "type": "string"
        },
        "RevisionNumber": {
          "format": "int32",
          "description": "Revision number",
          "type": "integer"
        },
        "ParentRevision": {
          "description": "Parent revision",
          "type": "string"
        },
        "IsActive": { "description": "Is revision active", "type": "boolean" },
        "Status": {
          "$ref": "#/definitions/Webcom.API.Public.Quote.VM.QuoteStatusVM",
          "description": "Status info"
        },
        "Market": {
          "$ref": "#/definitions/Webcom.API.Public.Quote.VM.MarketVM",
          "description": "Market info"
        },
        "TotalAmount": {
          "$ref": "#/definitions/Webcom.API.Public.Quote.VM.TotalAmountVM",
          "description": "Total amount info"
        }
      }
    },
    "Webcom.API.Public.Quote.VM.QuoteStatusVM": {
      "description": "Quote status",
      "type": "object",
      "properties": {
        "Id": { "format": "int32", "type": "integer" },
        "Name": { "type": "string" }
      }
    },
    "Webcom.API.Public.Quote.VM.MarketVM": {
      "description": "Market info",
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "description": "Market ID",
          "type": "integer"
        },
        "Name": { "description": "Market name", "type": "string" }
      }
    },
    "Webcom.API.Public.Quote.VM.TotalAmountVM": {
      "description": "Total amount info",
      "type": "object",
      "properties": {
        "CurrencyCode": { "description": "Currency code", "type": "string" },
        "Value": { "description": "Total amount value", "type": "string" },
        "FormattedValue": {
          "description": "{CurrencySign}{Value} example: $500.00",
          "type": "string"
        }
      }
    },
    "Webcom.API.Public.Quote.VM.GeneratedDocumentInfoVM": {
      "type": "object",
      "properties": {
        "DocumentId": {
          "format": "int32",
          "description": "Generated document ID",
          "type": "integer"
        },
        "Filename": { "description": "Name of the file", "type": "string" },
        "Filesize": { "description": "Size of file in KB", "type": "string" },
        "DateCreated": {
          "description": "Date of generated document",
          "type": "string"
        }
      }
    },
    "Webcom.API.Public.Quote.VM.NewQuoteVMResponse": {
      "type": "object",
      "properties": { "NewQuoteId": { "format": "int32", "type": "integer" } }
    },
    "Webcom.API.Public.Quote.VM.WorkflowActionVM": {
      "description": "Workflow action view model",
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "description": "The identifier.",
          "type": "integer"
        },
        "Name": { "description": "Name of action.", "type": "string" },
        "SystemId": { "description": "System ID.", "type": "string" }
      }
    },
    "Webcom.API.Public.Quote.VM.QuoteVMRequest": {
      "type": "object",
      "properties": {
        "ExternalId": {
          "description": "Get or set external id.",
          "type": "string"
        },
        "ExternalSystemId": {
          "description": "Get or set external system id.",
          "type": "string"
        },
        "MarketId": {
          "format": "int32",
          "description": "Get or set market id.",
          "type": "integer"
        },
        "MarketCode": {
          "description": "Gets or sets market code.",
          "type": "string"
        },
        "PricebookId": {
          "format": "int32",
          "description": "Get or sets pricebook id.",
          "type": "integer"
        },
        "DistributionChannel": {
          "description": "Get or set distribution channel.",
          "type": "string"
        },
        "GlobalComment": {
          "description": "Get or set global comment.",
          "type": "string"
        },
        "Origin": { "description": "Get or set origin.", "type": "string" },
        "Comments": {
          "description": "List of collaboration comments.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.Public.Quote.VM.QuoteCommentRequestVM"
          }
        },
        "Customers": {
          "description": "List of customers.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.Public.Quote.CustomerRequestVM"
          }
        },
        "CustomFields": {
          "description": "List of custom fields.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.Public.Quote.CustomFieldVM"
          }
        },
        "Items": {
          "description": "List of quote's items.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.Public.Quote.VM.QuoteItemRequestVM"
          }
        }
      }
    },
    "Webcom.API.Public.Quote.VM.QuoteCommentRequestVM": {
      "description": "Quote Comment Request view model",
      "type": "object",
      "properties": {
        "UserFullName": { "description": "User Full Name.", "type": "string" },
        "UserEmail": { "description": "User Email.", "type": "string" },
        "UserCompany": { "description": "User Company", "type": "string" },
        "Comment": { "description": "Comment text", "type": "string" },
        "Source": {
          "format": "int32",
          "description": "Comment creator",
          "type": "integer"
        }
      }
    },
    "Webcom.API.Public.Quote.CustomerRequestVM": {
      "description": "Customer Request view model",
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "description": "Gets or sets Id",
          "type": "integer"
        },
        "CustomerCode": {
          "description": "Get or set Customer Code",
          "type": "string"
        },
        "RoleType": { "description": "Get or set Role Type", "type": "string" }
      }
    },
    "Webcom.API.Public.Quote.CustomFieldVM": {
      "description": "Data of quote item custom field",
      "type": "object",
      "properties": {
        "Name": {
          "description": "Get or set custom field Name",
          "type": "string"
        },
        "Content": {
          "description": "Get or set custom field Content",
          "type": "string"
        }
      }
    },
    "Webcom.API.Public.Quote.VM.QuoteItemRequestVM": {
      "description": "Quote Item Request",
      "type": "object",
      "properties": {
        "Quantity": {
          "format": "int32",
          "description": "Gets or sets the quantity.",
          "type": "integer"
        },
        "PartNumber": {
          "description": "Gets or sets the part number.",
          "type": "string"
        },
        "ProductSystemId": {
          "description": "Gets or sets the product system identifier.",
          "type": "string"
        },
        "ConfigurationId": {
          "description": "Gets or sets the configuration identifier.",
          "type": "string"
        },
        "ExternalItemId": {
          "description": "Gets or sets the external item identifier.",
          "type": "string"
        },
        "Comments": {
          "description": "Quote Item Comments",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.Public.Quote.VM.QuoteCommentVM"
          }
        }
      }
    },
    "Webcom.API.Public.Quote.VM.QuoteCommentVM": {
      "description": "Quote Comment view model",
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "description": "The identifier.",
          "type": "integer"
        },
        "ItemId": {
          "format": "int32",
          "description": "Item Id.",
          "type": "integer"
        },
        "UserFullName": { "description": "User Full Name.", "type": "string" },
        "UserEmail": { "description": "User Email.", "type": "string" },
        "UserCompany": { "description": "User Company", "type": "string" },
        "DateCreated": { "description": "Date Created", "type": "string" },
        "Comment": { "description": "Comment text", "type": "string" },
        "Source": {
          "format": "int32",
          "description": "Comment creator",
          "type": "integer"
        }
      }
    },
    "Webcom.API.Public.Quote.VM.QuoteVMResponse": {
      "description": "Quote Response",
      "type": "object",
      "properties": {
        "QuoteId": {
          "format": "int32",
          "description": "The quote identifier.",
          "type": "integer"
        }
      }
    },
    "Webcom.Quote.Common.DTO.RFQ.QuoteItemResponse": {
      "type": "object",
      "properties": {
        "Id": { "format": "int32", "type": "integer" },
        "ExternalItemId": { "type": "string" },
        "ParentItemId": { "format": "int32", "type": "integer" },
        "IsMainItem": { "type": "boolean" },
        "Description": { "type": "string" }
      }
    },
    "Webcom.API.Admin.QuoteTabPermissions.QuoteTabPermissionsResponse": {
      "description": "Represents quote tab permissions response",
      "type": "object",
      "properties": {
        "QuoteTabPermissions": {
          "description": "Gets or sets the quote tab permissions.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.Admin.QuoteTabPermissions.QuoteTabPermissionListItemVm"
          }
        },
        "Tabs": {
          "description": "Gets or sets the tabs.",
          "type": "array",
          "items": { "$ref": "#/definitions/Webcom.API.IdNamePair" }
        }
      }
    },
    "Webcom.API.Admin.QuoteTabPermissions.QuoteTabPermissionListItemVm": {
      "description": "Represents quote tab permissions",
      "type": "object",
      "properties": {
        "HasCustomPermission": {
          "description": "Gets or sets a value indicating whether this instance has custom permission.",
          "type": "boolean"
        },
        "Permission": {
          "description": "Gets or sets the permission.",
          "type": "string"
        },
        "TabId": {
          "format": "int32",
          "description": "Gets or sets the tab identifier.",
          "type": "integer"
        },
        "TabName": {
          "description": "Gets or sets the name of the tab.",
          "type": "string"
        },
        "Id": {
          "format": "int32",
          "description": "Gets or sets the identifier.",
          "type": "integer"
        }
      }
    },
    "Webcom.API.Admin.QuoteTabPermissions.QuoteTabPermissionResponse": {
      "description": "Quote tab permission response",
      "type": "object",
      "properties": {
        "Permission": {
          "$ref": "#/definitions/Webcom.API.Admin.QuoteTabPermissions.QuoteTabPermissionVm",
          "description": "Gets or sets the permission."
        },
        "PermissionGroups": {
          "description": "Gets or sets the permission groups.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.Admin.QuoteTabPermissions.PermissionGroupVm"
          }
        },
        "Tabs": {
          "description": "Gets or sets the tabs.",
          "type": "array",
          "items": { "$ref": "#/definitions/Webcom.API.IdNamePair" }
        },
        "Statuses": {
          "description": "Gets or sets the statuses.",
          "type": "array",
          "items": { "$ref": "#/definitions/Webcom.API.IdNamePair" }
        }
      }
    },
    "Webcom.API.Admin.QuoteTabPermissions.QuoteTabPermissionVm": {
      "description": "Represent one quote tab permission rule view model",
      "type": "object",
      "properties": {
        "Statuses": {
          "description": "Gets or sets the statuses.",
          "type": "array",
          "items": { "format": "int32", "type": "integer" }
        },
        "PermissionGroups": {
          "description": "Gets or sets the permission groups.",
          "type": "array",
          "items": { "format": "int32", "type": "integer" }
        },
        "Condition": {
          "description": "Gets or sets the condition.",
          "type": "string"
        },
        "TabId": {
          "format": "int32",
          "description": "Gets or sets the tab identifier.",
          "type": "integer"
        },
        "Id": {
          "format": "int32",
          "description": "Gets or sets the identifier.",
          "type": "integer"
        }
      }
    },
    "Webcom.API.Admin.QuoteTabPermissions.PermissionGroupVm": {
      "description": "Represent Permission Group View model",
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "description": "Gets or sets the identifier.",
          "type": "integer"
        },
        "PermissionType": {
          "format": "int32",
          "description": "Gets or sets the type of the permission.",
          "type": "integer"
        },
        "Name": { "description": "Gets or sets the name.", "type": "string" }
      }
    },
    "Webcom.API.RD.RecentlyVisitedObjects.VM.RecentlyVisitedObjectVM": {
      "description": "Class RecentlyVisitedObjectVM",
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "description": "Gets or sets the identifier.",
          "type": "integer"
        },
        "ObjectName": {
          "description": "Gets or sets the name of the recently\r\nvisited object.",
          "type": "string"
        },
        "ProductId": {
          "format": "int32",
          "description": "Gets or sets the product identifier.",
          "type": "integer"
        },
        "IconType": {
          "description": "Gets or sets the type of the icon.",
          "type": "string"
        }
      }
    },
    "Webcom.API.RD.Cart.RecommendationsResponse": {
      "type": "object",
      "properties": {
        "ErrorMessage": { "type": "string" },
        "Recommendations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.RD.Cart.RecommendationItemVM"
          }
        }
      }
    },
    "Webcom.API.RD.Cart.RecommendationItemVM": {
      "type": "object",
      "properties": {
        "Id": { "format": "int32", "type": "integer" },
        "IsApplied": { "type": "boolean" },
        "ProductSystemId": { "type": "string" },
        "UserId": { "type": "string" },
        "CartId": { "type": "string" },
        "RecommendedDiscountDecimal": { "format": "double", "type": "number" },
        "RecommendedQuantityDecimal": { "format": "double", "type": "number" },
        "RecommendationType": { "type": "string" },
        "ItemDescription": {
          "$ref": "#/definitions/Webcom.API.RD.Cart.RecommendedItemDescriptionVM"
        },
        "CellValues": { "type": "array", "items": { "type": "object" } },
        "ItemNo": { "type": "string" },
        "RecommendationDescription": { "type": "string" },
        "HeadingText": { "type": "string" }
      }
    },
    "Webcom.API.RD.Cart.RecommendedItemDescriptionVM": {
      "type": "object",
      "properties": {
        "PartNumber": {
          "description": "Gets or sets the part number.",
          "type": "string"
        },
        "Description": {
          "description": "Gets or sets the description.",
          "type": "string"
        },
        "ProductTypeName": {
          "description": "Gets or sets the name of the product type.",
          "type": "string"
        },
        "ProductId": {
          "format": "int32",
          "description": "Gets or sets the product identifier.",
          "type": "integer"
        },
        "ProductName": {
          "description": "Gets or sets the name of the product.",
          "type": "string"
        }
      }
    },
    "Webcom.Configurator.Predictive.DeclineRecommendationItem": {
      "type": "object",
      "properties": {
        "CartItemGuid": { "type": "string" },
        "ProductSystemId": { "type": "string" },
        "Quantity": { "format": "double", "type": "number" },
        "UserId": { "type": "string" },
        "CartId": { "type": "string" },
        "RecommendedDiscount": { "format": "double", "type": "number" },
        "RecommendationType": { "type": "string" }
      }
    },
    "Webcom.API.RD.Cart.ChangeDiscountRequestVM": {
      "type": "object",
      "properties": {
        "CartItem": { "format": "int32", "type": "integer" },
        "DiscountPercent": { "format": "double", "type": "number" },
        "Id": { "format": "int32", "type": "integer" }
      }
    },
    "Webcom.API.RD.Cart.ChangeDiscountResponseVM": {
      "type": "object",
      "properties": {
        "ErrorMessage": { "type": "string" },
        "CellValues": { "type": "array", "items": { "type": "object" } }
      }
    },
    "Webcom.API.RD.Cart.AddProductRequestVM": {
      "type": "object",
      "properties": {
        "ProductId": { "format": "int32", "type": "integer" },
        "HasPricingRecommendation": { "type": "boolean" },
        "Quantity": { "format": "double", "type": "number" },
        "DiscountPercent": { "format": "double", "type": "number" },
        "Id": { "format": "int32", "type": "integer" }
      }
    },
    "Webcom.API.RD.Cart.AddProductResponseVM": {
      "type": "object",
      "properties": {
        "ErrorMessage": { "type": "string" },
        "WarningMessage": { "type": "string" },
        "CellValues": { "type": "array", "items": { "type": "object" } },
        "ItemNo": { "type": "string" }
      }
    },
    "Webcom.API.RD.Revisions.ExecuteActionRequest": {
      "description": "Class ExecuteActionRequest.",
      "type": "object",
      "properties": {
        "ActionId": {
          "format": "int32",
          "description": "Gets or sets the action identifier.",
          "type": "integer"
        },
        "CryptedCartId": {
          "description": "Gets or sets the crypted cart identifier.",
          "type": "string"
        },
        "CryptedOwnerId": {
          "description": "Gets or sets the crypted owner identifier.",
          "type": "string"
        },
        "NewRevisionName": {
          "description": "Gets or sets the new revision name.",
          "type": "string"
        }
      }
    },
    "Webcom.Configurator.Core.QuoteV2.Revisions.QuoteRevision": {
      "type": "object",
      "properties": {
        "QuoteId": { "type": "string" },
        "OwnerId": { "type": "string" },
        "Name": { "type": "string" },
        "Description": { "type": "string" },
        "DateCreated": { "format": "date-time", "type": "string" },
        "DateModified": { "format": "date-time", "type": "string" },
        "StatusId": { "format": "int32", "type": "integer" },
        "Status": { "type": "string" },
        "RevisionId": { "format": "int32", "type": "integer" },
        "TotalAmount": { "type": "string" },
        "TotalAmountValue": { "type": "string" },
        "ParentRevision": { "type": "string" },
        "Actions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.Configurator.Core.QuoteV2.Revisions.QuoteRevisionAction"
          }
        },
        "IsActive": { "type": "boolean" },
        "MarketId": { "format": "int32", "type": "integer" },
        "MarketName": { "type": "string" },
        "CurrencyCode": { "type": "string" },
        "CurrencySign": { "type": "string" }
      }
    },
    "Webcom.Configurator.Core.QuoteV2.Revisions.QuoteRevisionAction": {
      "type": "object",
      "properties": {
        "ActionId": { "format": "int32", "type": "integer" },
        "Name": { "type": "string" }
      }
    },
    "Webcom.API.Admin.Providers.SAPCommerceSettingsVM": {
      "description": "SAP Commerce Settings view model class",
      "type": "object",
      "properties": {
        "SelectedCommerceUsers": {
          "description": "Gets or sets selected commerce users",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.Admin.Providers.CommerceUserVM"
          }
        },
        "CommerceUsers": {
          "description": "Gets or sets commerce users",
          "type": "array",
          "items": { "format": "int32", "type": "integer" }
        },
        "NotificationsCollections": {
          "description": "Gets or sets notifications",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.Admin.Providers.NotificationVM"
          }
        },
        "SelectedNotificationId": {
          "format": "int32",
          "description": "Get or sets selected notification Id",
          "type": "integer"
        },
        "SelectedRevisionNotificationId": {
          "format": "int32",
          "description": "Get or sets selected revision notification Id",
          "type": "integer"
        },
        "ReleaseQuoteEndPoint": {
          "description": "Get or sets release quote end point",
          "type": "string"
        },
        "ReleaseQuoteAndProposalEndPoint": {
          "description": "Get or sets release quote and proposal end point",
          "type": "string"
        },
        "CommerceIsConnected": {
          "description": "Get or sets whether integration with Commerce is enabled",
          "type": "boolean"
        },
        "EmailId": {
          "format": "int32",
          "description": "Get or sets email Id",
          "type": "integer"
        },
        "UseNewQuoteEngine": {
          "description": "Get or sets for Use New Quote Engine",
          "type": "boolean"
        }
      }
    },
    "Webcom.API.Admin.Providers.CommerceUserVM": {
      "description": "CommerceUserVM class",
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "description": "Gets or sets the identifier.",
          "type": "integer"
        },
        "FirstName": {
          "description": "Gets or sets the first name.",
          "type": "string"
        },
        "LastName": {
          "description": "Gets or sets the last name.",
          "type": "string"
        },
        "Email": { "description": "Gets or sets the email.", "type": "string" },
        "Country": {
          "description": "Gets or sets the country.",
          "type": "string"
        },
        "IsBlocked": {
          "description": "Gets or sets whether user is blocked from deletion",
          "type": "boolean"
        }
      }
    },
    "Webcom.API.Admin.Providers.NotificationVM": {
      "description": "Notification view model class",
      "type": "object",
      "properties": {
        "NotificationName": {
          "description": "Get or sets notification name",
          "type": "string"
        },
        "Id": {
          "format": "int32",
          "description": "Get or sets notification Id",
          "type": "integer"
        }
      }
    },
    "Webcom.API.Admin.Providers.SAPCommonSettingsVM": {
      "description": "Response for C4C General Settings",
      "type": "object",
      "properties": {
        "ProviderEnabled": {
          "description": "Turn on/off provider integration",
          "type": "boolean"
        },
        "SendCustomers": {
          "description": "Get or sets wheter or not to send \r\ncustomers along with the quote payload",
          "type": "boolean"
        },
        "StandardQuoteFieldDatesInZone": {
          "description": "Gets or sets the date and time zone that will be in use to convert into\r\nall CPQ quote standard date fields",
          "type": "string"
        },
        "StandardQuoteFieldDateZones": {
          "description": "Gets or sets the list of the available time zones \r\nto use for the date and time conversion",
          "type": "array",
          "items": { "type": "string" }
        },
        "HcpisApiBaseUrl": {
          "description": "Gets or sets CPI base url",
          "type": "string"
        },
        "HcpisAuthenticationMode": {
          "description": "Gets or sets authentication mode to be used while authenticating against CPI",
          "type": "string"
        },
        "HcpisCredentialsUsername": {
          "description": "Gets or sets username that will be used to authenticate against the CPI over the basic authentication",
          "type": "string"
        },
        "HcpisCredentialsPassword": {
          "description": "Gets or sets password that will be used to authenticate against the CPI over the basic authentication",
          "type": "string"
        },
        "HcpisApiGetObjectData": {
          "description": "Gets or sets the enpoint for getting XML data from remote CPI",
          "type": "string"
        },
        "HcpisApiPostData": {
          "description": "Gets or sets the enpoint for posting XML data to remote CPI",
          "type": "string"
        },
        "HcpisApiSendQuoteToSap": {
          "description": "Gets or sets the enpoint for sending CPQ serialized quote in XML to remote CPI",
          "type": "string"
        }
      }
    },
    "Webcom.API.Admin.Providers.SAPC4CSettingsVM": {
      "description": "SAP C4C View Model",
      "type": "object",
      "properties": {
        "HcpisApiOpportunityDetailsForNewQuote": {
          "description": "Gets or sets the enpoint for getting opportunity details for new CPQ uote from the remote CPI",
          "type": "string"
        },
        "HcpisApiOpportunityDetailsForExistingQuote": {
          "description": "Gets or sets the enpoint for getting opportunity details for exisiting CPQ uote from the remote CPI",
          "type": "string"
        },
        "HcpisApiUpdateOpportunity": {
          "description": "Gets or sets the enpoint for sending the opportunity update to the remote CPI",
          "type": "string"
        },
        "HcpisApiCreateUpdateSalesQuote": {
          "description": "Gets or sets the enpoint for sending the created/update sales quote to the remote CPI",
          "type": "string"
        },
        "HcpisApiUpdateOpportunityAndSalesQuote": {
          "description": "Gets or sets the enpoint for sending the opportunity update  and create/update sales quote to the remote CPI",
          "type": "string"
        },
        "HcpisApiSendDocumentToOpportunity": {
          "description": "Gets or sets the enpoint for sending/attaching the document to opportunity over the remote CPI",
          "type": "string"
        },
        "HcpisApiSendDocumentToSalesQuote": {
          "description": "Gets or sets the enpoint for sending/attaching the document to sales quote over the remote CPI",
          "type": "string"
        },
        "HcpisApiSendDocumentToOpportunityAndSalesQuote": {
          "description": "Gets or sets the enpoint for sending/attaching the document to opportunity and sales quote over the remote CPI",
          "type": "string"
        },
        "HcpisApiUpdateSalesQuoteOnQuoteSaveAction": {
          "description": "Turn on/off opportunity update",
          "type": "boolean"
        },
        "HcpisApiUpdateSalesQuote": {
          "description": "Gets or sets the enpoint for update sales quote",
          "type": "string"
        },
        "HcpisApiSalesQuoteDetailsForNewQuote": {
          "description": "Gets or sets the enpoint for sales quote details",
          "type": "string"
        },
        "HcpisApiC4CIsConnected": {
          "description": "Gets or sets the appParam if c4c is active",
          "type": "boolean"
        },
        "LandingUrl": {
          "description": "Gets or sets the url for landing from C4C",
          "type": "string"
        },
        "Warning": {
          "description": "Gets or sets a warning message to be displayed to user",
          "type": "string"
        }
      }
    },
    "Webcom.API.Admin.Providers.SAPS4SettingsVM": {
      "description": "SAP S/4 View Model",
      "type": "object",
      "properties": {
        "HcpisApiS4PlaceSalesOrder": {
          "description": "Gets or sets the CPI endpoint that processes CPQ quote data and places a sales order to SAP S/4 ERP",
          "type": "string"
        }
      }
    },
    "Webcom.API.Admin.Providers.SaveCommerceSettingsVM": {
      "type": "object",
      "properties": {
        "ErrorMessage": { "type": "string" },
        "EmailId": { "format": "int32", "type": "integer" }
      }
    },
    "Webcom.API.Admin.Providers.SAPProviderVM": {
      "description": "SAP provider view model",
      "type": "object",
      "properties": {
        "ShowCommerceTab": {
          "description": "Indicating whether or not should show Commerce related tabs",
          "type": "boolean"
        },
        "HcpisApiObsoleteIntegrationActive": {
          "description": "Gets AppParam that indicates if obsolete c4C integration is in use",
          "type": "boolean"
        }
      }
    },
    "Webcom.API.Public.SB.VM.RatePlanVM": {
      "type": "object",
      "properties": {
        "Id": { "type": "string" },
        "Code": { "type": "string" },
        "Description": { "type": "string" },
        "RatePlanTemplateId": { "type": "string" },
        "Snapshots": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.Public.SB.VM.SnapshotVM"
          }
        }
      }
    },
    "Webcom.API.Public.SB.VM.SnapshotVM": {
      "type": "object",
      "properties": {
        "EffectiveAt": { "type": "string" },
        "Parameters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.Public.SB.VM.ParameterVM"
          }
        }
      }
    },
    "Webcom.API.Public.SB.VM.ParameterVM": {
      "type": "object",
      "properties": {
        "Code": { "type": "string" },
        "Value": { "type": "string" },
        "Type": { "type": "string" }
      }
    },
    "Webcom.API.SetupSPA.Providers.SB.VM.SBProviderDetailsVM": {
      "description": "Class that represent Model for web APIs in SBProviderController.cs",
      "type": "object",
      "properties": {
        "Enabled": { "description": "Integration enabled", "type": "boolean" },
        "BaseUrl": {
          "description": "SAP Subscription Billing Base URL",
          "type": "string"
        },
        "RatePlanTemplateEndpoint": {
          "description": "SAP Subscription Billing RatePlanTemplate Endpoint",
          "type": "string"
        },
        "AuthenticationUrl": {
          "description": "Authentication base URL",
          "type": "string"
        },
        "AccessTokenClientId": {
          "description": "Authentication Client ID",
          "type": "string"
        },
        "AccessTokenClientSecret": {
          "description": "Authentication Client Secret",
          "type": "string"
        }
      }
    },
    "Webcom.API.RD.SBProviderRD.VM.SBProviderDetailsVM": {
      "description": "Class that represent Model for web APIs in SBProviderRDController.cs",
      "type": "object",
      "properties": {
        "Enabled": { "description": "Integration enabled", "type": "boolean" },
        "BaseUrl": {
          "description": "SAP Subscription Billing Base URL",
          "type": "string"
        },
        "RatePlanTemplateEndpoint": {
          "description": "SAP Subscription Billing RatePlanTemplate Endpoint",
          "type": "string"
        },
        "AuthenticationUrl": {
          "description": "Authentication base URL",
          "type": "string"
        },
        "AccessTokenClientId": {
          "description": "Authentication Client ID",
          "type": "string"
        },
        "AccessTokenClientSecret": {
          "description": "Authentication Client Secret",
          "type": "string"
        }
      }
    },
    "Webcom.API.Admin.Scripting.CheckSyntaxRequest": {
      "description": "Request for check syntax",
      "type": "object",
      "properties": {
        "Script": {
          "description": "Gets or sets the script.",
          "type": "string"
        }
      }
    },
    "Webcom.API.SetupSPA.SegregationOfDuties.VM.MenuLinkInfoGroupsVM": {
      "description": "Menu link info groups view model",
      "type": "object",
      "properties": {
        "SetupHome": {
          "$ref": "#/definitions/Webcom.API.SetupSPA.SegregationOfDuties.VM.SegregationMenuListBoxItemVM",
          "description": "Setup home"
        },
        "ProductCatalog": {
          "$ref": "#/definitions/Webcom.API.SetupSPA.SegregationOfDuties.VM.SegregationMenuListBoxItemVM",
          "description": "Product catalog"
        },
        "CurrentProduct": {
          "$ref": "#/definitions/Webcom.API.SetupSPA.SegregationOfDuties.VM.SegregationMenuListBoxItemVM",
          "description": "Current product"
        },
        "PricingCalculations": {
          "$ref": "#/definitions/Webcom.API.SetupSPA.SegregationOfDuties.VM.SegregationMenuListBoxItemVM",
          "description": "Pricing calculations"
        },
        "Quotes": {
          "$ref": "#/definitions/Webcom.API.SetupSPA.SegregationOfDuties.VM.SegregationMenuListBoxItemVM",
          "description": "Quotes"
        },
        "Users": {
          "$ref": "#/definitions/Webcom.API.SetupSPA.SegregationOfDuties.VM.SegregationMenuListBoxItemVM",
          "description": "Users"
        },
        "UIDesign": {
          "$ref": "#/definitions/Webcom.API.SetupSPA.SegregationOfDuties.VM.SegregationMenuListBoxItemVM",
          "description": "UI design"
        },
        "WorkflowApproval": {
          "$ref": "#/definitions/Webcom.API.SetupSPA.SegregationOfDuties.VM.SegregationMenuListBoxItemVM",
          "description": "Workflow/Approval"
        },
        "CRMIntegration": {
          "$ref": "#/definitions/Webcom.API.SetupSPA.SegregationOfDuties.VM.SegregationMenuListBoxItemVM",
          "description": "CRM integration"
        },
        "RenewalAdministration": {
          "$ref": "#/definitions/Webcom.API.SetupSPA.SegregationOfDuties.VM.SegregationMenuListBoxItemVM",
          "description": "Renewal administration"
        },
        "Providers": {
          "$ref": "#/definitions/Webcom.API.SetupSPA.SegregationOfDuties.VM.SegregationMenuListBoxItemVM",
          "description": "Providers"
        },
        "CustomersCustomerRoles": {
          "$ref": "#/definitions/Webcom.API.SetupSPA.SegregationOfDuties.VM.SegregationMenuListBoxItemVM",
          "description": "Customers/Customer roles"
        },
        "Develop": {
          "$ref": "#/definitions/Webcom.API.SetupSPA.SegregationOfDuties.VM.SegregationMenuListBoxItemVM",
          "description": "Develop"
        },
        "BulletinBoard": {
          "$ref": "#/definitions/Webcom.API.SetupSPA.SegregationOfDuties.VM.SegregationMenuListBoxItemVM",
          "description": "Bulletin board"
        },
        "General": {
          "$ref": "#/definitions/Webcom.API.SetupSPA.SegregationOfDuties.VM.SegregationMenuListBoxItemVM",
          "description": "General"
        },
        "ImportExport": {
          "$ref": "#/definitions/Webcom.API.SetupSPA.SegregationOfDuties.VM.SegregationMenuListBoxItemVM",
          "description": "Import/Export"
        },
        "DelegationOfAuthority": {
          "$ref": "#/definitions/Webcom.API.SetupSPA.SegregationOfDuties.VM.SegregationMenuListBoxItemVM",
          "description": "Delegation of authority"
        },
        "Security": {
          "$ref": "#/definitions/Webcom.API.SetupSPA.SegregationOfDuties.VM.SegregationMenuListBoxItemVM",
          "description": "Security"
        },
        "DeveloperTools": {
          "$ref": "#/definitions/Webcom.API.SetupSPA.SegregationOfDuties.VM.SegregationMenuListBoxItemVM",
          "description": "Developer tools"
        }
      }
    },
    "Webcom.API.SetupSPA.SegregationOfDuties.VM.SegregationMenuListBoxItemVM": {
      "description": "Represents selected item",
      "type": "object",
      "properties": {
        "Id": { "format": "int32", "description": "Id", "type": "integer" },
        "Name": { "description": "Name", "type": "string" },
        "ParentId": {
          "format": "int32",
          "description": "Parent id",
          "type": "integer"
        },
        "IsVisible": { "description": "Is visible", "type": "boolean" },
        "IsSelected": { "description": "Is selected", "type": "boolean" },
        "IsCollapsed": { "description": "Is collapsed", "type": "boolean" },
        "IsAsync": { "description": "Is async", "type": "boolean" },
        "VisibleAll": { "type": "boolean" },
        "CanBeReadOnly": {
          "description": "Show read only toggle",
          "type": "boolean"
        },
        "Children": {
          "description": "Children",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.SetupSPA.SegregationOfDuties.VM.SegregationMenuListBoxItemVM"
          }
        }
      }
    },
    "Webcom.API.SetupSPA.SegregationOfDuties.VM.MenuLinkInfoPermissionVM": {
      "description": "Contains information which <seealso cref=\"T:Webcom.Configurator.Core.SegregationOfDuties.MenuLinkInfo\" /> is allwed for requested permission group",
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "description": "Menu Link Info Id",
          "type": "integer"
        },
        "ReadOnly": {
          "description": "Is it read only for group",
          "type": "boolean"
        },
        "VisibleAll": {
          "description": "Are all related children visible",
          "type": "boolean"
        },
        "Children": {
          "description": "SubItems permissions",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.SetupSPA.SegregationOfDuties.VM.SegregationOfDutiesPermissionVM"
          }
        }
      }
    },
    "Webcom.API.SetupSPA.SegregationOfDuties.VM.SegregationOfDutiesPermissionVM": {
      "description": "Base entity for premissions",
      "type": "object",
      "properties": {
        "Id": { "format": "int32", "type": "integer" },
        "ReadOnly": { "type": "boolean" }
      }
    },
    "Webcom.API.RD.SegregationOfDuties.VM.SetupLinksVisibilityVM": {
      "description": "All setup links visiability infoes",
      "type": "object",
      "properties": {
        "IsDevelopConsoleLinkVisible": {
          "description": "Develop console link visiblility info",
          "type": "boolean"
        },
        "IsScriptWorkbenchLinkVisible": {
          "description": "Script workbench link visiblility info",
          "type": "boolean"
        },
        "IsEventLogLinkVisible": {
          "description": "Event log link visiblility info",
          "type": "boolean"
        }
      }
    },
    "Webcom.API.Common.Models.PagedDataVM[Webcom.API.SetupSPA.SubscriptionBilling.VM.RatePlanTemplateVM]": {
      "description": "Paged data for provided type",
      "type": "object",
      "properties": {
        "PagedRecords": {
          "description": "List of paged records",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.SetupSPA.SubscriptionBilling.VM.RatePlanTemplateVM"
          }
        },
        "TotalNumberOfRecords": {
          "format": "int32",
          "description": "Total number of records",
          "type": "integer"
        }
      }
    },
    "Webcom.API.Admin.TablesOnQuotes.QuoteTableDefinitionVm": {
      "description": "Define table model response",
      "type": "object",
      "properties": {
        "TableId": {
          "format": "int32",
          "description": "Gets or sets table id",
          "type": "integer"
        },
        "TableName": {
          "description": "Get or sets table name.",
          "type": "string"
        },
        "TableLabel": {
          "description": "Get or sets table label.",
          "type": "string"
        },
        "TableRank": {
          "format": "int32",
          "description": "Get or sets table rank.",
          "type": "integer"
        },
        "TableLocation": {
          "format": "int32",
          "description": "Get or sets table location.",
          "type": "integer"
        },
        "Tabs": {
          "description": "Gets or sets the tabs list.",
          "type": "array",
          "items": { "$ref": "#/definitions/Webcom.API.IdNamePair" }
        },
        "EnableSearch": {
          "description": "Get or sets if the table search is enabled.",
          "type": "boolean"
        },
        "AllowExcelUpload": {
          "description": "Get or sets if the table excel file upload is allowed.",
          "type": "boolean"
        },
        "Statuses": {
          "description": "Gets or sets the statuses.",
          "type": "array",
          "items": { "$ref": "#/definitions/Webcom.API.IdNamePair" }
        },
        "PermissionGroups": {
          "description": "Gets or sets the permission groups.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.Admin.TablesOnQuotes.PermissionGroupVm"
          }
        },
        "QuoteTablePermissions": {
          "description": "Gets or sets the quote table permissions.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.Admin.QuoteTable.QuoteTablePermissionItemVm"
          }
        },
        "ErrorMessage": {
          "description": "Gets or sets the error message",
          "type": "string"
        }
      }
    },
    "Webcom.API.Admin.TablesOnQuotes.PermissionGroupVm": {
      "description": "Permission Group VM",
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "description": "Gets or sets the identifier.",
          "type": "integer"
        },
        "PermissionType": {
          "format": "int32",
          "description": "Gets or sets the type of the permission.",
          "type": "integer"
        },
        "Name": { "description": "Gets or sets the name.", "type": "string" }
      }
    },
    "Webcom.API.Admin.QuoteTable.QuoteTablePermissionItemVm": {
      "description": "Represents quote table permission item",
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "description": "Gets or sets quote table permission id",
          "type": "integer"
        },
        "TableId": {
          "format": "int32",
          "description": "Gets or sets quote table id",
          "type": "integer"
        },
        "TableName": {
          "description": "Gets or sets quote table name",
          "type": "string"
        },
        "Permission": {
          "description": "Gets or sets quote table permission",
          "type": "string"
        },
        "Statuses": {
          "description": "Gets or sets selected statuses",
          "type": "array",
          "items": { "format": "int32", "type": "integer" }
        },
        "PermissionGroups": {
          "description": "Gets or sets list of selected permissions groups",
          "type": "array",
          "items": { "format": "int32", "type": "integer" }
        }
      }
    },
    "Webcom.API.Admin.TablesOnQuotes.SaveQuoteTableDefinitionRequest": {
      "description": "Save quote table definition request",
      "type": "object",
      "properties": {
        "TableId": {
          "format": "int32",
          "description": "Gets or sets table id",
          "type": "integer"
        },
        "TableName": {
          "description": "Get or sets table name.",
          "type": "string"
        },
        "TableLabel": {
          "description": "Get or sets table label.",
          "type": "string"
        },
        "TableRank": {
          "format": "int32",
          "description": "Get or sets table rank.",
          "type": "integer"
        },
        "TableLocation": {
          "format": "int32",
          "description": "Get or sets table location.",
          "type": "integer"
        },
        "EnableSearch": {
          "description": "Get or sets if the table search is enabled.",
          "type": "boolean"
        },
        "AllowExcelUpload": {
          "description": "Get or sets if the table excel file upload is allowed.",
          "type": "boolean"
        },
        "QuoteTablePermissions": {
          "description": "Gets or sets the quote table permissions.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.Admin.QuoteTable.QuoteTablePermissionItemVm"
          }
        }
      }
    },
    "Webcom.API.Admin.TablesOnQuotes.DefineColumnModelVm": {
      "description": "Define column model response",
      "type": "object",
      "properties": {
        "TableId": {
          "format": "int32",
          "description": "Gets or sets quote table id",
          "type": "integer"
        },
        "Columns": {
          "description": "List of quote table columns",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.Admin.TablesOnQuotes.QuoteTableColumnVm"
          }
        },
        "Groups": {
          "description": "List of quote table column groups",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.Admin.TablesOnQuotes.QuoteTableColumnGroupVm"
          }
        },
        "Attributes": {
          "description": "Gets or sets the list of CPQ attributes.",
          "type": "array",
          "items": { "$ref": "#/definitions/Webcom.API.IdNamePair" }
        },
        "PermissionGroups": {
          "description": "Gets or sets the permission groups.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.Admin.TablesOnQuotes.PermissionGroupVm"
          }
        },
        "ErrorMessage": {
          "description": "Gets or sets the error message",
          "type": "string"
        }
      }
    },
    "Webcom.API.Admin.TablesOnQuotes.QuoteTableColumnVm": {
      "description": "Quote table column representation",
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "description": "Gets or sets the identifier.",
          "type": "integer"
        },
        "Name": { "description": "Gets or sets the name.", "type": "string" },
        "Rank": {
          "format": "int32",
          "description": "Gets or sets the rank.",
          "type": "integer"
        },
        "ColumnDataType": {
          "format": "int32",
          "description": "Gets or sets the type of the column data.",
          "enum": [0, 1, 2, 3, 4, 5, 6],
          "type": "integer"
        },
        "AttributeId": {
          "format": "int32",
          "description": "Gets or sets the attribute identifier.",
          "type": "integer"
        },
        "Label": { "description": "Gets or sets the label.", "type": "string" },
        "AttributeValues": {
          "description": "Gets or sets the attribute values.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.Configurator.Core.QuoteTables.QuoteTableAttributeValue"
          }
        },
        "ColumnWidth": {
          "format": "double",
          "description": "Gets or sets columns width for all column types.",
          "type": "number"
        },
        "DecimalPlaces": {
          "format": "int32",
          "description": "Gets or sets decimal places for column type number and money.",
          "type": "integer"
        },
        "DecimalPlacesInCalculations": {
          "format": "int32",
          "description": "Gets or sets decimal places in calculations for column type money.",
          "type": "integer"
        },
        "MaxCharacters": {
          "format": "int32",
          "description": "Gets or sets max characters for column type string.",
          "type": "integer"
        },
        "RenderType": {
          "format": "int32",
          "description": "Gets or sets render type for column type attribute",
          "type": "integer"
        },
        "IsAutocomplete": {
          "description": "Gets or sets wheter column type attribute is autocomplete",
          "type": "boolean"
        },
        "EditableColumnPermissions": {
          "description": "Gets or sets the editable quote table permissions.",
          "type": "array",
          "items": { "format": "int32", "type": "integer" }
        },
        "HiddenColumnPermissions": {
          "description": "Gets or sets the hidden quote table permissions.",
          "type": "array",
          "items": { "format": "int32", "type": "integer" }
        },
        "Validations": {
          "description": "Gets or sets column validations rule",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.Admin.TablesOnQuotes.QuoteTableColumnValidationRuleVm"
          }
        },
        "GroupId": {
          "format": "int32",
          "description": "Gets or sets column group id.",
          "type": "integer"
        },
        "IsColumnUsed": {
          "description": "Determines whether is column used in autocomplete attribute",
          "type": "boolean"
        },
        "IsProtected": {
          "description": "Data Protection related, indicates that this quote table column contains private information",
          "type": "boolean"
        },
        "IsSensitive": {
          "description": "Data Protection related, indicates that this quote table column contains SENSITIVE private information\r\nWILL BE EVALUATED ONLY IF {Webcom.API.Admin.TablesOnQuotes.QuoteTableColumnVm.IsProtected} IS TRUE",
          "type": "boolean"
        }
      }
    },
    "Webcom.API.Admin.TablesOnQuotes.QuoteTableColumnGroupVm": {
      "description": "Quote table column group representation",
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "description": "Gets or sets the identifier.",
          "type": "integer"
        },
        "Name": { "description": "Gets or sets the name.", "type": "string" },
        "Rank": {
          "format": "int32",
          "description": "Gets or sets the rank.",
          "type": "integer"
        },
        "Label": { "description": "Gets or sets the Label.", "type": "string" },
        "Columns": {
          "description": "List of quote table columns",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.Admin.TablesOnQuotes.QuoteTableColumnVm"
          }
        },
        "Groups": {
          "description": "List of quote table columns",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.Admin.TablesOnQuotes.QuoteTableColumnGroupVm"
          }
        }
      }
    },
    "Webcom.Configurator.Core.QuoteTables.QuoteTableAttributeValue": {
      "type": "object",
      "properties": {
        "StandardAttributeValue": { "type": "string" },
        "StandardAttributeDisplayValue": { "type": "string" },
        "StandardAttributeDisplayValueMl": { "type": "string" }
      }
    },
    "Webcom.API.Admin.TablesOnQuotes.QuoteTableColumnValidationRuleVm": {
      "description": "Quote table column validations representation",
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "description": "Gets or set validation identifier",
          "type": "integer"
        },
        "ColumnId": {
          "format": "int32",
          "description": "Gets or sets column identifier",
          "type": "integer"
        },
        "ValidationType": {
          "format": "int32",
          "description": "Gets or sets column validation type",
          "enum": [0, 1, 2, 3, 4],
          "type": "integer"
        },
        "ValidationCompareValue": {
          "description": "Gets or sets column validation value to compare with",
          "type": "string"
        },
        "ValidationMessage": {
          "description": "Gets or sets column validation message",
          "type": "string"
        },
        "Active": {
          "description": "Gets or sets active flag for validation",
          "type": "boolean"
        }
      }
    },
    "Webcom.API.Admin.TablesOnQuotes.QuoteTablePermissionResponse": {
      "description": "Quote table permission response",
      "type": "object",
      "properties": {
        "Permission": {
          "$ref": "#/definitions/Webcom.API.Admin.QuoteTable.QuoteTablePermissionItemVm",
          "description": "Gets or sets the permission."
        },
        "PermissionGroups": {
          "description": "Gets or sets the permission groups.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.Admin.TablesOnQuotes.PermissionGroupVm"
          }
        },
        "Statuses": {
          "description": "Gets or sets the statuses.",
          "type": "array",
          "items": { "$ref": "#/definitions/Webcom.API.IdNamePair" }
        }
      }
    },
    "Webcom.API.Admin.TablesOnQuotes.DefineColumnGroupsModelVm": {
      "description": "Define column group model response",
      "type": "object",
      "properties": {
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        },
        "Groups": {
          "description": "List of quote table Groups",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.Admin.TablesOnQuotes.QuoteTableColumnGroupVm"
          }
        },
        "TableId": {
          "format": "int32",
          "description": "Gets or sets the error message",
          "type": "integer"
        },
        "ParentGroupId": {
          "description": "Gets or sets the error message",
          "type": "string"
        },
        "ErrorMessage": {
          "description": "Gets or sets the error message",
          "type": "string"
        }
      }
    },
    "Webcom.API.Admin.TablesOnQuotes.TablesOnQuotesResponse": {
      "description": "Tables on quotes response",
      "type": "object",
      "properties": {
        "Tables": {
          "description": "Tables on quote list",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.Admin.TablesOnQuotes.TableOnQuoteVm"
          }
        }
      }
    },
    "Webcom.API.Admin.TablesOnQuotes.TableOnQuoteVm": {
      "description": "Represents table on quote",
      "type": "object",
      "properties": {
        "TableId": {
          "format": "int32",
          "description": "Table id",
          "type": "integer"
        },
        "TableName": { "description": "Table name", "type": "string" },
        "TabId": {
          "format": "int32",
          "description": "Tab id",
          "type": "integer"
        },
        "TabName": { "description": "Tab name", "type": "string" },
        "Rank": {
          "format": "int32",
          "description": "Table Rank",
          "type": "integer"
        },
        "IsProtecetedString": {
          "description": "Is protected string",
          "type": "string"
        }
      }
    },
    "Webcom.API.Admin.TablesOnQuotes.QuoteTableTranslationsVM": {
      "description": "Quote table translations view model",
      "type": "object",
      "properties": {
        "Dictionaries": {
          "description": "Gets or sets list of system and custom dictionaries",
          "type": "array",
          "items": { "$ref": "#/definitions/Webcom.API.IdNamePair" }
        },
        "AllTranslations": {
          "description": "Gets or sets list of dictionary translations",
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Webcom.API.Admin.TablesOnQuotes.QuoteTableTranslationVM"
            }
          }
        }
      }
    },
    "Webcom.API.Admin.TablesOnQuotes.QuoteTableTranslationVM": {
      "description": "Translation view model",
      "type": "object",
      "properties": {
        "Id": { "format": "int32", "description": "Id", "type": "integer" },
        "Value": { "description": "Value", "type": "string" },
        "Type": {
          "format": "int32",
          "description": "Translation type",
          "enum": [0, 1, 2, 3],
          "type": "integer"
        }
      }
    },
    "Webcom.API.Admin.SaveQuoteTableTranslationsRequest": {
      "type": "object",
      "properties": {
        "TableId": { "format": "int32", "type": "integer" },
        "DictionariesTranslations": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Webcom.API.Admin.TablesOnQuotes.QuoteTableTranslationVM"
            }
          }
        }
      }
    },
    "Webcom.API.Admin.TablesOnQuotes.QuoteTableActionsDataVm": {
      "description": "Represents quote table actions tab data",
      "type": "object",
      "properties": {
        "AllPermissionGroups": {
          "description": "Gets or sets all permission groups.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.Admin.TablesOnQuotes.PermissionGroupVm"
          }
        },
        "Actions": {
          "description": "Gets or sets the actions.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.Admin.TablesOnQuotes.QuoteTableActionVm"
          }
        }
      }
    },
    "Webcom.API.Admin.TablesOnQuotes.QuoteTableActionVm": {
      "description": "Represents Quote table action",
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "description": "Gets or sets the identifier.",
          "type": "integer"
        },
        "Name": { "description": "Gets or sets the name.", "type": "string" },
        "IsActive": {
          "description": "Gets or sets a value indicating whether this instance is active.",
          "type": "boolean"
        },
        "Script": {
          "description": "Gets or sets the script.",
          "type": "string"
        },
        "PreActionScript": {
          "description": "Gets or sets the pre action script.",
          "type": "string"
        },
        "PostActionScript": {
          "description": "Gets or sets the post action script.",
          "type": "string"
        },
        "Permissions": {
          "description": "Gets or sets the permissions.",
          "type": "array",
          "items": { "format": "int32", "type": "integer" }
        },
        "ActionType": {
          "format": "int32",
          "description": "Gets or sets the type of the action.",
          "enum": [0, 1, 2, 3, 4],
          "type": "integer"
        },
        "ForceProxyGenerationOptions": {
          "description": "Gets or sets the force proxy generation options.",
          "type": "array",
          "items": { "format": "int32", "enum": [1, 2, 3], "type": "integer" }
        }
      }
    },
    "Webcom.API.Admin.TablesOnQuotes.SaveQuoteTableActionsRequest": {
      "description": "Represents request for saving quote table actions",
      "type": "object",
      "properties": {
        "TableId": {
          "format": "int32",
          "description": "Gets or sets the table identifier.",
          "type": "integer"
        },
        "Actions": {
          "description": "Gets or sets the actions.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.Admin.TablesOnQuotes.QuoteTableActionVm"
          }
        }
      }
    },
    "Webcom.API.SetupSPA.Tenant.VM.TenantVM": {
      "description": "Tenant VM",
      "type": "object",
      "properties": {
        "UnitOfMeasurement": {
          "description": "Unit of measurement",
          "type": "string"
        },
        "DefaultCountry": {
          "description": "Default Country from AppParam (DEFAULT_COUNTRY)",
          "type": "string"
        },
        "DefaultDictionary": {
          "format": "int32",
          "description": "Default dictionary from AppParam (SEL_DEFAULT_DICT)",
          "type": "integer"
        },
        "UseNewSetup": { "description": "Use new setup", "type": "boolean" },
        "HideObsoleteFeatures": {
          "description": "Hide Obsolete Features",
          "type": "boolean"
        },
        "DisplayTableForSimpleProductRules": {
          "description": "Display simple rules data table on products",
          "type": "boolean"
        },
        "DefaultManagingParentId": {
          "format": "int32",
          "description": "Default managing parent id",
          "type": "integer"
        },
        "DefaultOrderingParentId": {
          "format": "int32",
          "description": "Default ordering parent id",
          "type": "integer"
        },
        "AllowedImageExtensions": {
          "description": "List of allowed image extensions",
          "type": "array",
          "items": { "type": "string" }
        },
        "AllowedProductConfigurationExtensions": {
          "description": "List of allowed product configuration extensions",
          "type": "array",
          "items": { "type": "string" }
        },
        "ProductRulesClientCaching": {
          "description": "One request with all records per table for product formula and simple rules and messages instead of classical server side pagination, sorting etc",
          "type": "boolean"
        },
        "SegregationSettingsApplied": {
          "description": "Are segregation settings applied",
          "type": "boolean"
        },
        "IsErpConnected": {
          "description": "Is ERP integration enabled",
          "type": "boolean"
        },
        "UseRecurringPrice": {
          "description": "Should use recurring price",
          "type": "boolean"
        },
        "UseDealStructure": {
          "description": "Use Deal structure",
          "type": "boolean"
        },
        "CanAddEditChangeSet": {
          "description": "Can Add/Edit Change Set",
          "type": "boolean"
        },
        "ShowOldUserImportExport": {
          "description": "Gets or sets a value indicating whether [use old user import export].",
          "type": "boolean"
        },
        "IsEditingRightPreferred": {
          "description": "Gets or sets value indicating weather editing right is prefered",
          "type": "boolean"
        },
        "CanSetPurposeOnCertificate": {
          "description": "Gets or sets value indicating weather user can set purpose on certificate",
          "type": "boolean"
        },
        "CpiNumberOfDecimalPlaces": {
          "format": "int32",
          "description": "Gets or sets number of decimal places used for formatting values in SAP integrations",
          "type": "integer"
        },
        "AutocompleteMaxSearchColumns": {
          "format": "int32",
          "description": "Gets max number of search columns for autocomplete attribute",
          "type": "integer"
        },
        "AutocompleteMaxDisplayColumns": {
          "format": "int32",
          "description": "Gets max number of display columns for autocomplete attribute",
          "type": "integer"
        }
      }
    },
    "Webcom.API.Internal.TenantUsage.TenantResourceConsumptionResponse": {
      "description": "Class TenantResourceConsumptionResponse",
      "type": "object",
      "properties": {
        "NumberOfActiveUsers": {
          "format": "int32",
          "description": "Gets or sets the number of active users.",
          "type": "integer"
        },
        "NumberOfUnusedUsers": {
          "format": "int32",
          "description": "Gets or sets the number of unused users.",
          "type": "integer"
        },
        "ResourceConsumption": {
          "$ref": "#/definitions/Webcom.API.Internal.TenantUsage.VM.ResourceConsumptionVM",
          "description": "Gets or sets the resource consumption."
        },
        "UserActivityResponse": {
          "$ref": "#/definitions/Webcom.API.Internal.TenantUsage.UserActivityResponse",
          "description": "Gets or sets the user activity response."
        },
        "TenantHistoricalData": {
          "description": "Gets or sets the tenant historical data.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.Internal.TenantUsage.VM.TenantHistoricalDataVM"
          }
        }
      }
    },
    "Webcom.API.Internal.TenantUsage.VM.ResourceConsumptionVM": {
      "description": "ResourceConsumptionVM",
      "type": "object",
      "properties": {
        "TenantName": {
          "description": "Gets or sets the name of the tenant.",
          "type": "string"
        },
        "DBSize": {
          "format": "double",
          "description": "Gets or sets the size of the database in MB.",
          "type": "number"
        },
        "FileSystemSize": {
          "format": "double",
          "description": "Gets or sets the size of the file system.",
          "type": "number"
        },
        "AllowedDBSize": {
          "format": "double",
          "description": "Gets or sets the allowed size of the database in MB.\r\nIf value is null, it means that the size is unlimited.",
          "type": "number"
        },
        "AllowedFileSystemSize": {
          "format": "double",
          "description": "Gets or sets the allowed size of file system in MB.\r\nIf value is null, it means that the size is unlimited.",
          "type": "number"
        },
        "AllowedNumberOfUsers": {
          "format": "int32",
          "description": "Gets or sets the allowed number of users.",
          "type": "integer"
        }
      }
    },
    "Webcom.API.Internal.TenantUsage.UserActivityResponse": {
      "description": "UserActivityResponse",
      "type": "object",
      "properties": {
        "SortMethod": {
          "description": "Gets or sets the sort method.",
          "type": "string"
        },
        "TotalUserLogins": {
          "format": "int32",
          "description": "Gets or sets the total user logins.",
          "type": "integer"
        },
        "TotalAdminLogins": {
          "format": "int32",
          "description": "Gets or sets the total admin logins.",
          "type": "integer"
        },
        "TotalUserCreated": {
          "format": "int32",
          "description": "Gets or sets the total user created.",
          "type": "integer"
        },
        "UserActivities": {
          "description": "Gets or sets the user activities.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.Internal.TenantUsage.VM.UserActivityVM"
          }
        },
        "ColumnsList": {
          "description": "Gets or sets the columns list.",
          "type": "array",
          "items": { "$ref": "#/definitions/Webcom.API.NameValuePair" }
        },
        "Pager": {
          "$ref": "#/definitions/Webcom.API.Common.Models.PagerVM",
          "description": "Gets or sets the pager."
        }
      }
    },
    "Webcom.API.Internal.TenantUsage.VM.TenantHistoricalDataVM": {
      "description": "TenantHistoricalDataVM",
      "type": "object",
      "properties": {
        "Month": { "description": "Gets or sets the month.", "type": "string" },
        "ProposalsSize": {
          "format": "double",
          "description": "Gets or sets the size of the proposals.",
          "type": "number"
        },
        "DbSize": {
          "format": "double",
          "description": "Gets or sets the size of the database.",
          "type": "number"
        },
        "DocumentsSize": {
          "format": "double",
          "description": "Gets or sets the size of the documents.",
          "type": "number"
        },
        "ImagesSize": {
          "format": "double",
          "description": "Gets or sets the size of the images.",
          "type": "number"
        }
      }
    },
    "Webcom.API.Internal.TenantUsage.VM.UserActivityVM": {
      "description": "UserActivityVM",
      "type": "object",
      "properties": {
        "Username": {
          "description": "Gets or sets the username.",
          "type": "string"
        },
        "UserLogins": {
          "format": "int32",
          "description": "Gets or sets the user logins.",
          "type": "integer"
        },
        "Usertype": {
          "description": "Gets or sets the usertype.",
          "type": "string"
        },
        "UsersCreated": {
          "format": "int32",
          "description": "Gets or sets the users created.",
          "type": "integer"
        },
        "AdminLogins": {
          "format": "int32",
          "description": "Gets or sets the admin logins.",
          "type": "integer"
        }
      }
    },
    "Webcom.API.Internal.TenantUsage.FilterRequest": {
      "description": "FilterRequest",
      "type": "object",
      "properties": {
        "CurrentPage": {
          "format": "int32",
          "description": "Gets or sets the current page.",
          "type": "integer"
        },
        "ItemsPerPage": {
          "format": "int32",
          "description": "Gets or sets the items per page.",
          "type": "integer"
        },
        "SortMethod": {
          "description": "Gets or sets the sort method.",
          "type": "string"
        },
        "OrderByColumn": {
          "description": "Gets or sets the order by column.",
          "type": "string"
        },
        "Search": {
          "description": "Gets or sets the search.",
          "type": "object",
          "additionalProperties": { "type": "string" }
        }
      }
    },
    "Webcom.API.Internal.TenantUsage.BusinessPerformanceResponse": {
      "description": "BusinessPerformanceResponse",
      "type": "object",
      "properties": {
        "TotalQuotes": {
          "format": "int32",
          "description": "Gets or sets the total quotes.",
          "type": "integer"
        },
        "SortMethod": {
          "description": "Gets or sets the sort method.",
          "type": "string"
        },
        "Totals": {
          "description": "Gets or sets the totals.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.Internal.TenantUsage.VM.TotalVM"
          }
        },
        "ColumnsList": {
          "description": "Gets or sets the columns list.",
          "type": "array",
          "items": { "$ref": "#/definitions/Webcom.API.NameValuePair" }
        },
        "Pager": {
          "$ref": "#/definitions/Webcom.API.Common.Models.PagerVM",
          "description": "Gets or sets the pager."
        },
        "BusinessPerformancePerUser": {
          "description": "Gets or sets the business performance per user.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.Internal.TenantUsage.VM.BusinessPerformanceVM"
          }
        }
      }
    },
    "Webcom.API.Internal.TenantUsage.VM.TotalVM": {
      "description": "TotalVM",
      "type": "object",
      "properties": {
        "Currency": {
          "description": "Gets or sets the currency.",
          "type": "string"
        },
        "Total": {
          "format": "double",
          "description": "Gets or sets the total.",
          "type": "number"
        },
        "Average": {
          "format": "double",
          "description": "Gets or sets the average.",
          "type": "number"
        }
      }
    },
    "Webcom.API.Internal.TenantUsage.VM.BusinessPerformanceVM": {
      "description": "BusinessPerformanceVM",
      "type": "object",
      "properties": {
        "Username": {
          "description": "Gets or sets the username.",
          "type": "string"
        },
        "UserType": {
          "description": "Gets or sets the type of the user.",
          "type": "string"
        },
        "QuoteNumber": {
          "description": "Gets or sets the quote number.",
          "type": "string"
        },
        "TotalAmount": {
          "description": "Gets or sets the total amount.",
          "type": "string"
        },
        "DateCreated": {
          "description": "Gets or sets the date created.",
          "type": "string"
        }
      }
    },
    "Webcom.API.Internal.TenantUsage.SystemPerformanceResponse": {
      "description": "SystemPerformanceResponse",
      "type": "object",
      "properties": {
        "TodayErrors": {
          "format": "int32",
          "description": "Gets or sets the today errors.",
          "type": "integer"
        },
        "LastWeekErrors": {
          "format": "int32",
          "description": "Gets or sets the last week errors.",
          "type": "integer"
        },
        "LastOccurredError": {
          "description": "Gets or sets the last occured error.",
          "type": "string"
        },
        "SinceLastLoginErrors": {
          "format": "int32",
          "description": "Gets or sets the since last login errors.",
          "type": "integer"
        }
      }
    },
    "Webcom.API.SetupSPA.Users.VM.UserVM": {
      "description": "User VM",
      "type": "object",
      "properties": {
        "Id": { "format": "int32", "description": "Id", "type": "integer" },
        "Username": { "description": "Username", "type": "string" },
        "Password": { "description": "Password", "type": "string" },
        "PasswordLocked": {
          "description": "Is password locked",
          "type": "boolean"
        },
        "MustChangePassword": {
          "description": "Must change password",
          "type": "boolean"
        },
        "ExpirationDate": {
          "description": "Expiration date",
          "type": "string"
        },
        "UserIdCode": { "description": "User id code", "type": "string" },
        "FirstName": { "description": "First name", "type": "string" },
        "LastName": { "description": "Last name", "type": "string" },
        "Email": { "description": "Email", "type": "string" },
        "Address1": { "description": "Address 1", "type": "string" },
        "Address2": { "description": "Address 2", "type": "string" },
        "City": { "description": "City", "type": "string" },
        "CountryId": { "description": "Country", "type": "string" },
        "StateId": { "description": "State", "type": "string" },
        "Province": { "description": "Province", "type": "string" },
        "TerritoryId": {
          "format": "int32",
          "description": "Territory id",
          "type": "integer"
        },
        "Phone": { "description": "Phone", "type": "string" },
        "Fax": { "description": "Fax", "type": "string" },
        "ZipCode": { "description": "ZIP code", "type": "string" },
        "Title": { "description": "Title", "type": "string" },
        "Active": { "description": "Is user active", "type": "boolean" },
        "IsAdmin": { "description": "Is user admin", "type": "boolean" },
        "FederationId": { "description": "Federation id", "type": "string" },
        "ManagingParentId": {
          "format": "int32",
          "description": "Managing parent id",
          "type": "integer"
        },
        "OrderingParentId": {
          "format": "int32",
          "description": "Ordering parent id",
          "type": "integer"
        },
        "ApproveParentId": {
          "format": "int32",
          "description": "Approve parent id",
          "type": "integer"
        },
        "CompanyId": {
          "format": "int32",
          "description": "Company id",
          "type": "integer"
        },
        "UserTypeId": {
          "format": "int32",
          "description": "User type id",
          "type": "integer"
        },
        "BrandId": {
          "format": "int32",
          "description": "Brand id",
          "type": "integer"
        },
        "Brand": { "description": "Brand", "type": "string" },
        "BlockedFromDeletion": {
          "description": "Is user blocked from deletion",
          "type": "boolean"
        },
        "Personalization": {
          "$ref": "#/definitions/Webcom.API.SetupSPA.Users.VM.UserPersonalizationVM",
          "description": "Personalization"
        },
        "CustomFields": {
          "description": "List of user custom fields",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.SetupSPA.Users.VM.UserCustomFieldVM"
          }
        }
      }
    },
    "Webcom.API.SetupSPA.Users.VM.UserPersonalizationVM": {
      "description": "User personalization VM",
      "type": "object",
      "properties": {
        "DefaultMarketId": {
          "format": "int32",
          "description": "Default market id",
          "type": "integer"
        },
        "DefaultPricebookId": {
          "format": "int32",
          "description": "Default pricebook id",
          "type": "integer"
        },
        "SelectedMLDictionary": {
          "format": "int32",
          "description": "Selected dictionary",
          "type": "integer"
        },
        "Timezone": { "description": "Timezone", "type": "string" },
        "AllowTimezoneChange": {
          "description": "Allow timezone change",
          "type": "boolean"
        },
        "ShowQuotesWithin": {
          "format": "int32",
          "description": "Show quotes within",
          "type": "integer"
        },
        "DateFormat": {
          "format": "int32",
          "description": "Date format",
          "enum": [0, 1, 2, 3, 4, 5],
          "type": "integer"
        },
        "DateSeparator": {
          "format": "int32",
          "description": "Date separator",
          "enum": [0, 1, 2],
          "type": "integer"
        },
        "NumberFormat": { "description": "Number format", "type": "string" },
        "SelectedUnitOfMeasurements": {
          "description": "List of selected units of measurement",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.SetupSPA.Users.VM.SelectedUnitOfMeasurementVM"
          }
        }
      }
    },
    "Webcom.API.SetupSPA.Users.VM.UserCustomFieldVM": {
      "description": "User custom field VM",
      "type": "object",
      "properties": {
        "Id": { "format": "int32", "description": "Id", "type": "integer" },
        "Label": { "description": "Label", "type": "string" },
        "FieldType": {
          "format": "int32",
          "description": "Field type",
          "type": "integer"
        },
        "Content": { "description": "Content", "type": "string" },
        "VisibleToAllDisplayType": {
          "format": "int32",
          "description": "Permissions",
          "type": "integer"
        },
        "Placeholder": {
          "description": "Placeholder for custom table attribute",
          "type": "string"
        },
        "AttributeValues": {
          "description": "Attribute values",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.Configurator.Core.Common.Lookup"
          }
        }
      }
    },
    "Webcom.API.SetupSPA.Users.VM.SelectedUnitOfMeasurementVM": {
      "type": "object",
      "properties": {
        "SelectedMeasurementId": { "format": "int32", "type": "integer" },
        "SelectedMeasurementName": { "type": "string" },
        "SelectedUnitOfMeasurementId": { "format": "int32", "type": "integer" },
        "SelectedUnitOfMeasurementName": { "type": "string" }
      }
    },
    "Webcom.Configurator.Core.Common.Lookup": {
      "type": "object",
      "properties": { "Id": { "type": "string" }, "Text": { "type": "string" } }
    },
    "Webcom.API.SetupSPA.Users.VM.AppUserVM": {
      "description": "Current, logged in user of the application",
      "type": "object",
      "properties": {
        "Username": { "description": "Username", "type": "string" },
        "Domain": { "description": "Username", "type": "string" },
        "DateFormat": { "description": "Date format", "type": "string" },
        "ShowObsoleteFeature": { "type": "boolean" },
        "UseNewQuoteEngine": {
          "description": "Use new quote engine is on",
          "type": "boolean"
        },
        "IdentityHash": {
          "description": "SHA256 (user id  + domain)",
          "type": "string"
        },
        "UserType": {
          "description": "User type of current user",
          "type": "string"
        },
        "UserInitials": {
          "description": "Initials of the current user",
          "type": "string"
        },
        "HiddenMenuItems": { "type": "array", "items": { "type": "string" } },
        "SecurityKey": { "type": "string" }
      }
    },
    "Webcom.API.SetupSPA.Users.VM.UserGeneralDefaultLookupVM": {
      "description": "Default values for general lookups",
      "type": "object",
      "properties": {
        "UserTypeId": { "format": "int32", "type": "integer" },
        "BrandingId": { "format": "int32", "type": "integer" }
      }
    },
    "Webcom.API.SetupSPA.Users.VM.UserAddressLookupVM": {
      "description": "User Lookup view model",
      "type": "object",
      "properties": {
        "Countries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.SetupSPA.Common.LookupVM[System.String]"
          }
        },
        "Territories": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.SetupSPA.Common.LookupVM"
          }
        }
      }
    },
    "Webcom.API.SetupSPA.Users.DateAndMarketLookupVM": {
      "description": "Date and market lookup view model",
      "type": "object",
      "properties": {
        "DateFormats": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.SetupSPA.Common.LookupVM"
          }
        },
        "DateSeparators": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.SetupSPA.Common.LookupVM"
          }
        },
        "NumberFormats": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.SetupSPA.Common.LookupVM[System.String]"
          }
        },
        "TimeZones": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.SetupSPA.Common.LookupVM[System.String]"
          }
        },
        "Measurements": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.SetupSPA.Users.VM.MeasurementVM"
          }
        }
      }
    },
    "Webcom.API.SetupSPA.Users.VM.MeasurementVM": {
      "type": "object",
      "properties": {
        "Id": { "format": "int32", "type": "integer" },
        "Name": { "type": "string" },
        "UnitsOfMeasurement": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.SetupSPA.Users.VM.UnitOfMeasurementVM"
          }
        },
        "DefaultUnitOfMeasurementId": { "format": "int32", "type": "integer" }
      }
    },
    "Webcom.API.SetupSPA.Users.VM.UnitOfMeasurementVM": {
      "type": "object",
      "properties": {
        "Id": { "format": "int32", "type": "integer" },
        "Text": { "type": "string" }
      }
    },
    "Webcom.API.SetupSPA.Users.VM.UserAdditionalSettingsLookupVM": {
      "description": "User Lookup view model",
      "type": "object",
      "properties": {
        "DefaultMarkets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.SetupSPA.Common.LookupVM"
          }
        },
        "DefaultPricebooks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.SetupSPA.Common.LookupVM"
          }
        },
        "DefaultDictionaries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.SetupSPA.Common.LookupVM"
          }
        },
        "ShowQuotesWithin": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.SetupSPA.Common.LookupVM"
          }
        },
        "ApprovalParents": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.SetupSPA.Common.LookupVM"
          }
        },
        "ManagingParents": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.SetupSPA.Common.LookupVM"
          }
        },
        "OrderingParents": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.SetupSPA.Common.LookupVM"
          }
        }
      }
    },
    "Webcom.API.SetupSPA.Users.UserCustomFieldDefnVM": {
      "type": "object",
      "properties": {
        "Id": { "format": "int32", "type": "integer" },
        "Name": { "type": "string" },
        "Rank": { "format": "int32", "type": "integer" },
        "PermissionType": { "format": "int32", "type": "integer" },
        "TypeId": { "format": "int32", "type": "integer" },
        "AttributeId": { "format": "int32", "type": "integer" },
        "Label": { "type": "string" },
        "StdAttrCode": { "format": "int32", "type": "integer" },
        "VisibleToAllDisplayType": { "format": "int32", "type": "integer" },
        "IsSensitive": { "type": "boolean" },
        "SelectedPermissions": {
          "$ref": "#/definitions/Webcom.API.SetupSPA.Users.SelectedPermissionsCollectionVM"
        },
        "MlValues": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.SetupSPA.Common.LookupVM"
          }
        }
      }
    },
    "Webcom.API.Common.Models.PagedDataVM[Webcom.API.SetupSPA.Users.VM.UserCustomFieldTableRowVM]": {
      "description": "Paged data for provided type",
      "type": "object",
      "properties": {
        "PagedRecords": {
          "description": "List of paged records",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.SetupSPA.Users.VM.UserCustomFieldTableRowVM"
          }
        },
        "TotalNumberOfRecords": {
          "format": "int32",
          "description": "Total number of records",
          "type": "integer"
        }
      }
    },
    "Webcom.API.SetupSPA.Users.VM.UserCustomFieldTableRowVM": {
      "description": "User Custom Field Table Row View Model",
      "type": "object",
      "properties": {
        "Id": { "format": "int32", "type": "integer" },
        "Name": { "type": "string" },
        "Label": { "type": "string" },
        "Rank": { "format": "int32", "type": "integer" },
        "Type": { "type": "string" },
        "IsSensitive": { "type": "boolean" }
      }
    },
    "System.Collections.Generic.KeyValuePair[System.Int32,System.Int32]": {
      "type": "object",
      "properties": {
        "key": { "format": "int32", "type": "integer" },
        "value": { "format": "int32", "type": "integer" }
      }
    },
    "Webcom.API.RD.UserPersonalization.UserPersonalizationVM": {
      "description": "View model that contains user personalization initial data",
      "type": "object",
      "properties": {
        "TenantName": {
          "description": "Gets or sets the tenant name value.",
          "type": "string"
        },
        "EffectiveDateValue": {
          "description": "Gets or sets the effective date value.",
          "type": "string"
        },
        "GrantAccessToAdminDate": {
          "description": "Gets or sets access to admin date.",
          "type": "string"
        },
        "GrantAccessToSupportDate": {
          "description": "Gets or sets access to support date.",
          "type": "string"
        },
        "DisplayNumberFormat": {
          "description": "Gets or sets a value indicating whether [display number format].",
          "type": "boolean"
        },
        "DisplayUseEffectiveDates": {
          "description": "Gets or sets a value indicating whether [display use effective dates].",
          "type": "boolean"
        },
        "OutOfOfficeStart": {
          "description": "Gets or sets out of office start date.",
          "type": "string"
        },
        "OutOfOfficeEnd": {
          "description": "Gets or sets out of office end date.",
          "type": "string"
        },
        "IsOutOfOfficeEnabled": {
          "description": "Gets or sets a value indicating whether this instance is out of office enabled.",
          "type": "boolean"
        },
        "EffectiveDateLabelText": {
          "description": "Gets or sets the effective date label text.",
          "type": "string"
        },
        "DateFormatLabelText": {
          "description": "Gets or sets the date format label text.",
          "type": "string"
        },
        "DateSeparatorLabelText": {
          "description": "Gets or sets the date separator label text.",
          "type": "string"
        },
        "NumberFormatLabelText": {
          "description": "Gets or sets the number format label text.",
          "type": "string"
        },
        "DefaultMarketLabelText": {
          "description": "Gets or sets the default market label text.",
          "type": "string"
        },
        "DefaultDictionaryLabelText": {
          "description": "Gets or sets the default dictionary label text.",
          "type": "string"
        },
        "DateFormats": {
          "description": "Gets or sets the date formats.",
          "type": "array",
          "items": { "$ref": "#/definitions/Webcom.API.IdNamePair" }
        },
        "DateSeparators": {
          "description": "Gets or sets the date separators.",
          "type": "array",
          "items": { "$ref": "#/definitions/Webcom.API.IdNamePair" }
        },
        "DefaultMarkets": {
          "description": "Gets or sets the default markets.",
          "type": "array",
          "items": { "$ref": "#/definitions/Webcom.API.IdNamePair" }
        },
        "MarketPricebooks": {
          "description": "Gets or sets market pricebooks.",
          "type": "array",
          "items": { "$ref": "#/definitions/Webcom.API.IdNamePair" }
        },
        "DefaultDictionaries": {
          "description": "Gets or sets the default dictionaries.",
          "type": "array",
          "items": { "$ref": "#/definitions/Webcom.API.IdNamePair" }
        },
        "TimeZones": {
          "description": "Gets or sets the time zones.",
          "type": "array",
          "items": { "$ref": "#/definitions/Webcom.API.NameValuePair" }
        },
        "UserDefaultNumberFormats": {
          "description": "Gets or sets the user default number formats.",
          "type": "array",
          "items": { "$ref": "#/definitions/Webcom.API.IdNamePair" }
        },
        "UnitsOfMeasurments": {
          "description": "Gets or sets the units of measurments.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.RD.UserPersonalization.MeasurementVM"
          }
        },
        "OutOfOfficeApprovers": {
          "description": "Gets or sets the out of office approvers list.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.RD.UserPersonalization.VM.UserVM"
          }
        },
        "SelectedDateFormat": {
          "format": "int32",
          "description": "Gets or sets the selected date format.",
          "type": "integer"
        },
        "SelectedDefaultMarket": {
          "format": "int32",
          "description": "Gets or sets the selected default market.",
          "type": "integer"
        },
        "SelectedDefaultPricebook": {
          "format": "int32",
          "description": "Gets or sets the selected default pricebook.",
          "type": "integer"
        },
        "SelectedDefaultDictionary": {
          "format": "int32",
          "description": "Gets or sets the selected default dictionary.",
          "type": "integer"
        },
        "SelectedTimeZone": {
          "description": "Gets or sets the selected time zone.",
          "type": "string"
        },
        "AllowTimeZoneChange": {
          "description": "Gets or sets a value indicating whether [allow timezone change].",
          "type": "boolean"
        },
        "GrantAccessToAdmin": {
          "format": "int32",
          "description": "Gets or sets if admin can log in as user.",
          "type": "integer"
        },
        "GrantAccessToSupport": {
          "format": "int32",
          "description": "Gets or sets if support can log in as user.",
          "type": "integer"
        },
        "SelectedUserDefaultNumberFormat": {
          "format": "int32",
          "description": "Gets or sets the selected user default number format.",
          "type": "integer"
        },
        "SelectedDateSeparator": {
          "format": "int32",
          "description": "Gets or sets the selected date separator.",
          "type": "integer"
        },
        "SelectedOutOfOfficeApprovers": {
          "description": "Gets or sets the selected out of office approver.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.RD.UserPersonalization.VM.UserVM"
          }
        },
        "HasQuotesToApprove": { "type": "object", "readOnly": true }
      }
    },
    "Webcom.API.RD.UserPersonalization.MeasurementVM": {
      "description": "View Model for RD.\r\nSelectedUnitOfMeasurement represents the unit that needs to be preselected (user has selected it or default unit)",
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "description": "Gets or sets the identifier.",
          "type": "integer"
        },
        "Name": { "description": "Gets or sets the name.", "type": "string" },
        "UnitOfMeasurements": {
          "description": "Gets or sets the unit of measurements.",
          "type": "array",
          "items": { "$ref": "#/definitions/Webcom.API.IdNamePair" }
        },
        "SelectedUnitOfMeasurementId": {
          "format": "int32",
          "description": "Gets or sets the selected unit of measurement identifier.",
          "type": "integer"
        }
      }
    },
    "Webcom.API.RD.UserPersonalization.VM.UserVM": {
      "description": "UserVM class",
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "description": "Gets or sets the identifier.",
          "type": "integer"
        },
        "FirstName": {
          "description": "Gets or sets the first name.",
          "type": "string"
        },
        "LastName": {
          "description": "Gets or sets the last name.",
          "type": "string"
        },
        "Email": { "description": "Gets or sets the email.", "type": "string" },
        "Country": {
          "description": "Gets or sets the country.",
          "type": "string"
        },
        "OutOfOffice": {
          "description": "Gets or sets the out of office.",
          "type": "string"
        },
        "IsBlocked": {
          "description": "Gets or sets whether user is blocked from deletion",
          "type": "boolean"
        }
      }
    },
    "Webcom.API.RD.UserPersonalization.ModifyPasswordInitVM": {
      "description": "View model with inital data for modify password action",
      "type": "object",
      "properties": {
        "FixAllErrorsMessage": {
          "description": "Gets or sets the fix all errors message.",
          "type": "string"
        }
      }
    },
    "Webcom.API.RD.UserPersonalization.ModifyDetailsInitVM": {
      "description": "View model with inital data for modify personal details action",
      "type": "object",
      "properties": {
        "FirstName": {
          "description": "Gets or sets the first name.",
          "type": "string"
        },
        "LastName": {
          "description": "Gets or sets the last name.",
          "type": "string"
        },
        "Email": { "description": "Gets or sets the email.", "type": "string" },
        "IdCode": {
          "description": "Gets or sets the identifier code.",
          "type": "string"
        },
        "Address1": {
          "description": "Gets or sets the address1.",
          "type": "string"
        },
        "Address2": {
          "description": "Gets or sets the address2.",
          "type": "string"
        },
        "City": { "description": "Gets or sets the city.", "type": "string" },
        "Country": {
          "description": "Gets or sets the country.",
          "type": "string"
        },
        "CountrySelectedId": {
          "format": "int32",
          "description": "Gets or sets the country selected identifier.",
          "type": "integer"
        },
        "State": { "description": "Gets or sets the state.", "type": "string" },
        "ZipCode": {
          "description": "Gets or sets the zip code.",
          "type": "string"
        },
        "Phone": { "description": "Gets or sets the phone.", "type": "string" },
        "Fax": { "description": "Gets or sets the fax.", "type": "string" },
        "Countries": {
          "description": "Gets or sets the countries.",
          "type": "array",
          "items": { "$ref": "#/definitions/Webcom.API.IdNamePair" }
        },
        "States": {
          "description": "Gets or sets the states.",
          "type": "array",
          "items": { "$ref": "#/definitions/Webcom.API.NameValuePair" }
        },
        "CustomFields": {
          "description": "Gets or sets the custom fields.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.RD.UserPersonalization.CustomFieldVM"
          }
        },
        "ValidationMessages": {
          "description": "Gets or sets the validation messages.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.RD.UserPersonalization.ValidationMessageVM"
          }
        },
        "FixAllErrorsMessage": {
          "description": "Gets or sets the fix all errors message.",
          "type": "string"
        }
      }
    },
    "Webcom.API.RD.UserPersonalization.CustomFieldVM": {
      "description": "Class that contains custom field properties",
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "description": "Gets or sets the identifier.",
          "type": "integer"
        },
        "Name": { "description": "Gets or sets the name.", "type": "string" },
        "Label": { "description": "Gets or sets the label.", "type": "string" },
        "Value": { "description": "Gets or sets the value.", "type": "string" },
        "FieldType": {
          "format": "int32",
          "description": "Gets or sets the type of the field.",
          "type": "integer"
        },
        "Enabled": {
          "description": "Gets or sets a value indicating whether this {Webcom.API.RD.UserPersonalization.CustomFieldVM} is enabled.",
          "type": "boolean"
        },
        "Required": {
          "description": "Gets or sets a value indicating whether this {Webcom.API.RD.UserPersonalization.CustomFieldVM} is required.",
          "type": "boolean"
        },
        "IsAutocomplete": {
          "description": "Gets or sets a value indicating whether this {Webcom.API.RD.UserPersonalization.CustomFieldVM} is autocomplete.",
          "type": "boolean"
        },
        "DropDownListOfValues": {
          "description": "Gets or sets the drop down list of values.",
          "type": "array",
          "items": { "type": "string" }
        },
        "StdAttrCode": {
          "format": "int32",
          "description": "Gets or sets stdAttrCodeIfAttribute.",
          "type": "integer"
        },
        "Placeholder": { "description": "", "type": "string" }
      }
    },
    "Webcom.API.RD.UserPersonalization.ValidationMessageVM": {
      "description": "Class that contains name of the field to be\r\nvalidated and message to be shown",
      "type": "object",
      "properties": {
        "FieldName": {
          "description": "Gets or sets the name of the field.",
          "type": "string"
        },
        "Message": {
          "description": "Gets or sets the message.",
          "type": "string"
        }
      }
    },
    "Webcom.API.RD.UserPersonalization.ChangedDateFormatRequest": {
      "description": "Class that contains data format change request",
      "type": "object",
      "properties": {
        "DateFormat": {
          "format": "int32",
          "description": "Gets or sets the date format.",
          "type": "integer"
        },
        "NewDateFormat": {
          "format": "int32",
          "description": "Gets or sets the new date format.",
          "type": "integer"
        },
        "DateSeparator": {
          "format": "int32",
          "description": "Gets or sets the date separator.",
          "type": "integer"
        },
        "NewDateSeparator": {
          "format": "int32",
          "description": "Gets or sets the new date separator.",
          "type": "integer"
        },
        "EffectiveDate": {
          "description": "Gets or sets the effective date.",
          "type": "string"
        },
        "GrantAccessAdminDate": {
          "description": "Grant access to Admin Date.",
          "type": "string"
        },
        "GrantAccessSupportDate": {
          "description": "Grant access to Support Date.",
          "type": "string"
        },
        "OutOfOfficeStart": {
          "description": "Gets or sets the out of office start.",
          "type": "string"
        },
        "OutOfOfficeEnd": {
          "description": "Gets or sets the out of office end.",
          "type": "string"
        }
      }
    },
    "Webcom.API.RD.UserPersonalization.GetStatesRequest": {
      "description": "Class that contains states request",
      "type": "object",
      "properties": {
        "CountryId": {
          "format": "int32",
          "description": "Gets or sets the country identifier.",
          "type": "integer"
        }
      }
    },
    "Webcom.API.RD.UserPersonalization.SavePersonalizationRequest": {
      "description": "View model container that holds data used\r\nfor saving personalization details",
      "type": "object",
      "properties": {
        "DateFormat": {
          "format": "int32",
          "description": "Gets or sets the date format.",
          "type": "integer"
        },
        "DateSeparator": {
          "format": "int32",
          "description": "Gets or sets the date separator.",
          "type": "integer"
        },
        "NumberFormat": {
          "format": "int32",
          "description": "Gets or sets the number format.",
          "type": "integer"
        },
        "MarketId": {
          "format": "int32",
          "description": "Gets or sets the market identifier.",
          "type": "integer"
        },
        "PricebookId": {
          "format": "int32",
          "description": "Gets or sets the pricebook identifier.",
          "type": "integer"
        },
        "DictionaryId": {
          "format": "int32",
          "description": "Gets or sets the dictionary identifier.",
          "type": "integer"
        },
        "TimeZoneId": {
          "description": "Gets or sets the time zone identifier.",
          "type": "string"
        },
        "GrantAccessToAdmin": {
          "format": "int32",
          "description": "Gets or sets if user grant access to admin.",
          "type": "integer"
        },
        "GrantAccessToAdminDate": {
          "description": "Gets or sets date until when admin can log in as user.",
          "type": "string"
        },
        "GrantAccessToSupport": {
          "format": "int32",
          "description": "Gets or sets if user grant access to support.",
          "type": "integer"
        },
        "GrantAccessToSupportDate": {
          "description": "Gets or sets date until when support can log in as user.",
          "type": "string"
        },
        "EffectiveDate": {
          "description": "Gets or sets the effective date.",
          "type": "string"
        },
        "SelectedUnitOfMeasurements": {
          "description": "Gets or sets the selected unit of measurements.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.RD.UserPersonalization.SelectedUnitOfMeasurmentVM"
          }
        },
        "OutOfOfficeApprovers": {
          "description": "Gets or sets the out of office approvers.",
          "type": "array",
          "items": { "format": "int32", "type": "integer" }
        },
        "OutOfOfficeStart": {
          "description": "Gets or sets the out of office start.",
          "type": "string"
        },
        "OutOfOfficeEnd": {
          "description": "Gets or sets the out of office end.",
          "type": "string"
        },
        "IsOutOfOfficeEnabled": {
          "description": "Gets or sets a value indicating whether this instance is out of office enabled.",
          "type": "boolean"
        }
      }
    },
    "Webcom.API.RD.UserPersonalization.SelectedUnitOfMeasurmentVM": {
      "description": "Class SelectedUnitOfMeasurmentVM.",
      "type": "object",
      "properties": {
        "SelectedMeasurementId": {
          "format": "int32",
          "description": "Gets or sets the selected measurement identifier.",
          "type": "integer"
        },
        "SelectedUnitOfMeasurementId": {
          "format": "int32",
          "description": "Gets or sets the selected unit of measurement identifier.",
          "type": "integer"
        }
      }
    },
    "Webcom.API.RD.UserPersonalization.SavePersonalizationResponse": {
      "description": "Class that contains save personalization result details",
      "type": "object",
      "properties": {
        "Succeeded": {
          "description": "Gets or sets a value indicating whether this {Webcom.API.RD.UserPersonalization.SavePersonalizationResponse} is succeeded.",
          "type": "boolean"
        },
        "Message": {
          "description": "Gets or sets the message.",
          "type": "string"
        }
      }
    },
    "Webcom.API.RD.UserPersonalization.SaveChangedPasswordRequest": {
      "description": "View model container that holds data used\r\nfor saving modify password details",
      "type": "object",
      "properties": {
        "UserName": {
          "description": "Gets or sets the name of the user.",
          "type": "string"
        },
        "Password": {
          "description": "Gets or sets the password.",
          "type": "string"
        },
        "NewPassword": {
          "description": "Gets or sets the new password.",
          "type": "string"
        },
        "NewRetypePassword": {
          "description": "Gets or sets the new retype password.",
          "type": "string"
        }
      }
    },
    "Webcom.API.RD.UserPersonalization.SaveChangedPasswordResponse": {
      "description": "View model container that holds data as an result\r\nfrom saving modify password details",
      "type": "object",
      "properties": {
        "MessageIsVisible": {
          "description": "Gets or sets a value indicating whether [message is visible].",
          "type": "boolean"
        },
        "Message": {
          "description": "Gets or sets the message.",
          "type": "string"
        }
      }
    },
    "Webcom.API.RD.UserPersonalization.SaveDetailsRequest": {
      "description": "Save user details modification request",
      "type": "object",
      "properties": {
        "FirstName": {
          "description": "Gets or sets the first name.",
          "type": "string"
        },
        "LastName": {
          "description": "Gets or sets the last name.",
          "type": "string"
        },
        "Email": { "description": "Gets or sets the email.", "type": "string" },
        "IdCode": {
          "description": "Gets or sets the identifier code.",
          "type": "string"
        },
        "Address1": {
          "description": "Gets or sets the address1.",
          "type": "string"
        },
        "Address2": {
          "description": "Gets or sets the address2.",
          "type": "string"
        },
        "City": { "description": "Gets or sets the city.", "type": "string" },
        "CountryId": {
          "format": "int32",
          "description": "Gets or sets the country identifier.",
          "type": "integer"
        },
        "State": { "description": "Gets or sets the state.", "type": "string" },
        "ZipCode": {
          "description": "Gets or sets the zip code.",
          "type": "string"
        },
        "Phone": { "description": "Gets or sets the phone.", "type": "string" },
        "Fax": { "description": "Gets or sets the fax.", "type": "string" },
        "CustomFields": {
          "description": "Gets or sets the custom fields.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.RD.UserPersonalization.CustomFieldVM"
          }
        }
      }
    },
    "Webcom.API.RD.UserPersonalization.SaveDetailsResponse": {
      "description": "Save user details modification response",
      "type": "object",
      "properties": {
        "InfoMessage": {
          "description": "Gets or sets the information message.",
          "type": "string"
        },
        "ShowInfoMessage": {
          "description": "Gets or sets a value indicating whether [show information message].",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors.",
          "type": "string"
        },
        "UserName": {
          "description": "Gets or sets the name of the user.",
          "type": "string"
        }
      }
    },
    "Webcom.Common.Provisioning.Entities.User": {
      "description": "User container that follows SCIM provided schema for representing Users, identified using the\r\nfollowing URI: 'urn:scim:schemas:core:1.0'.  The following attributes\r\nare defined in addition to those attributes defined in SCIM Core",
      "type": "object",
      "properties": {
        "userName": {
          "description": "Gets or sets unique identifier for the User, typically used by the user\r\nto directly authenticate to the service provider.  Often displayed\r\nto the user as their unique identifier within the system (as\r\nopposed to id or externalId, which are generally opaque and not\r\nuser-friendly identifiers).  Each User MUST include a non-empty\r\nuserName value.  This identifier MUST be unique across the Service\r\nConsumer's entire set of Users.  REQUIRED.",
          "type": "string"
        },
        "name": {
          "$ref": "#/definitions/Webcom.Common.Provisioning.Entities.Name",
          "description": "Gets or sets the components of the User's real name.  Providers MAY return\r\njust the full name as a single string in the formatted sub-\r\nattribute, or they MAY return just the individual component\r\nattributes using the other sub-attributes, or they MAY return\r\nboth.  If both variants are returned, they SHOULD be describing\r\nthe same name, with the formatted name indicating how the\r\ncomponent attributes should be combined."
        },
        "DisplayName": {
          "description": "Gets or sets the name of the User, suitable for display to end-users.\r\nEach User returned MAY include a non-empty displayName value.  The\r\nname SHOULD be the full name of the User being described if known\r\n(e.g.  Babs Jensen or Ms. Barbara J Jensen, III), but MAY be a\r\nusername or handle, if that is all that is available (e.g.\r\nbjensen).  The value provided SHOULD be the primary textual label\r\nby which this User is normally displayed by the Service Provider\r\nwhen presenting it to end-users.",
          "type": "string"
        },
        "NickName": {
          "description": "Gets or sets the casual way to address the user in real life, e.g.\r\n\"Bob\" or \"Bobby\" instead of \"Robert\".  This attribute SHOULD NOT\r\nbe used to represent a User's username (e.g. bjensen or\r\nmpepperidge).",
          "type": "string"
        },
        "ProfileUrl": {
          "description": "Gets or sets a fully qualified URL to a page representing the User's\r\nonline profile.",
          "type": "string"
        },
        "Title": {
          "description": "Gets or sets the user's title, such as \"Vice President.\"",
          "type": "string"
        },
        "UserType": {
          "description": "Gets or sets a value used to identify the organization to user relationship.\r\nTypical values used might be \"Contractor\", \"Employee\", \"Intern\",\r\n\"Temp\", \"External\", and \"Unknown\" but any value may be used.",
          "type": "string"
        },
        "PreferredLanguage": {
          "description": "Gets or sets the User's preferred written or spoken\r\nlanguage.  Generally used for selecting a localized User\r\ninterface.  Valid values are concatenation of the ISO 639-1 two\r\nletter language code http://www.loc.gov/standards/iso639-2/php/code_list.php, \r\nan underscore, and the ISO 3166-1 2\r\nletter country code http://www.iso.org/iso/country_codes/iso_3166_code_lists/country_names_and_code_elements.htm\r\n; e.g., 'en_US' specifies the language\r\nEnglish and country US.",
          "type": "string"
        },
        "Locale": {
          "description": "Gets or sets a value used to indicate the User's default location for purposes of\r\nlocalizing items such as currency, date time format, numerical\r\nrepresentations, etc.  A locale value is a concatenation of the\r\nISO 639-1 two letter language code http://www.loc.gov/standards/iso639-2/php/code_list.php ,\r\nan underscore, and the ISO\r\n3166-1 2 letter country code http://www.iso.org/iso/country_codes/iso_3166_code_lists/country_names_and_code_elements.htm;\r\n e.g., 'en_US' specifies the language English and country US.",
          "type": "string"
        },
        "Timezone": {
          "description": "Gets or sets the User's time zone in the \"Olson\" timezone database\r\nformat http://www.twinsun.com/tz/tz-link.htm; e.g.,'America/Los_Angeles'.",
          "type": "string"
        },
        "Password": {
          "description": "Gets or sets the User's clear text password.  This attribute is intended\r\nto be used as a means to specify an initial password when creating\r\na new User or to reset an existing User's password.  No accepted\r\nstandards exist to convey password policies, hence Consumers\r\nshould expect Service Providers to reject password values.  This\r\nvalue MUST never be returned by a Service Provider in any form.",
          "type": "string"
        },
        "Emails": {
          "description": "Gets or sets e-mail addresses for the User.  The value SHOULD be\r\ncanonicalized by the Service Provider, e.g. bjensen@example.com\r\ninstead of bjensen@EXAMPLE.COM.  Canonical Type values of work,\r\nhome, and other.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.Common.Provisioning.Entities.MultivaluedAttribute"
          }
        },
        "PhoneNumbers": {
          "description": "Gets or sets phone numbers for the User.  The value SHOULD be\r\ncanonicalized by the Service Provider according to format in\r\nRFC3966 http://tools.ietf.org/html/rfc3966 e.g. 'tel:+1-201-555-0123'.  Canonical Type values of\r\nwork, home, mobile, fax, pager and other.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.Common.Provisioning.Entities.MultivaluedAttribute"
          }
        },
        "Ims": {
          "description": "Gets or sets instant messaging address for the User.  No official\r\ncanonicalization rules exist for all instant messaging addresses,\r\nbut Service Providers SHOULD, when appropriate, remove all\r\nwhitespace and convert the address to lowercase.  Instead of the\r\nstandard Canonical Values for type, this attribute defines the\r\nfollowing Canonical Values to represent currently popular IM\r\nservices: aim, gtalk, icq, xmpp, msn, skype, qq, and yahoo",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.Common.Provisioning.Entities.MultivaluedAttribute"
          }
        },
        "PhotoUrls": {
          "description": "Gets or sets URL of a photo of the User.  The value SHOULD be a\r\ncanonicalized URL, and MUST point to an image file (e.g. a GIF,\r\nJPEG, or PNG image file) rather than to a web page containing an\r\nimage.  Service Providers MAY return the same image at different\r\nsizes, though it is recognized that no standard for describing\r\nimages of various sizes currently exists.  Note that this\r\nattribute SHOULD NOT be used to send down arbitrary photos taken\r\nby this User, but specifically profile photos of the User suitable\r\nfor display when describing the User.  Instead of the standard\r\nCanonical Values for type, this attribute defines the following\r\nCanonical Values to represent popular photo sizes: photo,\r\nthumbnail.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.Common.Provisioning.Entities.MultivaluedAttribute"
          }
        },
        "Addresses": {
          "description": "Gets or sets a physical mailing address for this User.  Canonical Type\r\nValues of work, home, and other.  The value attribute is a complex\r\ntype with the following sub-attributes.  All Sub-Attributes are\r\nOPTIONAL.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.Common.Provisioning.Entities.Address"
          }
        },
        "Groups": {
          "description": "Gets or sets a list of groups that the user belongs to, either thorough\r\ndirect membership, nested groups, or dynamically calculated.  The\r\nvalues are meant to enable expression of common group or role\r\nbased access control models, although no explicit authorization\r\nmodel is defined.  It is intended that the semantics of group\r\nmembership and any behavior or authorization granted as a result\r\nof membership are defined by the Service Provider.  The Canonical\r\ntypes \"direct\" and \"indirect\" are defined to describe how the\r\ngroup membership was derived.  Direct group membership indicates\r\nthe User is directly associated with the group and SHOULD indicate\r\nthat Consumers may modify membership through the Group Resource.\r\nIndirect membership indicates User membership is transitive or\r\ndynamic and implies that Consumers cannot modify indirect group\r\nmembership through the Group resource but MAY modify direct group\r\nmembership through the Group resource which MAY influence indirect\r\nmemberships.  If the SCIM Service Provider exposes a Group\r\nresource, the value MUST be the \"id\" attribute of the\r\ncorresponding Group resources to which the user belongs.  Since\r\nthis attribute is read-only, group membership changes MUST be\r\napplied via the Group Resource (Section 8).  READ-ONLY.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.Common.Provisioning.Entities.MultivaluedAttribute"
          }
        },
        "entitlements": {
          "description": "Gets or sets a list of entitlements for the User that represent a\r\nthing the User has.  That is, an entitlement is an additional\r\nright to a thing, object or service.  No vocabulary or syntax is\r\nspecified and Service Providers/Consumers are expected to encode\r\nsufficient information in the value so as to accurately and\r\nwithout ambiguity determine what the User has access to.  This\r\nvalue has NO canonical types though type may be useful as a means\r\nto scope entitlements.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.Common.Provisioning.Entities.MultivaluedAttribute"
          }
        },
        "Roles": {
          "description": "Gets or sets a list of roles for the User that collectively represent who\r\nthe User is; e.g., 'Student', \"Faculty\".  No vocabulary or syntax\r\nis specified though it is expected that a role value is a String\r\nor label representing a collection of entitlements.  This value\r\nhas NO canonical types.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.Common.Provisioning.Entities.MultivaluedAttribute"
          }
        },
        "CallidusUserExtenstion": {
          "$ref": "#/definitions/Webcom.Common.Provisioning.Entities.CallidusUserExtenstion",
          "description": "Gets or sets Callidus specific user's extension"
        },
        "ExternalId": {
          "description": "Gets or sets an identifier for the Resource as defined by the Service\r\nConsumer.  The externalId may simplify identification of the\r\nResource between Service Consumer and Service provider by allowing\r\nthe Consumer to refer to the Resource with its own identifier,\r\nobviating the need to store a local mapping between the local\r\nidentifier of the Resource and the identifier used by the Service\r\nProvider.  Each Resource MAY include a non-empty externalId value.\r\nThe value of the externalId attribute is always issued be the\r\nService Consumer and can never be specified by the Service\r\nProvider.  The Service Provider MUST always interpret the\r\nexternalId as scoped to the Service Consumer's tenant.",
          "type": "string"
        },
        "Meta": {
          "$ref": "#/definitions/Webcom.Common.Provisioning.Entities.Meta",
          "description": "Gets or sets a complex attribute containing resource metadata.  All sub-\r\nattributes are OPTIONAL"
        },
        "id": {
          "description": "Gets or sets unique identifier for the SCIM Resource as defined by the Service\r\nProvider.  Each representation of the Resource MUST include a non-\r\nempty id value.  This identifier MUST be unique across the Service\r\nProvider's entire set of Resources.  It MUST be a stable, non-\r\nre-assignable identifier that does not change when the same\r\nResource is returned in subsequent requests.  The value of the id\r\nattribute is always issued by the Service Provider and MUST never\r\nbe specified by the Service Consumer.",
          "type": "string"
        }
      }
    },
    "Webcom.Common.Provisioning.Entities.Name": {
      "description": "The components of the User's real name.  Providers MAY return\r\njust the full name as a single string in the formatted sub-\r\nattribute, or they MAY return just the individual component\r\nattributes using the other sub-attributes, or they MAY return\r\nboth.  If both variants are returned, they SHOULD be describing\r\nthe same name, with the formatted name indicating how the\r\ncomponent attributes should be combined.",
      "type": "object",
      "properties": {
        "Formatted": {
          "description": "Gets or sets the full name, including all middle names, titles, and\r\nsuffixes as appropriate, formatted for display (e.g.  Ms.\r\nBarbara Jane Jensen, III.)",
          "type": "string"
        },
        "familyName": {
          "description": "Gets or sets the family name of the User, or \"Last Name\" in most\r\nWestern languages (e.g.  Jensen given the full name Ms. Barbara\r\nJane Jensen, III.)",
          "type": "string"
        },
        "givenName": {
          "description": "Gets or sets the given name of the User, or \"First Name\" in most\r\nWestern languages (e.g.  Barbara given the full name Ms.\r\nBarbara Jane Jensen, III.)",
          "type": "string"
        },
        "MiddleName": {
          "description": "Gets or sets the middle name(s) of the User (e.g.  Jane given the\r\nfull name Ms. Barbara Jane Jensen, III.)",
          "type": "string"
        },
        "HonorificPrefix": {
          "description": "Gets or sets the honorific prefix(es) of the User, or \"Title\"\r\nin most Western languages (e.g.  Ms. given the full name Ms.\r\nBarbara Jane Jensen, III.",
          "type": "string"
        },
        "HonorificSuffix": {
          "description": "Gets or sets the honorific suffix(es) of the User, or \"Suffix\"\r\nin most Western languages (e.g.  III. given the full name Ms.\r\nBarbara Jane Jensen, III.)",
          "type": "string"
        }
      }
    },
    "Webcom.Common.Provisioning.Entities.Address": {
      "description": "A physical mailing address for this User.  Canonical Type\r\nValues of work, home, and other.  The value attribute is a complex\r\ntype with the following sub-attributes.  All Sub-Attributes are\r\nOPTIONAL.",
      "type": "object",
      "properties": {
        "Formatted": {
          "description": "Gets or sets the full mailing address, formatted for display or use\r\nwith a mailing label.  This attribute MAY contain newlines.",
          "type": "string"
        },
        "StreetAddress": {
          "description": "Gets or sets the full street address component, which may\r\ninclude house number, street name, P.O. box, and multi-line\r\nextended street address information.  This attribute MAY\r\ncontain newlines.",
          "type": "string"
        },
        "Locality": {
          "description": "Gets or sets the city or locality component.",
          "type": "string"
        },
        "Region": {
          "description": "Gets or sets the state or region component.",
          "type": "string"
        },
        "PostalCode": {
          "description": "Gets or sets the zip code or postal code component.",
          "type": "string"
        },
        "Country": {
          "description": "Gets or sets the country name component.  When specified the value\r\nMUST be in ISO 3166-1 alpha 2 \"short\" code format \r\nhttp://www.iso.org/iso/country_codes/iso_3166_code_lists/country_names_and_code_elements.htm; e.g.,\r\nthe United States and Sweden are \"US\" and \"SE\", respectively.",
          "type": "string"
        }
      }
    },
    "Webcom.Common.Provisioning.Entities.CallidusUserExtenstion": {
      "type": "object",
      "properties": {
        "Domain": {
          "description": "Gets or sets user's domain",
          "type": "string"
        },
        "Data": {
          "description": "Gets or sets user's data for specific applications",
          "type": "object",
          "additionalProperties": { "type": "object" }
        }
      }
    },
    "Webcom.API.Admin.UsersPermissionGroups.UsersPermissionGroupsResponse": {
      "description": "Represents Users group permission response",
      "type": "object",
      "properties": {
        "PermissionId": {
          "format": "int32",
          "description": "Gets or sets permission id",
          "type": "integer"
        },
        "PermissionName": {
          "description": "Gets or sets permission name",
          "type": "string"
        },
        "SystemId": {
          "description": "Gets or sets permission system id",
          "type": "string"
        },
        "Description": {
          "description": "Gets or sets permission description",
          "type": "string"
        },
        "PermissionCondition": {
          "description": "Gets or sets permission condition",
          "type": "string"
        },
        "SelectedPermissions": {
          "description": "Gets or sets currently selected permission groups",
          "type": "array",
          "items": { "type": "string" }
        },
        "PermissionGroups": {
          "description": "Gets or sets all available permission groups",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.Admin.UsersPermissionGroups.UserPermissionVm"
          }
        },
        "PermissionUsers": {
          "description": "Gets or sets currently selected permission users",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.Admin.UsersPermissionGroups.UserPermissionVm"
          }
        }
      }
    },
    "Webcom.API.Admin.UsersPermissionGroups.UserPermissionVm": {
      "type": "object",
      "properties": {
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        },
        "PermissionType": {
          "format": "int32",
          "description": "Gets or sets the type of the permission.",
          "type": "integer"
        },
        "Name": { "description": "Gets or sets the name.", "type": "string" }
      }
    },
    "Webcom.API.Admin.UsersPermissionGroups.UsersPermissionGroupsVm": {
      "description": "Represents Users permission item",
      "type": "object",
      "properties": {
        "PermissionId": {
          "format": "int32",
          "description": "Gets or sets permission id",
          "type": "integer"
        },
        "Name": {
          "description": "Gets or sets name of permission",
          "type": "string"
        },
        "SystemId": {
          "description": "Gets or sets system id of permission",
          "type": "string"
        },
        "Description": {
          "description": "Gets or sets description for permission",
          "type": "string"
        },
        "PermissionGroups": {
          "description": "Gets or sets all permission groups for permission",
          "type": "array",
          "items": { "type": "string" }
        },
        "Condition": {
          "description": "Gets or sets condition for permission",
          "type": "string"
        },
        "ActionType": {
          "format": "int32",
          "description": "Type of action performed (copy, new, edit)",
          "type": "integer"
        }
      }
    },
    "Webcom.API.Admin.UsersPermissionGroups.UserPermissionUserVm": {
      "type": "object",
      "properties": {
        "Id": { "description": "User id", "type": "string" },
        "Name": { "description": "Name of user", "type": "string" },
        "Username": { "description": "Username of user", "type": "string" },
        "Email": { "description": "Email of user", "type": "string" },
        "UserType": { "description": "Name of user type", "type": "string" },
        "Company": { "description": "Name of company", "type": "string" },
        "Brand": { "description": "Name of brand", "type": "string" },
        "Active": { "description": "Is user active", "type": "string" }
      }
    },
    "Webcom.API.Admin.UsersPermissionGroups.UserListPaginationVM": {
      "type": "object",
      "properties": {
        "UserList": {
          "description": "List of user permissions",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.Admin.UsersPermissionGroups.UserPermissionUserVm"
          }
        },
        "HasNext": {
          "description": "Indicates if there are more results available",
          "type": "boolean"
        },
        "CurrentPage": {
          "format": "int32",
          "description": "Current page number",
          "type": "integer"
        },
        "PageSize": {
          "format": "int32",
          "description": "Number of users on current page",
          "type": "integer"
        },
        "TotalRecords": {
          "format": "int32",
          "description": "Total number of users on all pages",
          "type": "integer"
        }
      }
    },
    "Webcom.API.Admin.UsersPermissionGroups.UserPermissionListVM": {
      "description": "Contains list of all user permissions, current page and page size for paging",
      "type": "object",
      "properties": {
        "PermissionList": {
          "description": "List of all permission IDs",
          "type": "array",
          "items": { "type": "string" }
        },
        "Page": {
          "format": "int32",
          "description": "Current page for paging",
          "type": "integer"
        },
        "Size": {
          "format": "int32",
          "description": "Current page size for paging",
          "type": "integer"
        }
      }
    },
    "Webcom.API.Common.Models.PagedDataVM[Webcom.API.SetupSPA.Users.VM.UserTypeTableRowVM]": {
      "description": "Paged data for provided type",
      "type": "object",
      "properties": {
        "PagedRecords": {
          "description": "List of paged records",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.SetupSPA.Users.VM.UserTypeTableRowVM"
          }
        },
        "TotalNumberOfRecords": {
          "format": "int32",
          "description": "Total number of records",
          "type": "integer"
        }
      }
    },
    "Webcom.API.SetupSPA.Users.VM.UserTypeTableRowVM": {
      "type": "object",
      "properties": {
        "Id": { "format": "int32", "type": "integer" },
        "GroupName": { "type": "string" },
        "GroupDescription": { "type": "string" },
        "StartPage": { "type": "string" },
        "XSLTFile": { "type": "string" },
        "StartCategory": { "type": "string" },
        "AllowIncomplete": { "type": "boolean" }
      }
    },
    "Webcom.API.SetupSPA.Users.VM.UserTypeVM": {
      "type": "object",
      "properties": {
        "Id": { "format": "int32", "type": "integer" },
        "SystemId": { "type": "string" },
        "Name": { "type": "string" },
        "Description": { "type": "string" },
        "StartCategoryName": { "type": "string" },
        "StartCategoryId": { "format": "int32", "type": "integer" },
        "StartPage": { "type": "string" },
        "DefaultCategoryViewId": { "format": "int32", "type": "integer" },
        "AllowIncomplete": { "type": "boolean" },
        "HasSearch": { "type": "boolean" },
        "CustomerRequired": { "type": "boolean" },
        "ShowPrices": { "type": "boolean" },
        "CartTypeXslt": { "type": "string" },
        "CheckoutXslt": { "type": "string" },
        "PlaceOrderXslt": { "type": "string" },
        "MyQuoteXslt": { "type": "string" },
        "WaitingApprovalXslt": { "type": "string" },
        "OtherQuotesXslt": { "type": "string" },
        "PreviewStylesXslt": { "type": "string" },
        "LandingProductSystemId": { "type": "string" },
        "UserEntryStartPage": { "type": "boolean" },
        "NotVisibleViewIds": {
          "type": "array",
          "items": { "format": "int32", "type": "integer" }
        },
        "DisplayTreeNavigation": { "type": "boolean" },
        "CustomTemplates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.MVC.Customizations.CustomResponsiveTemplatesSummary"
          }
        }
      }
    },
    "Webcom.MVC.Customizations.CustomResponsiveTemplatesSummary": {
      "type": "object",
      "properties": {
        "<ResponsiveTemplateId>k__BackingField": {
          "format": "int32",
          "type": "integer"
        },
        "<CustomResponsiveTemplateId>k__BackingField": {
          "format": "int32",
          "type": "integer"
        },
        "<CustomTemplateName>k__BackingField": { "type": "string" },
        "<PageName>k__BackingField": { "type": "string" },
        "<TemplateName>k__BackingField": { "type": "string" },
        "<IsDefault>k__BackingField": { "type": "boolean" }
      }
    },
    "Webcom.API.Common.Models.PagedDataVM[Webcom.MVC.Customizations.CustomResponsiveTemplatesSummary]": {
      "description": "Paged data for provided type",
      "type": "object",
      "properties": {
        "PagedRecords": {
          "description": "List of paged records",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.MVC.Customizations.CustomResponsiveTemplatesSummary"
          }
        },
        "TotalNumberOfRecords": {
          "format": "int32",
          "description": "Total number of records",
          "type": "integer"
        }
      }
    },
    "Webcom.API.Common.Models.PagedDataVM[Webcom.API.SetupSPA.ViewExportPII.VM.QuoteVM]": {
      "description": "Paged data for provided type",
      "type": "object",
      "properties": {
        "PagedRecords": {
          "description": "List of paged records",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.SetupSPA.ViewExportPII.VM.QuoteVM"
          }
        },
        "TotalNumberOfRecords": {
          "format": "int32",
          "description": "Total number of records",
          "type": "integer"
        }
      }
    },
    "Webcom.API.SetupSPA.ViewExportPII.VM.QuoteVM": {
      "description": "Quote VM",
      "type": "object",
      "properties": {
        "CartCompositeNumber": {
          "description": "Cart composite number",
          "type": "string"
        },
        "QuoteOwner": { "description": "Quote owner", "type": "string" },
        "CustomerFullName": {
          "description": "Customer full name",
          "type": "string"
        },
        "QuoteStatus": { "description": "Quote status", "type": "string" },
        "DateCreated": { "description": "Date created", "type": "string" },
        "DateModified": { "description": "Date modified", "type": "string" },
        "Approver": { "description": "Approver full name", "type": "string" },
        "CartLink": { "description": "Cart Link", "type": "string" },
        "IsApprover": { "description": "Approver Id", "type": "boolean" },
        "IsOwner": { "description": "Owner Id", "type": "boolean" },
        "IsPerformer": {
          "description": "Is Performer",
          "type": "boolean",
          "readOnly": true
        }
      }
    },
    "Webcom.API.Common.Models.PagedDataVM[Webcom.API.SetupSPA.ViewExportPII.VM.QuoteCustomFieldVM]": {
      "description": "Paged data for provided type",
      "type": "object",
      "properties": {
        "PagedRecords": {
          "description": "List of paged records",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.SetupSPA.ViewExportPII.VM.QuoteCustomFieldVM"
          }
        },
        "TotalNumberOfRecords": {
          "format": "int32",
          "description": "Total number of records",
          "type": "integer"
        }
      }
    },
    "Webcom.API.SetupSPA.ViewExportPII.VM.QuoteCustomFieldVM": {
      "description": "QuoteCustomField VM",
      "type": "object",
      "properties": {
        "Id": {
          "description": "Unique Id made from CARD_ID, USERID and PARAMID from SCPARAMS, devided by '-'",
          "type": "string"
        },
        "TabName": {
          "description": "Name of the tab containing Custom Field",
          "type": "string"
        },
        "QuoteOwnerName": {
          "description": "Quote Owner Name",
          "type": "string"
        },
        "CustomFieldName": {
          "description": "Custom Field Name",
          "type": "string"
        },
        "QuoteCompositeNumber": {
          "description": "Quote Composite Number",
          "type": "string"
        },
        "Content": { "description": "Content of the Field", "type": "string" },
        "CartLink": { "description": "Cart link", "type": "string" }
      }
    },
    "Webcom.API.Common.Models.PagedDataVM[Webcom.API.SetupSPA.ViewExportPII.VM.CustomTableRecordVM]": {
      "description": "Paged data for provided type",
      "type": "object",
      "properties": {
        "PagedRecords": {
          "description": "List of paged records",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.SetupSPA.ViewExportPII.VM.CustomTableRecordVM"
          }
        },
        "TotalNumberOfRecords": {
          "format": "int32",
          "description": "Total number of records",
          "type": "integer"
        }
      }
    },
    "Webcom.API.SetupSPA.ViewExportPII.VM.CustomTableRecordVM": {
      "description": "Custom Table Record VM",
      "type": "object",
      "properties": {
        "Id": { "description": "Id", "type": "string" },
        "Content": { "description": "Content", "type": "string" },
        "TableName": { "description": "Table name", "type": "string" },
        "ColumnName": { "description": "Column name", "type": "string" },
        "DateModified": { "description": "Date modified", "type": "string" },
        "ModifiedBy": { "description": "Modified by", "type": "string" }
      }
    },
    "Webcom.API.Common.Models.PagedDataVM[Webcom.API.SetupSPA.ViewExportPII.VM.QuoteTableVM]": {
      "description": "Paged data for provided type",
      "type": "object",
      "properties": {
        "PagedRecords": {
          "description": "List of paged records",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.SetupSPA.ViewExportPII.VM.QuoteTableVM"
          }
        },
        "TotalNumberOfRecords": {
          "format": "int32",
          "description": "Total number of records",
          "type": "integer"
        }
      }
    },
    "Webcom.API.SetupSPA.ViewExportPII.VM.QuoteTableVM": {
      "type": "object",
      "properties": {
        "Id": { "description": "Id", "type": "string" },
        "QuoteTableLabel": { "description": "Label", "type": "string" },
        "QuoteTableName": { "description": "Name", "type": "string" },
        "CartCompositeNumber": { "description": "CCN", "type": "string" },
        "TabName": { "description": "Quote Tab", "type": "string" },
        "ColumnName": { "description": "Column name", "type": "string" },
        "DateModify": { "description": "Date Modify", "type": "string" },
        "ColumnValue": { "description": "Column Value", "type": "string" },
        "CartLink": {
          "description": "CartLink",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "Webcom.API.Common.Models.PagedDataVM[Webcom.API.SetupSPA.ViewExportPII.VM.QuoteItemCustomFieldVM]": {
      "description": "Paged data for provided type",
      "type": "object",
      "properties": {
        "PagedRecords": {
          "description": "List of paged records",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.SetupSPA.ViewExportPII.VM.QuoteItemCustomFieldVM"
          }
        },
        "TotalNumberOfRecords": {
          "format": "int32",
          "description": "Total number of records",
          "type": "integer"
        }
      }
    },
    "Webcom.API.SetupSPA.ViewExportPII.VM.QuoteItemCustomFieldVM": {
      "type": "object",
      "properties": {
        "Id": { "description": "Unique String Id", "type": "string" },
        "Content": { "description": "Content", "type": "string" },
        "QuoteItemCustomFieldName": {
          "description": "Quote Item Custom Field Name",
          "type": "string"
        },
        "Label": { "description": "Label", "type": "string" },
        "QuoteCompositeNumber": {
          "description": "Quote Composite Number",
          "type": "string"
        },
        "ProductName": { "description": "Product Name", "type": "string" },
        "DateModified": { "description": "Date modified", "type": "string" },
        "CartLink": { "description": "Date modified", "type": "string" }
      }
    },
    "Webcom.API.Common.Models.PagedDataVM[Webcom.API.SetupSPA.ViewExportPII.VM.UserCustomFieldPIIVM]": {
      "description": "Paged data for provided type",
      "type": "object",
      "properties": {
        "PagedRecords": {
          "description": "List of paged records",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.SetupSPA.ViewExportPII.VM.UserCustomFieldPIIVM"
          }
        },
        "TotalNumberOfRecords": {
          "format": "int32",
          "description": "Total number of records",
          "type": "integer"
        }
      }
    },
    "Webcom.API.SetupSPA.ViewExportPII.VM.UserCustomFieldPIIVM": {
      "type": "object",
      "properties": {
        "Id": { "type": "string" },
        "Content": { "type": "string" },
        "CustomFieldName": { "type": "string" },
        "CustomFieldLabel": { "type": "string" },
        "OnUser": { "type": "string" }
      }
    },
    "Webcom.API.Common.Models.PagedDataVM[Webcom.API.SetupSPA.ViewExportPII.VM.CustomerCustomFieldPIIVM]": {
      "description": "Paged data for provided type",
      "type": "object",
      "properties": {
        "PagedRecords": {
          "description": "List of paged records",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.SetupSPA.ViewExportPII.VM.CustomerCustomFieldPIIVM"
          }
        },
        "TotalNumberOfRecords": {
          "format": "int32",
          "description": "Total number of records",
          "type": "integer"
        }
      }
    },
    "Webcom.API.SetupSPA.ViewExportPII.VM.CustomerCustomFieldPIIVM": {
      "type": "object",
      "properties": {
        "Id": { "type": "string" },
        "Content": { "type": "string" },
        "CustomFieldName": { "type": "string" },
        "CustomFieldLabel": { "type": "string" },
        "OnCustomer": { "type": "string" }
      }
    },
    "Webcom.API.SetupSPA.ViewExportPII.VM.SubjectBeingSearchedForVM": {
      "description": "SubjectBeingSearchedFor VM",
      "type": "object",
      "properties": {
        "SubjectFullName": {
          "description": "Full name of subject being searched",
          "type": "string"
        },
        "SubjectType": {
          "description": "Type of subject being searched (user or customer)",
          "type": "string"
        }
      }
    },
    "Webcom.API.SetupSPA.ViewExportPII.VM.ExportTablesInfoVM": {
      "description": "Export Tables Info VM",
      "type": "object",
      "properties": {
        "IsUser": {
          "description": "Value indicating whether data is associated with user",
          "type": "boolean"
        },
        "PersonId": {
          "format": "int32",
          "description": "Person Id",
          "type": "integer"
        },
        "ExportOption": {
          "format": "int32",
          "description": "Export Option",
          "enum": [0, 1],
          "type": "integer"
        },
        "Quotes": {
          "$ref": "#/definitions/Webcom.API.SetupSPA.ViewExportPII.VM.TableSelectedRowsVM",
          "description": "Quotes"
        },
        "CustomTables": {
          "$ref": "#/definitions/Webcom.API.SetupSPA.ViewExportPII.VM.TableSelectedRowsVM",
          "description": "Custom Tables"
        },
        "QuoteTables": {
          "$ref": "#/definitions/Webcom.API.SetupSPA.ViewExportPII.VM.TableSelectedRowsVM",
          "description": "Quote Tables"
        },
        "CustomFields": {
          "$ref": "#/definitions/Webcom.API.SetupSPA.ViewExportPII.VM.TableSelectedRowsVM",
          "description": "Custom Fields"
        },
        "QuoteItemCustomFields": {
          "$ref": "#/definitions/Webcom.API.SetupSPA.ViewExportPII.VM.TableSelectedRowsVM",
          "description": "Quote Item Custom Fields"
        },
        "UserCustomFields": {
          "$ref": "#/definitions/Webcom.API.SetupSPA.ViewExportPII.VM.TableSelectedRowsVM",
          "description": "User Custom Fields"
        },
        "CustomerCustomFields": {
          "$ref": "#/definitions/Webcom.API.SetupSPA.ViewExportPII.VM.TableSelectedRowsVM",
          "description": "Customer Custom Fields"
        }
      }
    },
    "Webcom.API.SetupSPA.ViewExportPII.VM.TableSelectedRowsVM": {
      "description": "Table Selected Rows VM",
      "type": "object",
      "properties": {
        "TableName": {
          "format": "int32",
          "description": "Table Name",
          "enum": [0, 1, 2, 3, 4, 5, 6],
          "type": "integer"
        },
        "SelectAll": {
          "description": "Value indicating whether 'Select all' checkbox is checked",
          "type": "boolean"
        },
        "SelectedIds": {
          "description": "Selected Rows Ids",
          "type": "array",
          "items": { "type": "string" }
        },
        "NumberOfRecords": {
          "format": "int32",
          "description": "Number of Records",
          "type": "integer"
        },
        "SelectedColumns": {
          "description": "Selected Columns",
          "type": "array",
          "items": { "format": "int32", "type": "integer" }
        }
      }
    },
    "Webcom.API.Common.Models.PagedDataVM[Webcom.API.SetupSPA.Wsdl.WsdlSettingsVM]": {
      "description": "Paged data for provided type",
      "type": "object",
      "properties": {
        "PagedRecords": {
          "description": "List of paged records",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webcom.API.SetupSPA.Wsdl.WsdlSettingsVM"
          }
        },
        "TotalNumberOfRecords": {
          "format": "int32",
          "description": "Total number of records",
          "type": "integer"
        }
      }
    },
    "Webcom.API.SetupSPA.Wsdl.WsdlSettingsVM": {
      "type": "object",
      "properties": {
        "Id": { "format": "int32", "type": "integer" },
        "Url": { "type": "string" },
        "Wsdl": { "type": "string" },
        "WsdlName": { "type": "string" }
      }
    },
    "Webcom.API.SetupSPA.WsdlManagement.VM.WsdlFileVM": {
      "type": "object",
      "properties": {
        "Name": { "type": "string" },
        "Content": { "type": "string" }
      }
    }
  }
}
